{
    "main_text": "Other Logics || Higher-Order Logic\n3.1 Higher-Order Logic\n\nHigher-order logic differs from first-order logic in that\nquantification over functions and predicates is allowed. The statement\n\u201cAny two people are related to each other in one way or\nanother\u201d can be legally expressed in higher-order logic as\n\u2200x\u2200y\u2203RR(x,y)\nbut not in first-order logic. Higher-order logic is inherently more\nexpressive than first-order logic and is closer in spirit to actual\nmathematical reasoning. For example, the notion of set finiteness\ncannot be expressed as a first-order concept. Due to its richer\nexpressiveness, it should not come as a surprise that implementing an\nautomated theorem prover for higher-order logic is more challenging\nthan for first-order logic. This is largely due to the fact that\nunification in higher-order logic is more complex than in the\nfirst-order case: unifiable terms do not always possess a most general\nunifier, and higher-order unification is itself undecidable. Finally,\ngiven that higher-order logic is incomplete, there are always proofs\nthat will be entirely out of reach for any automated reasoning\nprogram.\n\nMethods used to automate first-order deduction can be adapted to\nhigher-order logic. TPS (Andrews et al. 1996, Andrews et\nal. 2006) is a theorem proving system for higher-order logic that\nuses Church\u2019s typed \u03bb-calculus as its logical representation\nlanguage and is based on a connection-type deduction mechanism that\nincorporates Huet\u2019s unification algorithm (Huet 1975). As a sample of\nthe capabilities of TPS, the program has proved automatically that a\nsubset of a finite set is finite, the equivalence among several\nformulations of the Axiom of Choice, and Cantor\u2019s Theorem that a set\nhas more subsets than members. The latter was proved by the program by\nasserting that there is no onto function from individuals to sets of\nindividuals, with the proof proceeding by a diagonal argument. HOL\n(Gordon & Melham 1993) is another higher-order proof development\nsystem primarily used as an aid in the development of hardware and\nsoftware safety-critical systems. HOL is based on the LCF approach to\ninteractive theorem proving (Gordon, Milner & Wadsworth 1979), and\nit is built on the strongly typed functional programming language ML.\nHOL, like TPS, can operate in automatic and interactive mode.\nAvailability of the latter mode is welcomed since the most useful\nautomated reasoning systems may well be those which place an emphasis\non interactive theorem proving (Farmer, Guttman & Thayer 1993) and\ncan be used as assistants operating under human guidance. (Harrison\n2000) discusses the verification of floating-point algorithms and the\nnon-trivial mathematical properties that are proved by HOL Light under\nthe guidance of the user. Isabelle (Paulson 1994) is a generic,\nhigher-order, framework for rapid prototyping of deductive systems.\nObject logics can be formulated within Isabelle\u2019s metalogic by using\nits many syntactic and deductive tools. Isabelle also provides some\nready-made theorem proving environments, including Isabelle/HOL,\nIsabelle/ZF and Isabelle/FOL, which can be used as starting points for\napplications and further development by the user (Paulson 1990, Nipkow\n& Paulson 2002). Isabelle/ZF has been used to prove equivalent\nformulations of the Axiom of Choice, formulations of the Well-Ordering\nPrinciple, as well as the key result about cardinal arithmetic that,\nfor any infinite cardinal \u03ba, \u03ba \u00b7 \u03ba = \u03ba\n(Paulson & Grabczewski 1996).\n\nTo help prove higher-order theorems and discharge goals arising in\ninteractive proofs, the user can ask Isabelle/HOL to invoke external\nfirst-order provers through Sledgehammer (Paulson 2010), a subsystem\naimed at combining the complementary capabilities of automated\nreasoning systems of different types, including SMT solvers (see\n4.2 SAT Solvers, in this article; Blanchette et al. 2013).\nLEO-II (Benzm\u00fcller et al. 2015) is also a resolution-based\nautomated theorem prover for higher-order logic that has been applied\nin a wide array of problems, most notably in the automation of\nG\u00f6del\u2019s ontological proof of God\u2019s existence (see 4.6 Logic\nand Philosophy, in this article). \n",
    "section_title": "3.1 Higher-Order Logic",
    "entry_title": "Automated Reasoning",
    "hierarchy_title": "Automated Reasoning || Other Logics || Higher-Order Logic",
    "tokenized_text": [
        "logic",
        "higherorder",
        "logic",
        "higherorder",
        "logic",
        "higherorder",
        "logic",
        "differs",
        "firstorder",
        "logic",
        "quantification",
        "function",
        "predicate",
        "allowed",
        "statement",
        "two",
        "people",
        "related",
        "one",
        "way",
        "another",
        "legally",
        "expressed",
        "higherorder",
        "logic",
        "xyrr",
        "x",
        "firstorder",
        "logic",
        "higherorder",
        "logic",
        "inherently",
        "expressive",
        "firstorder",
        "logic",
        "closer",
        "spirit",
        "actual",
        "mathematical",
        "reasoning",
        "example",
        "notion",
        "set",
        "finiteness",
        "expressed",
        "firstorder",
        "concept",
        "due",
        "richer",
        "expressiveness",
        "come",
        "surprise",
        "implementing",
        "automated",
        "theorem",
        "prover",
        "higherorder",
        "logic",
        "challenging",
        "firstorder",
        "logic",
        "largely",
        "due",
        "fact",
        "unification",
        "higherorder",
        "logic",
        "complex",
        "firstorder",
        "case",
        "unifiable",
        "term",
        "always",
        "posse",
        "general",
        "unifier",
        "higherorder",
        "unification",
        "undecidable",
        "finally",
        "given",
        "higherorder",
        "logic",
        "incomplete",
        "always",
        "proof",
        "entirely",
        "reach",
        "automated",
        "reasoning",
        "program",
        "method",
        "used",
        "automate",
        "firstorder",
        "deduction",
        "adapted",
        "higherorder",
        "logic",
        "tps",
        "andrew",
        "et",
        "al",
        "andrew",
        "et",
        "al",
        "theorem",
        "proving",
        "system",
        "higherorder",
        "logic",
        "us",
        "church",
        "typed",
        "\u03bbcalculus",
        "logical",
        "representation",
        "language",
        "based",
        "connectiontype",
        "deduction",
        "mechanism",
        "incorporates",
        "huet",
        "unification",
        "algorithm",
        "huet",
        "sample",
        "capability",
        "tps",
        "program",
        "proved",
        "automatically",
        "subset",
        "finite",
        "set",
        "finite",
        "equivalence",
        "among",
        "several",
        "formulation",
        "axiom",
        "choice",
        "cantor",
        "theorem",
        "set",
        "subset",
        "member",
        "latter",
        "proved",
        "program",
        "asserting",
        "onto",
        "function",
        "individual",
        "set",
        "individual",
        "proof",
        "proceeding",
        "diagonal",
        "argument",
        "hol",
        "gordon",
        "melham",
        "another",
        "higherorder",
        "proof",
        "development",
        "system",
        "primarily",
        "used",
        "aid",
        "development",
        "hardware",
        "software",
        "safetycritical",
        "system",
        "hol",
        "based",
        "lcf",
        "approach",
        "interactive",
        "theorem",
        "proving",
        "gordon",
        "milner",
        "wadsworth",
        "built",
        "strongly",
        "typed",
        "functional",
        "programming",
        "language",
        "ml",
        "hol",
        "like",
        "tps",
        "operate",
        "automatic",
        "interactive",
        "mode",
        "availability",
        "latter",
        "mode",
        "welcomed",
        "since",
        "useful",
        "automated",
        "reasoning",
        "system",
        "may",
        "well",
        "place",
        "emphasis",
        "interactive",
        "theorem",
        "proving",
        "farmer",
        "guttman",
        "thayer",
        "used",
        "assistant",
        "operating",
        "human",
        "guidance",
        "harrison",
        "discus",
        "verification",
        "floatingpoint",
        "algorithm",
        "nontrivial",
        "mathematical",
        "property",
        "proved",
        "hol",
        "light",
        "guidance",
        "user",
        "isabelle",
        "paulson",
        "generic",
        "higherorder",
        "framework",
        "rapid",
        "prototyping",
        "deductive",
        "system",
        "object",
        "logic",
        "formulated",
        "within",
        "isabelle",
        "metalogic",
        "using",
        "many",
        "syntactic",
        "deductive",
        "tool",
        "isabelle",
        "also",
        "provides",
        "readymade",
        "theorem",
        "proving",
        "environment",
        "including",
        "isabellehol",
        "isabellezf",
        "isabellefol",
        "used",
        "starting",
        "point",
        "application",
        "development",
        "user",
        "paulson",
        "nipkow",
        "paulson",
        "isabellezf",
        "used",
        "prove",
        "equivalent",
        "formulation",
        "axiom",
        "choice",
        "formulation",
        "wellordering",
        "principle",
        "well",
        "key",
        "result",
        "cardinal",
        "arithmetic",
        "infinite",
        "cardinal",
        "\u03ba",
        "\u03ba",
        "\u03ba",
        "\u03ba",
        "paulson",
        "grabczewski",
        "help",
        "prove",
        "higherorder",
        "theorem",
        "discharge",
        "goal",
        "arising",
        "interactive",
        "proof",
        "user",
        "ask",
        "isabellehol",
        "invoke",
        "external",
        "firstorder",
        "provers",
        "sledgehammer",
        "paulson",
        "subsystem",
        "aimed",
        "combining",
        "complementary",
        "capability",
        "automated",
        "reasoning",
        "system",
        "different",
        "type",
        "including",
        "smt",
        "solver",
        "see",
        "sat",
        "solver",
        "article",
        "blanchette",
        "et",
        "al",
        "leoii",
        "benzm\u00fcller",
        "et",
        "al",
        "also",
        "resolutionbased",
        "automated",
        "theorem",
        "prover",
        "higherorder",
        "logic",
        "applied",
        "wide",
        "array",
        "problem",
        "notably",
        "automation",
        "g\u00f6del",
        "ontological",
        "proof",
        "god",
        "existence",
        "see",
        "logic",
        "philosophy",
        "article"
    ]
}