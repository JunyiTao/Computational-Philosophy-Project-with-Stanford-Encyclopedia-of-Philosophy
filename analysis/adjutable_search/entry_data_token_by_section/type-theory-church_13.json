{
    "main_text": "Automation || Automated Theorem Provers\n4.3 Automated Theorem Provers\n\nAn selection of theorem provers for Church\u2019s type theory is\npresented. The focus is on systems that have successfully participated\nin TPTP THF CASC competitions in the past. The latest editions of most\nmentioned systems can be accessed online via the SystemOnTPTP\ninfrastructure (Sutcliffe 2017). Nearly all mentioned systems produce\nverifiable proof certificates in the TPTP TSTP syntax. Further details\non the automation of Church\u2019s type theory are given in\nBenzm\u00fcller & Miller 2014.\n\nThe TPS prover (Andrews et al. 1996, Andrews & Brown 2006) can be\nused to prove theorems of elementary type theory or extensional type\ntheory automatically, interactively, or semi-automatically. When\nsearching for a proof automatically, TPS first searches for an\nexpansion proof (Miller 1987) or an extensional expansion proof (Brown\n2004, 2007) of the theorem. Part of this process involves searching\nfor acceptable matings (Andrews 1981, Bishop 1999). The behavior of\nTPS is controlled by sets of flags, also called modes. A simple\nscheduling mechanism is employed in the latest versions of TPS to\nsequentially run a about fifty modes for a limited amount of time. TPS\nwas the winner of the first THF CASC competition in 2009.\n\nThe LEO-II prover (Benzm\u00fcller et al. 2015) is the successor of\nLEO (Benzm\u00fcller & Kohlhase 1998b, which was hardwired with\nthe OMEGA proof assistant (LEO stands for Logical Engine of OMEGA).\nThe provers are based on the RUE-resolution calculi developed in\nBenzm\u00fcller 1999a,b. LEO\nwas the first prover to implement calculus rules for extensionality to\navoid cut-simulation effects. LEO-II inherits and adapts them, and\nprovides additional calculus rules for description and choice. The\nprover, which internally collaborates with first-order provers\n(preferably E) and SAT solvers, has pioneered cooperative\nhigher-order/first-order proof automation. Since the prover is often\ntoo weak to find a refutation among the steadily growing set of\nclauses on its own, some of the clauses in LEO-II\u2019s search space\nattain a special status: they are first-order clauses modulo the\napplication of an appropriate transformation function. Therefore,\nLEO-II progressively launches time limited calls with these clauses to\na first-order theorem prover, and when the first-order prover reports\na refutation, LEO-II also terminates. Parts of these ideas were\nalready implemented in the predecessor LEO. Communication between\nLEO-II and the cooperating first-order theorem provers uses the TPTP\nlanguage and standards. LEO-II was the winner of the second THF CASC\ncompetition in 2010.\n\nThe Satallax prover (Brown 2012) is based on a complete ground tableau\ncalculus for Church\u2019s type theory with choice (Backes &\nBrown 2011). An initial tableau branch is formed from the assumptions\nof a conjecture and negation of its conclusion. From that point on,\nSatallax tries to determine unsatisfiability or satisfiability of this\nbranch. Satallax progressively generates higher-order formulas and\ncorresponding propositional clauses. Satallax uses the SAT solver\nMiniSat as an engine to test the current set of propositional clauses\nfor unsatisfiability. If the clauses are unsatisfiable, the original\nbranch is unsatisfiable. Satallax provides calculus rules for\nextensionality, description and choice. If there are no quantifiers at\nfunction types, the generation of higher-order formulas and\ncorresponding clauses may terminate. In that case, if MiniSat reports\nthe final set of clauses as satisfiable, then the original set of\nhigher-order formulas is satisfiable (by a standard model in which all\ntypes are interpreted as finite sets). Satallax was the winner of the\nTHF CASC competition in 2011 and since 2013. \n\nThe Isabelle/HOL system (Nipkow, Wenzel, & Paulson 2002) has\noriginally been designed as an interactive prover. However, in order\nto ease user interaction several automatic proof tactics have been\nadded over the years. By appropriately scheduling a subset of these\nproof tactics, some of which are quite powerful, Isabelle/HOL has\nsince about 2011 been turned also into an automatic theorem prover for\nTPTP THF (and other TPTP syntax formats), that can be run from a\ncommand shell like other provers. The most powerful proof tactics that\nare scheduled by Isabelle/HOL include the Sledgehammer tool\n(Blanchette et al. 2013),\nwhich invokes a sequence of external first-order and higher-order\ntheorem provers, the model finder Nitpick (Blanchette &\nNipkow 2010), the equational reasoner simp, the untyped\ntableau prover blast, the simplifier and classical reasoners\nauto, force, and fast, and the best-first\nsearch procedure best. In contrast to all other automated\ntheorem provers mentioned above, the TPTP incarnation of Isabelle/HOL\ndoes not yet output proof certificates. Isabelle/HOL was the winner of\nthe THF CASC competition in 2012. \n\nThe agsyHOL prover is based on a generic lazy narrowing proof search\nalgorithm. Backtracking is employed and a comparably small search\nstate is maintained. The prover outputs proof terms in sequent style\nwhich can be verified in the Agda system. \n\ncoqATP implements (the non-inductive) part of the calculus of\nconstructions (Bertot & Cast\u00e9ran 2004). The system outputs\nproof terms which are accepted as proofs (after the addition of a few\ndefinitions) by the Coq proof assistant. The prover employs axioms for\nfunctional extensionality, choice, and excluded middle. Boolean\nextensionality is not supported. In addition to axioms, a small\nlibrary of basic lemmas is employed. \n\nThe Leo-III prover implements a paramodulation calculus for\nChurch\u2019s type theory (Steen 2018). The system, which is a\ndescendant of LEO and LEO-II, provides calculus rules for\nextensionality, description and choice. The system has put an emphasis\non the implementation of an efficient set of underlying data\nstructures, on simplification routines and on heuristic rewriting. In\nthe tradition of its predecessors, Leo-III cooperates with first-order\nreasoning tools using translations to many-sorted first-order logic.\nThe prover accepts every common TPTP syntax dialect and is thus very\nwidely applicable. Recently, the prover has also been extended to\nnatively supports almost every normal higher-order modal logic.\n\nZipperposition (Bentkamp et al. 2018) is new and inspiring\nhigher-order theorem prover which, at the current state of\ndevelopment, is still working for a comparably weak fragment of\nChurch\u2019s type theory, called lambda-free higher-order\nlogic (a comprehension-free higher-order logic,\nwhich is nevertheless supporting \u03bb-notation). The system, which\nis based on superposition calculi, is developed bottom up, and it is\nprogressively extended towards stronger fragments of Church\u2019s\ntype theory and to support other relevant extensions such datatypes,\nrecursive functions and arithmetic. \n\nVarious so called proof hammers, in the spirit of\nIsabelle\u2019s Sledgehammer tool, have recently been developed and\nintegrated with modern proof assistants. Prominent examples include\nHOL(y)Hammer (Kaliszyk & Urban 2015) for HOL Light and a similar\nhammer (Czaika & Kaliszyk 2018) for the proof assistant Coq. \n",
    "section_title": "4.3 Automated Theorem Provers",
    "entry_title": "Church\u2019s Type Theory",
    "hierarchy_title": "Church\u2019s Type Theory || Automation || Automated Theorem Provers",
    "tokenized_text": [
        "automation",
        "automated",
        "theorem",
        "provers",
        "automated",
        "theorem",
        "provers",
        "selection",
        "theorem",
        "provers",
        "church",
        "type",
        "theory",
        "presented",
        "focus",
        "system",
        "successfully",
        "participated",
        "tptp",
        "thf",
        "casc",
        "competition",
        "past",
        "latest",
        "edition",
        "mentioned",
        "system",
        "accessed",
        "online",
        "via",
        "systemontptp",
        "infrastructure",
        "sutcliffe",
        "nearly",
        "mentioned",
        "system",
        "produce",
        "verifiable",
        "proof",
        "certificate",
        "tptp",
        "tstp",
        "syntax",
        "detail",
        "automation",
        "church",
        "type",
        "theory",
        "given",
        "benzm\u00fcller",
        "miller",
        "tps",
        "prover",
        "andrew",
        "et",
        "al",
        "andrew",
        "brown",
        "used",
        "prove",
        "theorem",
        "elementary",
        "type",
        "theory",
        "extensional",
        "type",
        "theory",
        "automatically",
        "interactively",
        "semiautomatically",
        "searching",
        "proof",
        "automatically",
        "tps",
        "first",
        "search",
        "expansion",
        "proof",
        "miller",
        "extensional",
        "expansion",
        "proof",
        "brown",
        "theorem",
        "part",
        "process",
        "involves",
        "searching",
        "acceptable",
        "mating",
        "andrew",
        "bishop",
        "behavior",
        "tps",
        "controlled",
        "set",
        "flag",
        "also",
        "called",
        "mode",
        "simple",
        "scheduling",
        "mechanism",
        "employed",
        "latest",
        "version",
        "tps",
        "sequentially",
        "run",
        "fifty",
        "mode",
        "limited",
        "amount",
        "time",
        "tps",
        "winner",
        "first",
        "thf",
        "casc",
        "competition",
        "leoii",
        "prover",
        "benzm\u00fcller",
        "et",
        "al",
        "successor",
        "leo",
        "benzm\u00fcller",
        "kohlhase",
        "b",
        "hardwired",
        "omega",
        "proof",
        "assistant",
        "leo",
        "stand",
        "logical",
        "engine",
        "omega",
        "provers",
        "based",
        "rueresolution",
        "calculus",
        "developed",
        "benzm\u00fcller",
        "a",
        "b",
        "leo",
        "first",
        "prover",
        "implement",
        "calculus",
        "rule",
        "extensionality",
        "avoid",
        "cutsimulation",
        "effect",
        "leoii",
        "inherits",
        "adapts",
        "provides",
        "additional",
        "calculus",
        "rule",
        "description",
        "choice",
        "prover",
        "internally",
        "collaborates",
        "firstorder",
        "provers",
        "preferably",
        "e",
        "sat",
        "solver",
        "pioneered",
        "cooperative",
        "higherorderfirstorder",
        "proof",
        "automation",
        "since",
        "prover",
        "often",
        "weak",
        "find",
        "refutation",
        "among",
        "steadily",
        "growing",
        "set",
        "clause",
        "clause",
        "leoii",
        "search",
        "space",
        "attain",
        "special",
        "status",
        "firstorder",
        "clause",
        "modulo",
        "application",
        "appropriate",
        "transformation",
        "function",
        "therefore",
        "leoii",
        "progressively",
        "launch",
        "time",
        "limited",
        "call",
        "clause",
        "firstorder",
        "theorem",
        "prover",
        "firstorder",
        "prover",
        "report",
        "refutation",
        "leoii",
        "also",
        "terminates",
        "part",
        "idea",
        "already",
        "implemented",
        "predecessor",
        "leo",
        "communication",
        "leoii",
        "cooperating",
        "firstorder",
        "theorem",
        "provers",
        "us",
        "tptp",
        "language",
        "standard",
        "leoii",
        "winner",
        "second",
        "thf",
        "casc",
        "competition",
        "satallax",
        "prover",
        "brown",
        "based",
        "complete",
        "ground",
        "tableau",
        "calculus",
        "church",
        "type",
        "theory",
        "choice",
        "backes",
        "brown",
        "initial",
        "tableau",
        "branch",
        "formed",
        "assumption",
        "conjecture",
        "negation",
        "conclusion",
        "point",
        "satallax",
        "try",
        "determine",
        "unsatisfiability",
        "satisfiability",
        "branch",
        "satallax",
        "progressively",
        "generates",
        "higherorder",
        "formula",
        "corresponding",
        "propositional",
        "clause",
        "satallax",
        "us",
        "sat",
        "solver",
        "minisat",
        "engine",
        "test",
        "current",
        "set",
        "propositional",
        "clause",
        "unsatisfiability",
        "clause",
        "unsatisfiable",
        "original",
        "branch",
        "unsatisfiable",
        "satallax",
        "provides",
        "calculus",
        "rule",
        "extensionality",
        "description",
        "choice",
        "quantifier",
        "function",
        "type",
        "generation",
        "higherorder",
        "formula",
        "corresponding",
        "clause",
        "may",
        "terminate",
        "case",
        "minisat",
        "report",
        "final",
        "set",
        "clause",
        "satisfiable",
        "original",
        "set",
        "higherorder",
        "formula",
        "satisfiable",
        "standard",
        "model",
        "type",
        "interpreted",
        "finite",
        "set",
        "satallax",
        "winner",
        "thf",
        "casc",
        "competition",
        "since",
        "isabellehol",
        "system",
        "nipkow",
        "wenzel",
        "paulson",
        "originally",
        "designed",
        "interactive",
        "prover",
        "however",
        "order",
        "ease",
        "user",
        "interaction",
        "several",
        "automatic",
        "proof",
        "tactic",
        "added",
        "year",
        "appropriately",
        "scheduling",
        "subset",
        "proof",
        "tactic",
        "quite",
        "powerful",
        "isabellehol",
        "since",
        "turned",
        "also",
        "automatic",
        "theorem",
        "prover",
        "tptp",
        "thf",
        "tptp",
        "syntax",
        "format",
        "run",
        "command",
        "shell",
        "like",
        "provers",
        "powerful",
        "proof",
        "tactic",
        "scheduled",
        "isabellehol",
        "include",
        "sledgehammer",
        "tool",
        "blanchette",
        "et",
        "al",
        "invokes",
        "sequence",
        "external",
        "firstorder",
        "higherorder",
        "theorem",
        "provers",
        "model",
        "finder",
        "nitpick",
        "blanchette",
        "nipkow",
        "equational",
        "reasoner",
        "simp",
        "untyped",
        "tableau",
        "prover",
        "blast",
        "simplifier",
        "classical",
        "reasoner",
        "auto",
        "force",
        "fast",
        "bestfirst",
        "search",
        "procedure",
        "best",
        "contrast",
        "automated",
        "theorem",
        "provers",
        "mentioned",
        "tptp",
        "incarnation",
        "isabellehol",
        "yet",
        "output",
        "proof",
        "certificate",
        "isabellehol",
        "winner",
        "thf",
        "casc",
        "competition",
        "agsyhol",
        "prover",
        "based",
        "generic",
        "lazy",
        "narrowing",
        "proof",
        "search",
        "algorithm",
        "backtracking",
        "employed",
        "comparably",
        "small",
        "search",
        "state",
        "maintained",
        "prover",
        "output",
        "proof",
        "term",
        "sequent",
        "style",
        "verified",
        "agda",
        "system",
        "coqatp",
        "implement",
        "noninductive",
        "part",
        "calculus",
        "construction",
        "bertot",
        "cast\u00e9ran",
        "system",
        "output",
        "proof",
        "term",
        "accepted",
        "proof",
        "addition",
        "definition",
        "coq",
        "proof",
        "assistant",
        "prover",
        "employ",
        "axiom",
        "functional",
        "extensionality",
        "choice",
        "excluded",
        "middle",
        "boolean",
        "extensionality",
        "supported",
        "addition",
        "axiom",
        "small",
        "library",
        "basic",
        "lemma",
        "employed",
        "leoiii",
        "prover",
        "implement",
        "paramodulation",
        "calculus",
        "church",
        "type",
        "theory",
        "steen",
        "system",
        "descendant",
        "leo",
        "leoii",
        "provides",
        "calculus",
        "rule",
        "extensionality",
        "description",
        "choice",
        "system",
        "put",
        "emphasis",
        "implementation",
        "efficient",
        "set",
        "underlying",
        "data",
        "structure",
        "simplification",
        "routine",
        "heuristic",
        "rewriting",
        "tradition",
        "predecessor",
        "leoiii",
        "cooperates",
        "firstorder",
        "reasoning",
        "tool",
        "using",
        "translation",
        "manysorted",
        "firstorder",
        "logic",
        "prover",
        "accepts",
        "every",
        "common",
        "tptp",
        "syntax",
        "dialect",
        "thus",
        "widely",
        "applicable",
        "recently",
        "prover",
        "also",
        "extended",
        "natively",
        "support",
        "almost",
        "every",
        "normal",
        "higherorder",
        "modal",
        "logic",
        "zipperposition",
        "bentkamp",
        "et",
        "al",
        "new",
        "inspiring",
        "higherorder",
        "theorem",
        "prover",
        "current",
        "state",
        "development",
        "still",
        "working",
        "comparably",
        "weak",
        "fragment",
        "church",
        "type",
        "theory",
        "called",
        "lambdafree",
        "higherorder",
        "logic",
        "comprehensionfree",
        "higherorder",
        "logic",
        "nevertheless",
        "supporting",
        "\u03bbnotation",
        "system",
        "based",
        "superposition",
        "calculus",
        "developed",
        "bottom",
        "progressively",
        "extended",
        "towards",
        "stronger",
        "fragment",
        "church",
        "type",
        "theory",
        "support",
        "relevant",
        "extension",
        "datatypes",
        "recursive",
        "function",
        "arithmetic",
        "various",
        "called",
        "proof",
        "hammer",
        "spirit",
        "isabelle",
        "sledgehammer",
        "tool",
        "recently",
        "developed",
        "integrated",
        "modern",
        "proof",
        "assistant",
        "prominent",
        "example",
        "include",
        "hol",
        "hammer",
        "kaliszyk",
        "urban",
        "hol",
        "light",
        "similar",
        "hammer",
        "czaika",
        "kaliszyk",
        "proof",
        "assistant",
        "coq"
    ]
}