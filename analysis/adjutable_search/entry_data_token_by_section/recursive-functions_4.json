{
    "main_text": "Historical Background || The Ackermann-P\u00e9ter Function\n1.4 The Ackermann-P\u00e9ter Function\n\nAlready at the time of (1926), Hilbert had anticipated that it would\nbe possible to formulate definitions of functions whose values could\nbe computed in a recursive manner but which are not themselves\nprimitive recursive. In order to illustrate how such a definition\nmight be obtained, he presented a heuristic argument involving the\nfollowing sequence of functions: \n\\[\\begin{align}\n\\nonumber \\alpha_0(x,y) &= x + 1 &\\text{(successor)} \\\\ \n\\nonumber \\alpha_1(x,y) &= x + y &\\text{(addition)} \\\\ \n\\nonumber \\alpha_2(x,y) &= x \\times y &\\text{(multiplication)} \\\\ \n\\nonumber \\alpha_3(x,y) &= x^y &\\text{(exponentiation)} \\\\ \n\\nonumber \\alpha_4(x,y) &= \\underbrace{x^{x^{\\udots^x}}}_{y \\textrm{ times}} &\\text{(super-exponentiation)} \\\\ \n\\nonumber  &\\vdots\n\\end{align}\\]\n\n\nThe functions in this sequence are defined so that\n\\(\\alpha_{i+1}(x,y+1)\\) is obtained by primitive recursion as\n\\(\\alpha_i(\\alpha_{i+1}(x,y),x)\\), together with an appropriate base\ncase. It thus makes sense mathematically to consider the function \n\n\\[\\begin{equation}\\label{alphadef}\n\\alpha(i,x,y) = \\alpha_i(x,y)\n\\end{equation}\\]\n\n\nwherein the first argument \\(i\\) represents the position of the\nfunction \\(\\alpha_i(x,y)\\) in the prior list. For fixed \\(i,n,m \\in\n\\mathbb{N}\\) it is thus possible to effectively compute the value of\n\\(\\alpha(i,n,m)\\) by first constructing the definition of\n\\(\\alpha_i(x,y)\\) and then evaluating it at \\(n,m\\). But it is also\neasy to see that \\(\\alpha_{i+1}(x,x)\\) will eventually dominate\n\\(\\alpha_i(x,x)\\) for sufficiently large \\(x\\). This in turn suggests\nthat \\(\\alpha(i,x,y)\\) cannot be defined by a finite number of\napplications of the primitive recursion scheme and is thus not itself\nprimitive recursive.\n\nThe specification of \\(\\alpha(i,x,y)\\) just given does not itself have\nthe form of a recursive definition. But it is possible to define\nsimilar functions in a manner which generalizes the format of the\nscheme (\\ref{gprimrec}). One means of doing so is to first use\nrecursion on the type \\(\\mathbb{N} \\rightarrow \\mathbb{N}\\)\u2014a\nsimple form of recursion at higher types as envisioned by Skolem and\nHilbert\u2014to define an iteration functional as follows:\n \n\\[\\begin{aligned}\n\\mathcal{Iter}(\\phi,0) &= \\phi \\\\ \\nonumber\n\\mathcal{Iter}(\\phi,x+1) &= \\phi(\\mathcal{Iter}(\\phi,x)) \\end{aligned}\\]\n\n\n\\(\\mathcal{Iter}\\) takes as arguments a function \\(\\phi:\\mathbb{N}\n\\rightarrow \\mathbb{N}\\) as well as a number \\(x \\in \\mathbb{N}\\) and\nis defined so that \\(\\mathcal{Iter}(\\phi,n) =\n\\phi^{n+1}(x)\\)\u2014i.e., the function which is the \\(n\\)th iterate\nof \\(\\phi\\). We may now define a function \\(\\beta\\) of type\n\\(\\mathbb{N} \\rightarrow (\\mathbb{N} \\rightarrow \\mathbb{N})\\) as\nfollows:  \n\\[\\begin{aligned}\n\\beta(0) &= x+1 \\textrm{ (i.e., the successor function)} \\\\ \n\\beta(x+1) &= \\mathcal{Iter}(\\beta,x) \\nonumber\\end{aligned}\\]\n\n\nIt can then be verified that  \n\\[\\begin{align*}\n\\beta(0) & = x +1, \\\\\n\\beta(1) & = 2 + (x + 3) - 3 = x+2, \\\\\n\\beta(2) & = 2 \\times x - 3, \\\\\n\\beta(3) & = 2^{x+3} - 3, \\\\\n\\beta(4) &= \\underbrace{2^{2^{\\udots^2}}}_{x \\textrm{ times}} - 3,\\\\ \n  &\\vdots\n\\end{align*}\n\\]\n\n\nOn this basis, we may now define a variant of the so-called\nAckermann-P\u00e9ter function as \\(\\pi(i,x) =\n\\beta(i)(x)\\)\u2014i.e., the result of applying the function\n\\(\\beta(i)\\) to the argument \\(x\\). \\(\\pi(i,x)\\) has the same order of\ngrowth as \\(\\alpha_i(x,x)\\) and it is possible to prove via the\nargument sketched above that \\(\\pi(i,x)\\) is not primitive recursive\n(see, e.g., P\u00e9ter 1967, ch. 9). Based on earlier work of\nAckermann (1928), P\u00e9ter (1935) also showed that \\(\\pi(i,x)\\)\nmay also be defined by a so-called doubly recursive\ndefinition of the following form which takes only natural numbers as\n arguments:[9]\n \n\\[\\begin{align}\n\\label{pidef}\n\\pi(0,x) &= x + 1\\\\ \\nonumber\n\\pi(i+1,0) &= \\pi(i,1)\\\\ \\nonumber\n\\pi(i+1,x+1) &= \\pi(i,\\pi(i+1,x)) \n\\end{align}\\]\n\n\nThe third clause in this definition defines the value of \\(\\pi(i,x)\\)\nin terms of the value \\(\\pi(i,x-1)\\) rather than \\(\\pi(i-1,x-1)\\) in\nanalogy with the scheme (\\ref{gprimrec}). It may thus not be\nimmediately obvious that the definition (\\ref{pidef}) describes an\nalgorithm for computing the values of \\(\\pi(i,x)\\) which always\nterminates in the manner illustrated by the calculation\n(\\ref{factcalc}). Note, however, with each recursive application\neither \\(i\\) decreases, or \\(i\\) remains the same and \\(x\\) decreases.\nIt thus follows that each time \\(x\\) reaches 0, \\(i\\) will start to\ndecrease so that the base case is eventually reached. Thus although\nthe value of \\(\\pi(i,x)\\) grows very rapidly\u2014e.g., \\(\\pi(4,3) =\n2^{2^{65536}}-3\\)\u2014it is still reasonable to regard (\\ref{pidef})\nas satisfying G\u00f6del\u2019s\nrequirement that a recursively defined function is computable by a\nfinite procedure.\n\nSystematic consideration of such alternative recursion schemes\nexemplified by (\\ref{pidef}) was initiated by P\u00e9ter (1932). It\nwas also she who introduced the term \u201cprimitive recursive\u201d\nto describe the class of functions given by G\u00f6del\u2019s scheme\n(\\ref{gprimrec}), a choice which would become standard after its\nadoption by Kleene (1936a). P\u00e9ter additionally showed that\nHilbert\u2019s (1926) formulation of \u201cordinary recursion\u201d\nis equivalent to primitive recursion, and that the primitive recursive\nfunctions are closed under course of values recursion, as well as\nso-called nested recursions of one variable. Such studies led\nto her book (P\u00e9ter 1967), whose original German edition\nRekursive Funktionen (1951) was the first monograph devoted\nto recursive functions. Together with the later work of Grzegorczyk\n(1953), these developments also inspired the investigation of various\nsubrecursive hierarchies which would later play a role in proof theory\nand computer\n science.[10]\n\n",
    "section_title": "1.4 The Ackermann-P\u00e9ter Function",
    "entry_title": "Recursive Functions",
    "hierarchy_title": "Recursive Functions || Historical Background || The Ackermann-P\u00e9ter Function",
    "tokenized_text": [
        "historical",
        "background",
        "ackermannp\u00e9ter",
        "function",
        "ackermannp\u00e9ter",
        "function",
        "already",
        "time",
        "hilbert",
        "anticipated",
        "would",
        "possible",
        "formulate",
        "definition",
        "function",
        "whose",
        "value",
        "could",
        "computed",
        "recursive",
        "manner",
        "primitive",
        "recursive",
        "order",
        "illustrate",
        "definition",
        "might",
        "obtained",
        "presented",
        "heuristic",
        "argument",
        "involving",
        "following",
        "sequence",
        "function",
        "begin",
        "align",
        "nonumber",
        "alpha_",
        "x",
        "x",
        "text",
        "successor",
        "nonumber",
        "alpha_",
        "x",
        "x",
        "text",
        "addition",
        "nonumber",
        "alpha_",
        "x",
        "x",
        "times",
        "text",
        "multiplication",
        "nonumber",
        "alpha_",
        "x",
        "xy",
        "text",
        "exponentiation",
        "nonumber",
        "alpha_",
        "x",
        "underbrace",
        "x",
        "x",
        "udotsx",
        "_",
        "textrm",
        "time",
        "text",
        "superexponentiation",
        "nonumber",
        "vdots",
        "end",
        "align",
        "function",
        "sequence",
        "defined",
        "alpha_",
        "i",
        "x",
        "y",
        "obtained",
        "primitive",
        "recursion",
        "alpha_i",
        "alpha_",
        "i",
        "x",
        "x",
        "together",
        "appropriate",
        "base",
        "case",
        "thus",
        "make",
        "sense",
        "mathematically",
        "consider",
        "function",
        "begin",
        "equation",
        "label",
        "alphadef",
        "alpha",
        "x",
        "alpha_i",
        "x",
        "end",
        "equation",
        "wherein",
        "first",
        "argument",
        "i",
        "represents",
        "position",
        "function",
        "alpha_i",
        "x",
        "prior",
        "list",
        "fixed",
        "n",
        "in",
        "mathbb",
        "n",
        "thus",
        "possible",
        "effectively",
        "compute",
        "value",
        "alpha",
        "n",
        "first",
        "constructing",
        "definition",
        "alpha_i",
        "x",
        "evaluating",
        "n",
        "m",
        "also",
        "easy",
        "see",
        "alpha_",
        "i",
        "x",
        "x",
        "eventually",
        "dominate",
        "alpha_i",
        "x",
        "x",
        "sufficiently",
        "large",
        "x",
        "turn",
        "suggests",
        "alpha",
        "x",
        "defined",
        "finite",
        "number",
        "application",
        "primitive",
        "recursion",
        "scheme",
        "thus",
        "primitive",
        "recursive",
        "specification",
        "alpha",
        "x",
        "given",
        "form",
        "recursive",
        "definition",
        "possible",
        "define",
        "similar",
        "function",
        "manner",
        "generalizes",
        "format",
        "scheme",
        "ref",
        "gprimrec",
        "one",
        "mean",
        "first",
        "use",
        "recursion",
        "type",
        "mathbb",
        "n",
        "rightarrow",
        "mathbb",
        "n",
        "a",
        "simple",
        "form",
        "recursion",
        "higher",
        "type",
        "envisioned",
        "skolem",
        "hilbertto",
        "define",
        "iteration",
        "functional",
        "follows",
        "begin",
        "aligned",
        "mathcal",
        "iter",
        "phi",
        "phi",
        "nonumber",
        "mathcal",
        "iter",
        "phi",
        "x",
        "phi",
        "mathcal",
        "iter",
        "phi",
        "x",
        "end",
        "aligned",
        "mathcal",
        "iter",
        "take",
        "argument",
        "function",
        "phi",
        "mathbb",
        "n",
        "rightarrow",
        "mathbb",
        "n",
        "well",
        "number",
        "x",
        "in",
        "mathbb",
        "n",
        "defined",
        "mathcal",
        "iter",
        "phi",
        "n",
        "phi",
        "n",
        "x",
        "ie",
        "function",
        "n",
        "th",
        "iterate",
        "phi",
        "may",
        "define",
        "function",
        "beta",
        "type",
        "mathbb",
        "n",
        "rightarrow",
        "mathbb",
        "n",
        "rightarrow",
        "mathbb",
        "n",
        "follows",
        "begin",
        "aligned",
        "beta",
        "x",
        "textrm",
        "ie",
        "successor",
        "function",
        "beta",
        "x",
        "mathcal",
        "iter",
        "beta",
        "x",
        "nonumberend",
        "aligned",
        "verified",
        "begin",
        "align",
        "beta",
        "x",
        "beta",
        "x",
        "x",
        "beta",
        "times",
        "x",
        "beta",
        "x",
        "beta",
        "underbrace",
        "udots",
        "_",
        "x",
        "textrm",
        "time",
        "vdots",
        "end",
        "align",
        "basis",
        "may",
        "define",
        "variant",
        "socalled",
        "ackermannp\u00e9ter",
        "function",
        "pi",
        "x",
        "beta",
        "x",
        "ie",
        "result",
        "applying",
        "function",
        "beta",
        "argument",
        "x",
        "pi",
        "x",
        "order",
        "growth",
        "alpha_i",
        "x",
        "x",
        "possible",
        "prove",
        "via",
        "argument",
        "sketched",
        "pi",
        "x",
        "primitive",
        "recursive",
        "see",
        "eg",
        "p\u00e9ter",
        "ch",
        "based",
        "earlier",
        "work",
        "ackermann",
        "p\u00e9ter",
        "also",
        "showed",
        "pi",
        "x",
        "may",
        "also",
        "defined",
        "socalled",
        "doubly",
        "recursive",
        "definition",
        "following",
        "form",
        "take",
        "natural",
        "number",
        "argument",
        "begin",
        "align",
        "label",
        "pidef",
        "pi",
        "x",
        "x",
        "nonumber",
        "pi",
        "i",
        "pi",
        "i",
        "nonumber",
        "pi",
        "i",
        "x",
        "pi",
        "pi",
        "i",
        "x",
        "end",
        "align",
        "third",
        "clause",
        "definition",
        "defines",
        "value",
        "pi",
        "x",
        "term",
        "value",
        "pi",
        "x",
        "rather",
        "pi",
        "i",
        "x",
        "analogy",
        "scheme",
        "ref",
        "gprimrec",
        "may",
        "thus",
        "immediately",
        "obvious",
        "definition",
        "ref",
        "pidef",
        "describes",
        "algorithm",
        "computing",
        "value",
        "pi",
        "x",
        "always",
        "terminates",
        "manner",
        "illustrated",
        "calculation",
        "ref",
        "factcalc",
        "note",
        "however",
        "recursive",
        "application",
        "either",
        "i",
        "decrease",
        "i",
        "remains",
        "x",
        "decrease",
        "thus",
        "follows",
        "time",
        "x",
        "reach",
        "i",
        "start",
        "decrease",
        "base",
        "case",
        "eventually",
        "reached",
        "thus",
        "although",
        "value",
        "pi",
        "x",
        "grows",
        "rapidlyeg",
        "pi",
        "it",
        "still",
        "reasonable",
        "regard",
        "ref",
        "pidef",
        "satisfying",
        "g\u00f6del",
        "requirement",
        "recursively",
        "defined",
        "function",
        "computable",
        "finite",
        "procedure",
        "systematic",
        "consideration",
        "alternative",
        "recursion",
        "scheme",
        "exemplified",
        "ref",
        "pidef",
        "initiated",
        "p\u00e9ter",
        "also",
        "introduced",
        "term",
        "primitive",
        "recursive",
        "describe",
        "class",
        "function",
        "given",
        "g\u00f6del",
        "scheme",
        "ref",
        "gprimrec",
        "choice",
        "would",
        "become",
        "standard",
        "adoption",
        "kleene",
        "a",
        "p\u00e9ter",
        "additionally",
        "showed",
        "hilbert",
        "formulation",
        "ordinary",
        "recursion",
        "equivalent",
        "primitive",
        "recursion",
        "primitive",
        "recursive",
        "function",
        "closed",
        "course",
        "value",
        "recursion",
        "well",
        "socalled",
        "nested",
        "recursion",
        "one",
        "variable",
        "study",
        "led",
        "book",
        "p\u00e9ter",
        "whose",
        "original",
        "german",
        "edition",
        "rekursive",
        "funktionen",
        "first",
        "monograph",
        "devoted",
        "recursive",
        "function",
        "together",
        "later",
        "work",
        "grzegorczyk",
        "development",
        "also",
        "inspired",
        "investigation",
        "various",
        "subrecursive",
        "hierarchy",
        "would",
        "later",
        "play",
        "role",
        "proof",
        "theory",
        "computer",
        "science"
    ]
}