{
    "main_text": "Introduction\n1. Introduction\n\nDynamic Logics (DL) are modal logics for representing the states and\nthe events of dynamic systems. The language of DLs is both an\nassertion language able to express properties of computation states,\nand a programming language able to express properties of system\ntransitions between these states. DLs are logics of programs,\nand permit to talk and reason about states of affairs, processes,\nchanges, and results.\n\nPratt\u2019s original dynamic logic of programs was a\nfirst-order modal logic. Propositional Dynamic Logic\n(PDL) is the propositional counterpart of it. It was presented as a\nlogic in its own right in Fischer and Ladner [1979]. Being\npropositional, the language of PDL makes no use of terms, predicates,\nor functions. Thus in PDL, there are two syntactic categories:\npropositions and programs.\n\nTo give meaning to statements in PDL, we typically work with an\nabstract semantics in terms of Labeled Transition Systems (LTS). LTSs\ncan be seen as a generalization of Kripke models, where transitions\nbetween worlds, or states, are \u201clabeled\u201d by names of\natomic programs. A valuation indicates for every state what\npropositions are true in it. A transition labeled \\(\\pi\\)\nfrom one state \\(x\\) to a state \\(y\\)\u2014noted \\(xR(\\pi)y\\), or\n\\((x,y) \\in R(\\pi)\\)\u2014indicates that starting in \\(x\\), there is\na possible execution of the program \\(\\pi\\) that finishes in \\(y\\). If\nthe proposition \\(A\\) is true in \\(y\\), then the formula\n\\(\\langle\\pi\\rangle A\\) is true in \\(x\\): i.e., in the state \\(x\\)\nthere is a possible execution of the program \\(\\pi\\) that ends in a\nstate satisfying \\(A\\). One recognizes in \\(\\langle\\pi\\rangle\\) a\nmodality reminiscent of the modality of possibility (often noted\n\\(\\Diamond\\)) of modal logic. Unsurprisingly, there is also a\ncorresponding notion of necessity (whose modality is often noted\n\\(\\Box\\)). The formula \\([\\pi]A\\) is true in the state \\(x\\) if \\(A\\)\nis true in every state reachable from \\(x\\) by a transition labeled\n\\(\\pi\\).\n\nThe possible executions of complex programs can be next defined\ncompositionally. For instance, a program \u201cfirst \\(\\alpha\\), then\n\\(\\beta\\)\u201d is a complex program, more specifically a\nsequence. A possible execution can be represented in an LTS\nby composing a two-step transition\u2014a transition which can be\nsignified by \\(R(\\alpha;\\beta)\\)\u2014between the states \\(x\\) and\n\\(y\\): there is a possible execution in the state \\(x\\) of the program\n\\(\\alpha\\) that finishes in a state \\(z\\) and there is a possible\nexecution in \\(z\\) of the program \\(\\beta\\) that finishes in the state\n\\(y\\). If the proposition \\(A\\) is true in \\(y\\), then the formula\n\\(\\langle \\alpha;\\beta\\rangle A\\) is be true in the state \\(x\\). The\nprograms \\(\\alpha\\) and \\(\\beta\\) could be complex program themselves.\nStill more programs can be expressed with more constructs that we will\npresent in due time.\n\nA program is then seen in an extensional way: it is a binary relation\nbetween pairs of states of an LTS. Precisely, it is the set of pairs\nof the form \\((x,y)\\) such that the program can be executed in the\nstate \\(x\\) and can lead to the state \\(y\\). On the other hand, a\nproposition is a statement about a state; it is either true or false\nin a state. A proposition can thus also be seen in an extensional way:\nthe set of states of the LTS where it is true.\n\nWith the acronym PDL, we refer here precisely to the propositional\ndynamic logic with the following program constructs: sequence,\nnon-deterministic choice, unbounded iteration, and test. We present it\nin\n section 2,\n together with some properties and fundamental results. In particular,\nwe will address its axiomatization and its decidability.\n\nThe Hoare calculus from Hoare [1969] is a landmark for logics of\nprograms. It concerns the truth of statements of the form\n\\(\\{A\\}\\alpha\\{B\\}\\)\u2014meaning that with the precondition \\(A\\)\nthe program \\(\\alpha\\) always has \\(B\\) as a post-condition\u2014and\nis defined axiomatically. It comes from a want of rigorous methods to\nreason about the properties of programs, and thus giving to the\nactivity of programming a certain place in the realm of science.\nBurstall [1974] saw the analogy between modal logics and reasoning\nabout programs. But the actual work on it started with Pratt [1976]\nafter it was suggested to him by some of the students of a course he\nwas giving, specifically about logics of programs. PDL comes from\nPratt\u2019s interpretation of Hoare\u2019s calculus in the\nformalism of modal logic. An introduction to the genesis of PDL can be\nfound in Pratt [1980b]. The Hoare-triple \\(\\{A\\}\\alpha\\{B\\}\\) is\ncaptured by the PDL formula \\(A \\to [\\alpha]B\\) meaning literally that\nif \\(A\\) is true, then every successfully terminating execution of\n\\(\\alpha\\) will end with \\(B\\) being true. With this connection\nrealized, it is a routine to prove the initial rules of Hoare\u2019s\ncalculus using exclusively the axiomatization of PDL. This is\nsomething we will do in detail in\n section 3\n which concentrates on the reasoning about the correctness of\nstructured programs.\n\nAdditional topics related to PDL include results concerning\ncomparative power of expression, decidability, complexity, and\ncompleteness of a number of interesting variants obtained by extending\nor restricting PDL in various ways. Since its inception, many variants\nof PDL have received attention. These variants may consider\ndeterministic programs, restricted tests, non-regular programs,\nprograms as automata, complementation and intersection of programs,\nconverse and infinite computations, etc. We will present some of them\nin\n section 4,\n providing some pointers regarding their relative expressivity, their\naxiomatizations, and their computational complexity.\n\nWe conclude in\n section 5.\n",
    "section_title": "1. Introduction",
    "entry_title": "Propositional Dynamic Logic",
    "hierarchy_title": "Propositional Dynamic Logic || Introduction",
    "tokenized_text": [
        "introduction",
        "introduction",
        "dynamic",
        "logic",
        "dl",
        "modal",
        "logic",
        "representing",
        "state",
        "event",
        "dynamic",
        "system",
        "language",
        "dl",
        "assertion",
        "language",
        "able",
        "express",
        "property",
        "computation",
        "state",
        "programming",
        "language",
        "able",
        "express",
        "property",
        "system",
        "transition",
        "state",
        "dl",
        "logic",
        "program",
        "permit",
        "talk",
        "reason",
        "state",
        "affair",
        "process",
        "change",
        "result",
        "pratt",
        "original",
        "dynamic",
        "logic",
        "program",
        "firstorder",
        "modal",
        "logic",
        "propositional",
        "dynamic",
        "logic",
        "pdl",
        "propositional",
        "counterpart",
        "presented",
        "logic",
        "right",
        "fischer",
        "ladner",
        "propositional",
        "language",
        "pdl",
        "make",
        "use",
        "term",
        "predicate",
        "function",
        "thus",
        "pdl",
        "two",
        "syntactic",
        "category",
        "proposition",
        "program",
        "give",
        "meaning",
        "statement",
        "pdl",
        "typically",
        "work",
        "abstract",
        "semantics",
        "term",
        "labeled",
        "transition",
        "system",
        "lts",
        "ltss",
        "seen",
        "generalization",
        "kripke",
        "model",
        "transition",
        "world",
        "state",
        "labeled",
        "name",
        "atomic",
        "program",
        "valuation",
        "indicates",
        "every",
        "state",
        "proposition",
        "true",
        "transition",
        "labeled",
        "pi",
        "one",
        "state",
        "x",
        "state",
        "y",
        "noted",
        "xr",
        "pi",
        "y",
        "x",
        "in",
        "r",
        "pi",
        "indicates",
        "starting",
        "x",
        "possible",
        "execution",
        "program",
        "pi",
        "finish",
        "y",
        "proposition",
        "a",
        "true",
        "y",
        "formula",
        "langlepirangle",
        "a",
        "true",
        "x",
        "ie",
        "state",
        "x",
        "possible",
        "execution",
        "program",
        "pi",
        "end",
        "state",
        "satisfying",
        "a",
        "one",
        "recognizes",
        "langlepirangle",
        "modality",
        "reminiscent",
        "modality",
        "possibility",
        "often",
        "noted",
        "diamond",
        "modal",
        "logic",
        "unsurprisingly",
        "also",
        "corresponding",
        "notion",
        "necessity",
        "whose",
        "modality",
        "often",
        "noted",
        "box",
        "formula",
        "pi",
        "a",
        "true",
        "state",
        "x",
        "a",
        "true",
        "every",
        "state",
        "reachable",
        "x",
        "transition",
        "labeled",
        "pi",
        "possible",
        "execution",
        "complex",
        "program",
        "next",
        "defined",
        "compositionally",
        "instance",
        "program",
        "first",
        "alpha",
        "beta",
        "complex",
        "program",
        "specifically",
        "sequence",
        "possible",
        "execution",
        "represented",
        "lts",
        "composing",
        "twostep",
        "transitiona",
        "transition",
        "signified",
        "r",
        "alpha",
        "beta",
        "between",
        "state",
        "x",
        "y",
        "possible",
        "execution",
        "state",
        "x",
        "program",
        "alpha",
        "finish",
        "state",
        "z",
        "possible",
        "execution",
        "z",
        "program",
        "beta",
        "finish",
        "state",
        "y",
        "proposition",
        "a",
        "true",
        "y",
        "formula",
        "langle",
        "alpha",
        "betarangle",
        "a",
        "true",
        "state",
        "x",
        "program",
        "alpha",
        "beta",
        "could",
        "complex",
        "program",
        "still",
        "program",
        "expressed",
        "construct",
        "present",
        "due",
        "time",
        "program",
        "seen",
        "extensional",
        "way",
        "binary",
        "relation",
        "pair",
        "state",
        "lts",
        "precisely",
        "set",
        "pair",
        "form",
        "x",
        "program",
        "executed",
        "state",
        "x",
        "lead",
        "state",
        "y",
        "hand",
        "proposition",
        "statement",
        "state",
        "either",
        "true",
        "false",
        "state",
        "proposition",
        "thus",
        "also",
        "seen",
        "extensional",
        "way",
        "set",
        "state",
        "lts",
        "true",
        "acronym",
        "pdl",
        "refer",
        "precisely",
        "propositional",
        "dynamic",
        "logic",
        "following",
        "program",
        "construct",
        "sequence",
        "nondeterministic",
        "choice",
        "unbounded",
        "iteration",
        "test",
        "present",
        "section",
        "together",
        "property",
        "fundamental",
        "result",
        "particular",
        "address",
        "axiomatization",
        "decidability",
        "hoare",
        "calculus",
        "hoare",
        "landmark",
        "logic",
        "program",
        "concern",
        "truth",
        "statement",
        "form",
        "a",
        "alpha",
        "b",
        "meaning",
        "precondition",
        "a",
        "program",
        "alpha",
        "always",
        "b",
        "postconditionand",
        "defined",
        "axiomatically",
        "come",
        "want",
        "rigorous",
        "method",
        "reason",
        "property",
        "program",
        "thus",
        "giving",
        "activity",
        "programming",
        "certain",
        "place",
        "realm",
        "science",
        "burstall",
        "saw",
        "analogy",
        "modal",
        "logic",
        "reasoning",
        "program",
        "actual",
        "work",
        "started",
        "pratt",
        "suggested",
        "student",
        "course",
        "giving",
        "specifically",
        "logic",
        "program",
        "pdl",
        "come",
        "pratt",
        "interpretation",
        "hoare",
        "calculus",
        "formalism",
        "modal",
        "logic",
        "introduction",
        "genesis",
        "pdl",
        "found",
        "pratt",
        "b",
        "hoaretriple",
        "a",
        "alpha",
        "b",
        "captured",
        "pdl",
        "formula",
        "to",
        "alpha",
        "b",
        "meaning",
        "literally",
        "a",
        "true",
        "every",
        "successfully",
        "terminating",
        "execution",
        "alpha",
        "end",
        "b",
        "true",
        "connection",
        "realized",
        "routine",
        "prove",
        "initial",
        "rule",
        "hoare",
        "calculus",
        "using",
        "exclusively",
        "axiomatization",
        "pdl",
        "something",
        "detail",
        "section",
        "concentrate",
        "reasoning",
        "correctness",
        "structured",
        "program",
        "additional",
        "topic",
        "related",
        "pdl",
        "include",
        "result",
        "concerning",
        "comparative",
        "power",
        "expression",
        "decidability",
        "complexity",
        "completeness",
        "number",
        "interesting",
        "variant",
        "obtained",
        "extending",
        "restricting",
        "pdl",
        "various",
        "way",
        "since",
        "inception",
        "many",
        "variant",
        "pdl",
        "received",
        "attention",
        "variant",
        "may",
        "consider",
        "deterministic",
        "program",
        "restricted",
        "test",
        "nonregular",
        "program",
        "program",
        "automaton",
        "complementation",
        "intersection",
        "program",
        "converse",
        "infinite",
        "computation",
        "etc",
        "present",
        "section",
        "providing",
        "pointer",
        "regarding",
        "relative",
        "expressivity",
        "axiomatizations",
        "computational",
        "complexity",
        "conclude",
        "section"
    ]
}