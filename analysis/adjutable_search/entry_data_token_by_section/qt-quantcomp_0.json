{
    "main_text": "A Brief History of the Field || Physical Computational Complexity\n1.1 Physical Computational Complexity\n\nThe mathematical model for a \u201cuniversal\u201d computer was\ndefined long before the invention of computers and is called the\n Turing machine\n (Turing 1936). A Turing machine consists of an unbounded tape, a head\ncapable of reading from and writing to it which can occupy one of a\npotentially infinite number of possible states, and an instruction\ntable (i.e. a transition function). This table, given the head\u2019s\ninitial state and the input it reads from the tape in that state,\ndetermines (a) the symbol that the head will write on the tape, (b)\nthe internal state it will occupy, and (c) the displacement of the\nhead on the tape. In 1936 Turing showed that since one can encode the\ninstruction table of a Turing machine \\(T\\) and express it as a binary\nnumber \\(\\#(T)\\), there exists a universal Turing machine \\(U\\) that\ncan simulate the instruction table of any Turing machine on any given\ninput. That the Turing machine model captures the concept of\ncomputability in its entirety is the essence of the\n Church-Turing thesis,\n according to which any effectively calculable function can be\ncomputed using a Turing machine. Admittedly, no counterexample to this\nthesis (which is the result of convergent ideas of Turing, Post,\nKleene and Church) has yet been found. But since it identifies the\nclass of computable functions with the class of those functions which\nare computable using a Turing machine, this thesis involves both a\nprecise mathematical notion and an informal and intuitive notion,\nhence cannot be proved or disproved. Simple cardinality considerations\nshow, however, that not all functions are Turing-computable (the set\nof all Turing machines is countable, while the set of all functions\nfrom the natural numbers to the natural numbers is not), and the\ndiscovery of this fact came as a complete surprise in the 1930s (Davis\n1958).\n\nComputability, or the question whether a function can be computed, is\nnot the only question that interests computer scientists. Beginning\nespecially in the 1960s (Cobham 1965; Edmonds 1965; Hartmanis and\nStearns 1965), the question of the cost of computing a\nfunction (which was to some extent already anticipated in 1956 by\nG\u00f6del) also came to be of great importance. This cost, also known\nas\n computational complexity,\n is measured naturally in the physical resources (e.g., time, space,\nenergy) invested in order to solve the computational problem at hand.\nComputer scientists classify computational problems according to the\nway their cost function behaves as a function of their input size,\n\\(n\\) (the number of bits required to store the input) and in\nparticular, whether it increases exponentially or polynomially with\n\\(n\\). Tractable problems are those which can be solved in\npolynomial cost, while intractable problems are those which\ncan only be solved with exponential cost (the former solutions are\ncommonly regarded as efficient although an exponential-time\nalgorithm could turn out to be more efficient than a polynomial-time\nalgorithm for some range of input sizes).\n\nSo far, the Turing machines we have been discussing have been\ndeterministic; for such machines, their behaviour at any given time is\nwholly determined by their state plus whatever their input happens to\nbe. In other words such machines have a unique \u201cinstruction\ntable\u201d (i.e. transition function). We can generalise the Turing\nmodel, however, by allowing a machine to instantiate more than one\ntransition function simultaneously. A nondeterministic Turing\nmachine (NTM), upon being presented with a given input in a given\nstate, is allowed to \u2018choose\u2019 which of its transition\nfunctions to follow, and we say that it solves a given problem\nwhenever, given some input, there exists at least one path through its\nstate space leading to a solution. Exactly how an NTM\n\u201cchooses\u201d whether to follow one transition function rather\nthan another is left undefined (in his 1936 paper, Turing originally\nconceived these choices as those of an external operator). In\nparticular, we do not assume that any probabilities are attached to\nthese choices. In a probabilistic Turing machine (PTM), on\nthe other hand, we characterise the computer\u2019s choices by\nassociating a particular probability with each of its possible\ntransitions.\n\nProbabilistic and deterministic Turing machines (DTMs) have different\nsuccess criteria. A successful deterministic algorithm for a given\nproblem is guaranteed to yield the correct answer given its input. Of\na successful probabilistic algorithm, on the other hand, we only\ndemand that it yield a correct answer with \u201chigh\u201d\nprobability (minimally, we demand that it be strictly greater than\n1/2). It was believed, until relatively recently, that for some\nproblems (see, e.g. Rabin 1976) probabilistic algorithms are\ndramatically more efficient than any deterministic alternatives; in\nother words that the set or \u201cclass\u201d of problems\nefficiently solvable by PTM is larger than the class of problems\nefficiently solvable by DTM. Fascinatingly, evidence has been mounting\nin recent years (e.g. Agrawal, Kayal, and Saxena 2004) that this is\nnot the case, and it is now believed that the PTM model in fact does\nnot offer a computational advantage in this sense over the DTM model\n(Arora and Barak 2009 Ch. 20). Probabilistic (Turing) computation is\nnevertheless interesting to consider, because abstractly a\nquantum computer is just a variation on the PTM which\ndoes appear to offer computational advantages over\ndeterministic computation, although as already mentioned this\nconjecture still awaits a proof. See Hagar (2007) and Cuffaro (2018b)\nfor divergent opinions over what this purported quantum computational\nadvantage tells us about the theory of computational complexity as a\nwhole.\n\nThe class \\(\\mathbf{P}\\) (for Polynomial) is the class containing all\nthe computational decision problems that can be solved by a DTM in\npolynomial time. The class NP (for Non-deterministic\nPolynomial) is the class containing all the computational decision\nproblems that can be solved by an NTM in polynomial\n time.[1]\n The most famous problems in NP are called\n\u201cNP-complete\u201d, where\n\u201ccomplete\u201d designates the fact that these problems stand\nor fall together: Either they are all tractable, or none of them is!\nIf we knew how to solve an NP-complete problem\nefficiently (i.e., with polynomial cost) we could use it to\nefficiently solve any other problem in NP (Cook\n1971). Today we know of hundreds of examples of\nNP-complete problems (Garey and Johnson 1979), all of\nwhich are reducible one to another with polynomial slowdown, and since\nthe best known algorithm for any of these problems is exponential, the\nwidely believed conjecture is that there is no polynomial algorithm\nthat can solve them. Clearly \\(\\mathbf{P} \\subseteq \\mathbf{NP}\\).\nProving or disproving the conjecture that \\(\\mathbf{P} \\ne\n\\mathbf{NP}\\), however, remains perhaps one of the most important open\nquestions in computer science and complexity theory.\n\nAlthough the original Church-Turing thesis involves the\nabstract mathematical notion of computability, physicists as\nwell as computer scientists often interpret it as saying something\nabout the scope and limitations of physical computing\nmachines. Wolfram (1985) claims that any physical system can be\nsimulated (to any degree of approximation) by a universal Turing\nmachine, and that complexity bounds on Turing machine simulations have\nphysical significance. For example, if the computation of the minimum\nenergy of some system of \\(n\\) particles requires at least an\nexponentially increasing number of steps in \\(n\\), then the actual\nrelaxation of this system to its minimum energy state will also take\nexponential time. Aharonov (1999) strengthens this thesis (in the\ncontext of showing its putative incompatibility with quantum\nmechanics) when she says that a PTM can simulate any reasonable\nphysical device at polynomial cost. In order for the physical\nChurch-Turing thesis to make sense we have to relate physical space\nand time parameters to their computational counterparts: memory\ncapacity and number of computation steps, respectively. There are\nvarious ways to do that, leading to different formulations of the\nthesis (Pitowsky 1990). For example, one can encode the set of\ninstructions of a universal Turing machine and the state of its\ninfinite tape in the binary development of the position coordinates of\na single particle. Consequently, one can physically\n\u2018realise\u2019 a universal Turing machine as a billiard ball\nwith hyperbolic mirrors (Moore 1990; Pitowsky 1996). For the most\nintuitive connection between abstract Turing machines and physical\ndevices see the pioneering work of Gandy (1980), simplified later by\nSieg and Byrnes (1999), and discussed, for example, in Copeland\n(2018). It should be stressed that there is no relation between the\noriginal Church-Turing thesis and its physical version (Pitowsky and\nShagrir 2003), and while the former concerns the concept of\ncomputation that is relevant to logic (since it is strongly tied to\nthe notion of proof which requires validation), it\ndoes not analytically entail that all computations should be\nsubject to validation. Indeed, there is a long historical tradition of\nanalog computations which use continuous physical processes (Dewdney\n1984), and the output of these computations is validated either by\nrepetitive \u201cruns\u201d or by validating the physical theory\nthat presumably governs the behaviour of the analog computer.\n",
    "section_title": "1.1 Physical Computational Complexity",
    "entry_title": "Quantum Computing",
    "hierarchy_title": "Quantum Computing || A Brief History of the Field || Physical Computational Complexity",
    "tokenized_text": [
        "brief",
        "history",
        "field",
        "physical",
        "computational",
        "complexity",
        "physical",
        "computational",
        "complexity",
        "mathematical",
        "model",
        "universal",
        "computer",
        "defined",
        "long",
        "invention",
        "computer",
        "called",
        "turing",
        "machine",
        "turing",
        "turing",
        "machine",
        "consists",
        "unbounded",
        "tape",
        "head",
        "capable",
        "reading",
        "writing",
        "occupy",
        "one",
        "potentially",
        "infinite",
        "number",
        "possible",
        "state",
        "instruction",
        "table",
        "ie",
        "transition",
        "function",
        "table",
        "given",
        "head",
        "initial",
        "state",
        "input",
        "read",
        "tape",
        "state",
        "determines",
        "symbol",
        "head",
        "write",
        "tape",
        "b",
        "internal",
        "state",
        "occupy",
        "c",
        "displacement",
        "head",
        "tape",
        "turing",
        "showed",
        "since",
        "one",
        "encode",
        "instruction",
        "table",
        "turing",
        "machine",
        "t",
        "express",
        "binary",
        "number",
        "exists",
        "universal",
        "turing",
        "machine",
        "u",
        "simulate",
        "instruction",
        "table",
        "turing",
        "machine",
        "given",
        "input",
        "turing",
        "machine",
        "model",
        "capture",
        "concept",
        "computability",
        "entirety",
        "essence",
        "churchturing",
        "thesis",
        "according",
        "effectively",
        "calculable",
        "function",
        "computed",
        "using",
        "turing",
        "machine",
        "admittedly",
        "counterexample",
        "thesis",
        "result",
        "convergent",
        "idea",
        "turing",
        "post",
        "kleene",
        "church",
        "yet",
        "found",
        "since",
        "identifies",
        "class",
        "computable",
        "function",
        "class",
        "function",
        "computable",
        "using",
        "turing",
        "machine",
        "thesis",
        "involves",
        "precise",
        "mathematical",
        "notion",
        "informal",
        "intuitive",
        "notion",
        "hence",
        "proved",
        "disproved",
        "simple",
        "cardinality",
        "consideration",
        "show",
        "however",
        "function",
        "turingcomputable",
        "set",
        "turing",
        "machine",
        "countable",
        "set",
        "function",
        "natural",
        "number",
        "natural",
        "number",
        "discovery",
        "fact",
        "came",
        "complete",
        "surprise",
        "s",
        "davis",
        "computability",
        "question",
        "whether",
        "function",
        "computed",
        "question",
        "interest",
        "computer",
        "scientist",
        "beginning",
        "especially",
        "s",
        "cobham",
        "edmonds",
        "hartmanis",
        "stearns",
        "question",
        "cost",
        "computing",
        "function",
        "extent",
        "already",
        "anticipated",
        "g\u00f6del",
        "also",
        "came",
        "great",
        "importance",
        "cost",
        "also",
        "known",
        "computational",
        "complexity",
        "measured",
        "naturally",
        "physical",
        "resource",
        "eg",
        "time",
        "space",
        "energy",
        "invested",
        "order",
        "solve",
        "computational",
        "problem",
        "hand",
        "computer",
        "scientist",
        "classify",
        "computational",
        "problem",
        "according",
        "way",
        "cost",
        "function",
        "behaves",
        "function",
        "input",
        "size",
        "n",
        "number",
        "bit",
        "required",
        "store",
        "input",
        "particular",
        "whether",
        "increase",
        "exponentially",
        "polynomially",
        "n",
        "tractable",
        "problem",
        "solved",
        "polynomial",
        "cost",
        "intractable",
        "problem",
        "solved",
        "exponential",
        "cost",
        "former",
        "solution",
        "commonly",
        "regarded",
        "efficient",
        "although",
        "exponentialtime",
        "algorithm",
        "could",
        "turn",
        "efficient",
        "polynomialtime",
        "algorithm",
        "range",
        "input",
        "size",
        "far",
        "turing",
        "machine",
        "discussing",
        "deterministic",
        "machine",
        "behaviour",
        "given",
        "time",
        "wholly",
        "determined",
        "state",
        "plus",
        "whatever",
        "input",
        "happens",
        "word",
        "machine",
        "unique",
        "instruction",
        "table",
        "ie",
        "transition",
        "function",
        "generalise",
        "turing",
        "model",
        "however",
        "allowing",
        "machine",
        "instantiate",
        "one",
        "transition",
        "function",
        "simultaneously",
        "nondeterministic",
        "turing",
        "machine",
        "ntm",
        "upon",
        "presented",
        "given",
        "input",
        "given",
        "state",
        "allowed",
        "choose",
        "transition",
        "function",
        "follow",
        "say",
        "solves",
        "given",
        "problem",
        "whenever",
        "given",
        "input",
        "exists",
        "least",
        "one",
        "path",
        "state",
        "space",
        "leading",
        "solution",
        "exactly",
        "ntm",
        "chooses",
        "whether",
        "follow",
        "one",
        "transition",
        "function",
        "rather",
        "another",
        "left",
        "undefined",
        "paper",
        "turing",
        "originally",
        "conceived",
        "choice",
        "external",
        "operator",
        "particular",
        "assume",
        "probability",
        "attached",
        "choice",
        "probabilistic",
        "turing",
        "machine",
        "ptm",
        "hand",
        "characterise",
        "computer",
        "choice",
        "associating",
        "particular",
        "probability",
        "possible",
        "transition",
        "probabilistic",
        "deterministic",
        "turing",
        "machine",
        "dtms",
        "different",
        "success",
        "criterion",
        "successful",
        "deterministic",
        "algorithm",
        "given",
        "problem",
        "guaranteed",
        "yield",
        "correct",
        "answer",
        "given",
        "input",
        "successful",
        "probabilistic",
        "algorithm",
        "hand",
        "demand",
        "yield",
        "correct",
        "answer",
        "high",
        "probability",
        "minimally",
        "demand",
        "strictly",
        "greater",
        "believed",
        "relatively",
        "recently",
        "problem",
        "see",
        "eg",
        "rabin",
        "probabilistic",
        "algorithm",
        "dramatically",
        "efficient",
        "deterministic",
        "alternative",
        "word",
        "set",
        "class",
        "problem",
        "efficiently",
        "solvable",
        "ptm",
        "larger",
        "class",
        "problem",
        "efficiently",
        "solvable",
        "dtm",
        "fascinatingly",
        "evidence",
        "mounting",
        "recent",
        "year",
        "eg",
        "agrawal",
        "kayal",
        "saxena",
        "case",
        "believed",
        "ptm",
        "model",
        "fact",
        "offer",
        "computational",
        "advantage",
        "sense",
        "dtm",
        "model",
        "arora",
        "barak",
        "ch",
        "probabilistic",
        "turing",
        "computation",
        "nevertheless",
        "interesting",
        "consider",
        "abstractly",
        "quantum",
        "computer",
        "variation",
        "ptm",
        "appear",
        "offer",
        "computational",
        "advantage",
        "deterministic",
        "computation",
        "although",
        "already",
        "mentioned",
        "conjecture",
        "still",
        "awaits",
        "proof",
        "see",
        "hagar",
        "cuffaro",
        "b",
        "divergent",
        "opinion",
        "purported",
        "quantum",
        "computational",
        "advantage",
        "tell",
        "u",
        "theory",
        "computational",
        "complexity",
        "whole",
        "class",
        "mathbf",
        "p",
        "polynomial",
        "class",
        "containing",
        "computational",
        "decision",
        "problem",
        "solved",
        "dtm",
        "polynomial",
        "time",
        "class",
        "np",
        "nondeterministic",
        "polynomial",
        "class",
        "containing",
        "computational",
        "decision",
        "problem",
        "solved",
        "ntm",
        "polynomial",
        "time",
        "famous",
        "problem",
        "np",
        "called",
        "npcomplete",
        "complete",
        "designates",
        "fact",
        "problem",
        "stand",
        "fall",
        "together",
        "either",
        "tractable",
        "none",
        "knew",
        "solve",
        "npcomplete",
        "problem",
        "efficiently",
        "ie",
        "polynomial",
        "cost",
        "could",
        "use",
        "efficiently",
        "solve",
        "problem",
        "np",
        "cook",
        "today",
        "know",
        "hundred",
        "example",
        "npcomplete",
        "problem",
        "garey",
        "johnson",
        "reducible",
        "one",
        "another",
        "polynomial",
        "slowdown",
        "since",
        "best",
        "known",
        "algorithm",
        "problem",
        "exponential",
        "widely",
        "believed",
        "conjecture",
        "polynomial",
        "algorithm",
        "solve",
        "clearly",
        "mathbf",
        "p",
        "subseteq",
        "mathbf",
        "np",
        "proving",
        "disproving",
        "conjecture",
        "mathbf",
        "p",
        "ne",
        "mathbf",
        "np",
        "however",
        "remains",
        "perhaps",
        "one",
        "important",
        "open",
        "question",
        "computer",
        "science",
        "complexity",
        "theory",
        "although",
        "original",
        "churchturing",
        "thesis",
        "involves",
        "abstract",
        "mathematical",
        "notion",
        "computability",
        "physicist",
        "well",
        "computer",
        "scientist",
        "often",
        "interpret",
        "saying",
        "something",
        "scope",
        "limitation",
        "physical",
        "computing",
        "machine",
        "wolfram",
        "claim",
        "physical",
        "system",
        "simulated",
        "degree",
        "approximation",
        "universal",
        "turing",
        "machine",
        "complexity",
        "bound",
        "turing",
        "machine",
        "simulation",
        "physical",
        "significance",
        "example",
        "computation",
        "minimum",
        "energy",
        "system",
        "n",
        "particle",
        "requires",
        "least",
        "exponentially",
        "increasing",
        "number",
        "step",
        "n",
        "actual",
        "relaxation",
        "system",
        "minimum",
        "energy",
        "state",
        "also",
        "take",
        "exponential",
        "time",
        "aharonov",
        "strengthens",
        "thesis",
        "context",
        "showing",
        "putative",
        "incompatibility",
        "quantum",
        "mechanic",
        "say",
        "ptm",
        "simulate",
        "reasonable",
        "physical",
        "device",
        "polynomial",
        "cost",
        "order",
        "physical",
        "churchturing",
        "thesis",
        "make",
        "sense",
        "relate",
        "physical",
        "space",
        "time",
        "parameter",
        "computational",
        "counterpart",
        "memory",
        "capacity",
        "number",
        "computation",
        "step",
        "respectively",
        "various",
        "way",
        "leading",
        "different",
        "formulation",
        "thesis",
        "pitowsky",
        "example",
        "one",
        "encode",
        "set",
        "instruction",
        "universal",
        "turing",
        "machine",
        "state",
        "infinite",
        "tape",
        "binary",
        "development",
        "position",
        "coordinate",
        "single",
        "particle",
        "consequently",
        "one",
        "physically",
        "realise",
        "universal",
        "turing",
        "machine",
        "billiard",
        "ball",
        "hyperbolic",
        "mirror",
        "moore",
        "pitowsky",
        "intuitive",
        "connection",
        "abstract",
        "turing",
        "machine",
        "physical",
        "device",
        "see",
        "pioneering",
        "work",
        "gandy",
        "simplified",
        "later",
        "sieg",
        "byrnes",
        "discussed",
        "example",
        "copeland",
        "stressed",
        "relation",
        "original",
        "churchturing",
        "thesis",
        "physical",
        "version",
        "pitowsky",
        "shagrir",
        "former",
        "concern",
        "concept",
        "computation",
        "relevant",
        "logic",
        "since",
        "strongly",
        "tied",
        "notion",
        "proof",
        "requires",
        "validation",
        "analytically",
        "entail",
        "computation",
        "subject",
        "validation",
        "indeed",
        "long",
        "historical",
        "tradition",
        "analog",
        "computation",
        "use",
        "continuous",
        "physical",
        "process",
        "dewdney",
        "output",
        "computation",
        "validated",
        "either",
        "repetitive",
        "run",
        "validating",
        "physical",
        "theory",
        "presumably",
        "governs",
        "behaviour",
        "analog",
        "computer"
    ]
}