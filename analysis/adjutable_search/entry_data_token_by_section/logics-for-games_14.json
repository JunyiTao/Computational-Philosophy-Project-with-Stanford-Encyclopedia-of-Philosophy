{
    "main_text": "Game Structure and Game Logics || Strategies as Logical Objects\n2.7 Strategies as Logical Objects\n\nThere is further structure in extensive games than just single moves.\nIn game trees, a player\u2019s strategy specifies what to do\nat each turn, whether this turn will ever be reached or not. An\nincreasing body of work examines such strategies and their underlying\nformats, see van Benthem, Ghosh, and Verbrugge\n(2015) for an overview of various logical frameworks for\nreasoning about strategies.\n\nIn one concrete perspective, a strategy is akin to a program that\ninstructs the agent on how to navigate a game tree. Hence, a natural\nlogic of strategies uses the language of\n propositional dynamic logic of programs\n PDL, an approach that will return later. As programs are in general\nnon-deterministic, such logics let a strategy recommend one or more\nactions the agent should take at each turn. In this perspective,\nstrategies resemble plans that might remain partial.\n\nIn a program format, strategies start with basic actions, representing\nindividual moves in a game tree. From there, complex programs \\(\\pi\\)\ncan be created using operations including sequential compositions\n\\(\\pi_{1} \\,;\\pi_{2}\\) (\\(\\pi_{1}\\) is to be performed followed by\n\\(\\pi_{2}\\)), or choice \\(\\pi_{1}\\, \\cup_{i} \\pi_{2}\\) (agent i\nis to pick between actions \\(\\pi_{1}\\) and \\(\\pi_{2}\\) ). Moreover, a\ntest operation \\(?\\varphi\\) for checking whether \\(\\varphi\\) holds,\nenables strategies to react to properties of states or\nopponents\u2019 past actions. Finally, to describe continuous\nexecution of a strategy along a game tree, it makes sense to have an\noperation \\(\\pi^{*}\\) of program iteration, stating that \\(\\pi\\) be\nexecuted arbitrarily often.\n\nThe language of PDL then has modal operators \\([\\pi]\\) for every\nprogram \\(\\pi\\) that can be defined from the basic actions and the\noperations just described. A simple such strategy advises player\ni to do a whenever it is her turn. The following formula\nstates that this strategy ensures that \\(\\varphi\\) holds\nthroughout: \n\\[\n[((?\\turn_i \\mathbin{;}  a)\\, \\cup \\, (?\\turn_j \\mathbin{;} \\move_j))^{*}]\\varphi\n\\]\n\n\nProgram definitions for strategies given here are closely related to\nthe use of finite automata for defining strategies in computer science\nand game theory (Osborne & Rubinstein 1994;\nGr\u00e4del, Thomas, & Wilke 2002; Ramanujam & Simon\n2008).\n",
    "section_title": "2.7 Strategies as Logical Objects",
    "entry_title": "Logics for Analyzing Games",
    "hierarchy_title": "Logics for Analyzing Games || Game Structure and Game Logics || Strategies as Logical Objects",
    "tokenized_text": [
        "game",
        "structure",
        "game",
        "logic",
        "strategy",
        "logical",
        "object",
        "strategy",
        "logical",
        "object",
        "structure",
        "extensive",
        "game",
        "single",
        "move",
        "game",
        "tree",
        "player",
        "strategy",
        "specifies",
        "turn",
        "whether",
        "turn",
        "ever",
        "reached",
        "increasing",
        "body",
        "work",
        "examines",
        "strategy",
        "underlying",
        "format",
        "see",
        "van",
        "benthem",
        "ghosh",
        "verbrugge",
        "overview",
        "various",
        "logical",
        "framework",
        "reasoning",
        "strategy",
        "one",
        "concrete",
        "perspective",
        "strategy",
        "akin",
        "program",
        "instructs",
        "agent",
        "navigate",
        "game",
        "tree",
        "hence",
        "natural",
        "logic",
        "strategy",
        "us",
        "language",
        "propositional",
        "dynamic",
        "logic",
        "program",
        "pdl",
        "approach",
        "return",
        "later",
        "program",
        "general",
        "nondeterministic",
        "logic",
        "let",
        "strategy",
        "recommend",
        "one",
        "action",
        "agent",
        "take",
        "turn",
        "perspective",
        "strategy",
        "resemble",
        "plan",
        "might",
        "remain",
        "partial",
        "program",
        "format",
        "strategy",
        "start",
        "basic",
        "action",
        "representing",
        "individual",
        "move",
        "game",
        "tree",
        "complex",
        "program",
        "pi",
        "created",
        "using",
        "operation",
        "including",
        "sequential",
        "composition",
        "pi_",
        "pi_",
        "pi_",
        "performed",
        "followed",
        "pi_",
        "choice",
        "pi_",
        "cup_",
        "pi_",
        "agent",
        "pick",
        "action",
        "pi_",
        "pi_",
        "moreover",
        "test",
        "operation",
        "varphi",
        "checking",
        "whether",
        "varphi",
        "hold",
        "enables",
        "strategy",
        "react",
        "property",
        "state",
        "opponent",
        "past",
        "action",
        "finally",
        "describe",
        "continuous",
        "execution",
        "strategy",
        "along",
        "game",
        "tree",
        "make",
        "sense",
        "operation",
        "pi",
        "program",
        "iteration",
        "stating",
        "pi",
        "executed",
        "arbitrarily",
        "often",
        "language",
        "pdl",
        "modal",
        "operator",
        "pi",
        "every",
        "program",
        "pi",
        "defined",
        "basic",
        "action",
        "operation",
        "described",
        "simple",
        "strategy",
        "advises",
        "player",
        "whenever",
        "turn",
        "following",
        "formula",
        "state",
        "strategy",
        "ensures",
        "varphi",
        "hold",
        "throughout",
        "turn_i",
        "mathbin",
        "cup",
        "turn_j",
        "mathbin",
        "move_j",
        "varphi",
        "program",
        "definition",
        "strategy",
        "given",
        "closely",
        "related",
        "use",
        "finite",
        "automaton",
        "defining",
        "strategy",
        "computer",
        "science",
        "game",
        "theory",
        "osborne",
        "rubinstein",
        "gr\u00e4del",
        "thomas",
        "wilke",
        "ramanujam",
        "simon"
    ]
}