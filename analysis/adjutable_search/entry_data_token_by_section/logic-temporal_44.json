{
    "main_text": "Applications of temporal logics || Temporal logics in Computer Science\n11.1 Temporal logics in Computer Science\n\nThe idea to apply temporal reasoning to the analysis of deterministic\nand stochastic transition systems was already present in the theory of\nprocesses and events in Rescher and Urquhart (1971, Chapter XIV).\nHowever, it was with the seminal paper of Pnueli (1977) that temporal\nlogic became really prominent in computer science. Pnueli proposed the\napplication of temporal logics to the specification and verification\nof reactive and concurrent programs and systems. In order to\nensure correct behavior of a reactive program, in which computations\nare non-terminating (e.g. an operating system), it is necessary to\nformally specify and verify the acceptable infinite executions of that\nprogram. In addition, to ensure correctness of a concurrent program,\nwhere two or more processors are working in parallel, it is necessary\nto formally specify and verify their interaction and\nsynchronization.\n\nKey properties of infinite computations that can be captured by\ntemporal patterns are liveness, safety, and fairness (see Manna and\nPnueli 1992):\n\nLiveness properties or eventualities involve\ntemporal patterns of the forms \\(F{p},\\) \\(q \\to F {p},\\) or \\(G(q \\to\nF {p}),\\) which ensure that if a specific precondition (\\(q\\)) is\ninitially satisfied, then a desirable state (satisfying \\(p\\)) will\neventually be reached in the course of the computation. Examples are\n\u201cIf a message is sent, it will eventually be delivered\u201d\nand \u201cWhenever a printing job is activated, it will eventually be\ncompleted\u201d.\nSafety or invariance properties involve temporal\npatterns of the forms \\({G} {p},\\) \\(q \\to {G} {p},\\) or \\(G(q \\to {G}\n{p}),\\) which ensure that if a specific precondition (\\(q\\)) is\ninitially satisfied, then undesirable states (violating the safety\ncondition \\(p\\)) will never occur. Examples are: \u201cNo more than\none process will be in its critical section at any moment of\ntime\u201d, \u201cA resource will never be used by two or more\nprocesses simultaneously\u201d, or, to give more practical examples:\n\u201cThe traffic lights will never show green in both\ndirections\u201d, \u201cA train will never pass a red\nsemaphore\u201d.\nFairness properties involve combinations of temporal\npatterns of the forms \\({GF} {p}\\) (\u201cinfinitely often\n\\(p\\)\u201d) or \\({FG} {p}\\) (\u201ceventually always \\(p\\)\u201d).\nIntuitively, fairness requires that whenever several processes that\nshare resources are run concurrently, they must be treated\n\u2018fairly\u2019 by the operating system, scheduler, etc. A\ntypical fairness requirement says that if a process is persistent\nenough in sending a request (e.g. keeps sending it over and over\nagain), its request will eventually be granted.\n\n\nAn infinite computation is formally represented by a model of the\nlinear time temporal logic LTL. Non-deterministic systems are modeled\nby branching time structures. Thus, both LTL and the computation tree\nlogics CTL and CTL* have been very important for specification and\nverification of reactive and concurrent systems.\n\nThe following example combines liveness and safety properties of a\nsingle computation: \u201cWhenever a state of alert is reached, the\nalarm is activated and remains activated until a safe state is\neventually reached\u201d. This property is expressible in LTL as\n\n\\[\n G(\\textsf{alert} \\to (\\textsf{alarm} \\ U\\ \\textsf{safe})).\n\\]\n\n\nAnother example, referring to all computations in the system, is:\n\u201cIf the process \\(\\sigma\\) is eventually enabled on some\ncomputation starting from the current state, then on every computation\nstarting there, whenever \\(\\sigma\\) is enabled, it will remain enabled\nuntil the process \\(\\tau\\) is disabled\u201d. This property can be\nformalized in CTL* as \n\n\\[ \n\\Diamond F\\,\\textsf{enabled}_{\\sigma} \\to \\Box\nG(\\textsf{enabled}_{\\sigma} \\to (\\textsf{enabled}_{\\sigma} \\,U\\,\n\\textsf{disabled}_{\\tau})).  \n\\]\n\n\nA variation of LTL with useful applications for specifying and\nreasoning about concurrent systems is Lamport\u2019s (1994)\ntemporal logic of actions TLA. Other applications of temporal\nlogics in computer science include: temporal databases, real-time\nprocesses and systems, hardware verification, etc. Further information\non such applications can be found in e.g. Pnueli (1977); Emerson and\nClarke (1982); Moszkowski (1983); Galton (1987); Emerson (1990); Alur\nand Henzinger (1992); Lamport (1994); Vardi and Wolper (1994); Bolc\nand Szalas (1995); Gabbay et al. (2000); Baier and Katoen (2008);\nKr\u00f6ger and Merz (2008); Fisher (2011); Demri et al. (2016).\n",
    "section_title": "11.1 Temporal logics in Computer Science",
    "entry_title": "Temporal Logic",
    "hierarchy_title": "Temporal Logic || Applications of temporal logics || Temporal logics in Computer Science",
    "tokenized_text": [
        "application",
        "temporal",
        "logic",
        "temporal",
        "logic",
        "computer",
        "science",
        "temporal",
        "logic",
        "computer",
        "science",
        "idea",
        "apply",
        "temporal",
        "reasoning",
        "analysis",
        "deterministic",
        "stochastic",
        "transition",
        "system",
        "already",
        "present",
        "theory",
        "process",
        "event",
        "rescher",
        "urquhart",
        "chapter",
        "xiv",
        "however",
        "seminal",
        "paper",
        "pnueli",
        "temporal",
        "logic",
        "became",
        "really",
        "prominent",
        "computer",
        "science",
        "pnueli",
        "proposed",
        "application",
        "temporal",
        "logic",
        "specification",
        "verification",
        "reactive",
        "concurrent",
        "program",
        "system",
        "order",
        "ensure",
        "correct",
        "behavior",
        "reactive",
        "program",
        "computation",
        "nonterminating",
        "eg",
        "operating",
        "system",
        "necessary",
        "formally",
        "specify",
        "verify",
        "acceptable",
        "infinite",
        "execution",
        "program",
        "addition",
        "ensure",
        "correctness",
        "concurrent",
        "program",
        "two",
        "processor",
        "working",
        "parallel",
        "necessary",
        "formally",
        "specify",
        "verify",
        "interaction",
        "synchronization",
        "key",
        "property",
        "infinite",
        "computation",
        "captured",
        "temporal",
        "pattern",
        "liveness",
        "safety",
        "fairness",
        "see",
        "manna",
        "pnueli",
        "liveness",
        "property",
        "eventuality",
        "involve",
        "temporal",
        "pattern",
        "form",
        "f",
        "p",
        "q",
        "to",
        "f",
        "p",
        "g",
        "q",
        "to",
        "f",
        "p",
        "ensure",
        "specific",
        "precondition",
        "q",
        "initially",
        "satisfied",
        "desirable",
        "state",
        "satisfying",
        "p",
        "eventually",
        "reached",
        "course",
        "computation",
        "example",
        "message",
        "sent",
        "eventually",
        "delivered",
        "whenever",
        "printing",
        "job",
        "activated",
        "eventually",
        "completed",
        "safety",
        "invariance",
        "property",
        "involve",
        "temporal",
        "pattern",
        "form",
        "g",
        "p",
        "q",
        "to",
        "g",
        "p",
        "g",
        "q",
        "to",
        "g",
        "p",
        "ensure",
        "specific",
        "precondition",
        "q",
        "initially",
        "satisfied",
        "undesirable",
        "state",
        "violating",
        "safety",
        "condition",
        "p",
        "never",
        "occur",
        "example",
        "one",
        "process",
        "critical",
        "section",
        "moment",
        "time",
        "resource",
        "never",
        "used",
        "two",
        "process",
        "simultaneously",
        "give",
        "practical",
        "example",
        "traffic",
        "light",
        "never",
        "show",
        "green",
        "direction",
        "train",
        "never",
        "pas",
        "red",
        "semaphore",
        "fairness",
        "property",
        "involve",
        "combination",
        "temporal",
        "pattern",
        "form",
        "gf",
        "p",
        "infinitely",
        "often",
        "p",
        "fg",
        "p",
        "eventually",
        "always",
        "p",
        "intuitively",
        "fairness",
        "requires",
        "whenever",
        "several",
        "process",
        "share",
        "resource",
        "run",
        "concurrently",
        "must",
        "treated",
        "fairly",
        "operating",
        "system",
        "scheduler",
        "etc",
        "typical",
        "fairness",
        "requirement",
        "say",
        "process",
        "persistent",
        "enough",
        "sending",
        "request",
        "eg",
        "keep",
        "sending",
        "request",
        "eventually",
        "granted",
        "infinite",
        "computation",
        "formally",
        "represented",
        "model",
        "linear",
        "time",
        "temporal",
        "logic",
        "ltl",
        "nondeterministic",
        "system",
        "modeled",
        "branching",
        "time",
        "structure",
        "thus",
        "ltl",
        "computation",
        "tree",
        "logic",
        "ctl",
        "ctl",
        "important",
        "specification",
        "verification",
        "reactive",
        "concurrent",
        "system",
        "following",
        "example",
        "combine",
        "liveness",
        "safety",
        "property",
        "single",
        "computation",
        "whenever",
        "state",
        "alert",
        "reached",
        "alarm",
        "activated",
        "remains",
        "activated",
        "safe",
        "state",
        "eventually",
        "reached",
        "property",
        "expressible",
        "ltl",
        "g",
        "textsf",
        "alert",
        "to",
        "textsf",
        "alarm",
        "u",
        "textsf",
        "safe",
        "another",
        "example",
        "referring",
        "computation",
        "system",
        "process",
        "sigma",
        "eventually",
        "enabled",
        "computation",
        "starting",
        "current",
        "state",
        "every",
        "computation",
        "starting",
        "whenever",
        "sigma",
        "enabled",
        "remain",
        "enabled",
        "process",
        "tau",
        "disabled",
        "property",
        "formalized",
        "ctl",
        "diamond",
        "f",
        "textsf",
        "enabled",
        "_",
        "sigma",
        "to",
        "box",
        "g",
        "textsf",
        "enabled",
        "_",
        "sigma",
        "to",
        "textsf",
        "enabled",
        "_",
        "sigma",
        "u",
        "textsf",
        "disabled",
        "_",
        "tau",
        "variation",
        "ltl",
        "useful",
        "application",
        "specifying",
        "reasoning",
        "concurrent",
        "system",
        "lamport",
        "temporal",
        "logic",
        "action",
        "tla",
        "application",
        "temporal",
        "logic",
        "computer",
        "science",
        "include",
        "temporal",
        "database",
        "realtime",
        "process",
        "system",
        "hardware",
        "verification",
        "etc",
        "information",
        "application",
        "found",
        "eg",
        "pnueli",
        "emerson",
        "clarke",
        "moszkowski",
        "galton",
        "emerson",
        "alur",
        "henzinger",
        "lamport",
        "vardi",
        "wolper",
        "bolc",
        "szalas",
        "gabbay",
        "et",
        "al",
        "baier",
        "katoen",
        "kr\u00f6ger",
        "merz",
        "fisher",
        "demri",
        "et",
        "al"
    ]
}