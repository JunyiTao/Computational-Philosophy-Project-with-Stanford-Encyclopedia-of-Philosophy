{
    "main_text": "Propositional Functions in  Simple Type Theory\n6. Propositional Functions in  Simple Type Theory\nWhile writing the Principles of Mathematics, Russell\ndiscovered the paradox that now bears his name. Before we get to\nRussell's paradox, let us discuss some the method\nof diagonalization by which this and many other paradoxes are\ngenerated.\nThe power set of a set S, \u2118S contains all\nthe subsets of S. Georg Cantor (1845\u20131918) used the method of\ndiagonalization to show that for any set S,\n\u2118S is larger than S.\nHere is Cantor's proof. Suppose that \u2118S\nand S are the same size. Then, by the set-theoretic\ndefinition of \u201csame size\u201d (more correctly, \u2018same\ncardinality\u2019) there is a one-to-one surjection\nbetween S and \u2118S. This means that there is a\nfunction that matches up each member of S with a unique\nmember of \u2118S so that there are no members of\n\u2118S left over. Let us call this\nfunction, f. Then, if x is a member\nof S, f(x) is in \u2118S. Now,\nsince \u2118S is the power set of S, it may be\nthat x is in f(x) or it may not be\nin f(x).  Let us now define a set C:\n\nC = {x \u2208 S: \nx \u2209 f(x)}\n\nClearly, C is a subset of S, so it is in\n\u2118S. By hypothesis, f is onto\u2014for\nevery member y of \u2118S, there is\nan x \u2208 S such\nthat f(x) = y.  Thus there must be\nsome c \u2208 S such that\n\nf(c) = C\n\nNow, either\n\nc \u2208 C\n\nor\n\nc \u2209 C.\n\nSuppose that c is in C. Then, by the definition\nof C, c is not in\nf(c). That is to say, c\n\u2209 C. But, if c is not in C,\nthen c \u2209 f(c). So, by the definition\nof C, c is in C.  Thus,\n\nc is in C if and only if c is not\nin C.\nTherefore, the assumption that a set is the same size\nas its power set leads to a paradox, and so this assumption must be\nfalse.\nCantor's theorem has important consequences for the theory of\npropositional functions. Consider a model for a (first-order) logical\nlanguage that has a domain D. The variables of the language\nrange over members of D. Now let us add predicate variables\nto the language. These stand for propositional functions. How are we\nto interpret them in the model? The standard way of doing so\u2014that\nis inherited from the extensional logic tradition\u2014is to have\npredicate variables range over subsets of the domain. A model in which\npredicate variables range over all subsets of the domain is called a\n\u2018standard model\u2019 for second-order logic. Cantor's theorem\ntells us that the domain for predicate variables in the standard model\nis larger than the domain for individual variables.  If we have\npredicates of predicates, then the domain for third order predicates\nis even larger. And so on.\nRussell's paradox is very closely related to Cantor's\ntheorem. There are two versions of the paradox: (1) the class\nversion; (2) the propositional function version. I only discuss the\npropositional function version of the paradox.\nIn his early writings, Russell wants logic to be a\nuniversal science. It should allow us to talk about properties\nof everything. By this he means that the variables in logic should be\ntaken to range over all entities. But propositional functions,\nat least in the Principles, are entities. So variables\nshould range over them. Now consider the predicate\nR such that,\n\n\n(\u2200x)(Rx =\n\u00acxx)\n\n\n(Russell's predicate R is very similar to\nCantor's set C.) If we instantiate\nand substitute R for x, we obtain\n\nRR \u2261 \u00acRR\nIt seems, then, that the treatment of variables as\ncompletely general together with the liberty to define propositional\nfunctions by means of any well-formed formula enables us to derive a\ncontradiction.\nRussell blocks the contradiction in\nthe Principles by the introduction of a theory of types. This\nis a simple theory of types, that only distinguishes between the types\nof various propositional functions (or, in its class-form, of\nclasses).  Let us depart from Russell's own exposition of the theory\nof types in order to give a more rigorous and more modern version of\nthe theory. This will make my presentations of the ramified theory of\ntypes and more modern versions of type theory easier.\nWe'll use one basic type, i (the type of individuals) and\ndefine the types as follows:\n\ni is a type;\nif t1,\u2026, tn\nare types, then so is\n<t1,\u2026, tn>, \n  where n\u2009\u2265\u20090.\nNothing else is a type except by repeated applications of\n(1) and (2).\n\nThe type\n<t1,\u2026, tn>\nis the type of a relation among entities of\ntypes t1,\u2026, tn.\nBut, for simplicity, we will interpret this as the type of a function\nthat takes these entities to a proposition. (Note that\nwhen n\u2009=\u20090, then the empty type, <\u2009>, is\nthe type for propositions.) This definition incorporates the idea of a\nwell-founded structure. There are no cycles here. We cannot have a\nfunction that takes as an argument a function of the same or higher\ntype. Thus, simple type theory bans the sort of self-application that\ngives rise to Russell's paradox.\nThe type hierarchy corresponds neatly to the hierarchy of domains\nthat we saw in our discussion of Cantor's theorem.  A unary predicate\nhas the type <i>; its domain is D\u2014the set\nof individuals. A unary predicate of predicates has the type\n<<i>>, and this corresponds to the domain of\nsubsets of D. And so on.\nFor more, \nsee the entry on\n  Russell's paradox.\n",
    "section_title": "6. Propositional Functions in  Simple Type Theory",
    "entry_title": "Propositional Function",
    "hierarchy_title": "Propositional Function || Propositional Functions in  Simple Type Theory",
    "tokenized_text": [
        "propositional",
        "function",
        "simple",
        "type",
        "theory",
        "propositional",
        "function",
        "simple",
        "type",
        "theory",
        "writing",
        "principle",
        "mathematics",
        "russell",
        "discovered",
        "paradox",
        "bear",
        "name",
        "get",
        "russell",
        "s",
        "paradox",
        "let",
        "u",
        "discus",
        "method",
        "diagonalization",
        "many",
        "paradox",
        "generated",
        "power",
        "set",
        "set",
        "s",
        "contains",
        "subset",
        "s",
        "georg",
        "cantor",
        "used",
        "method",
        "diagonalization",
        "show",
        "set",
        "s",
        "larger",
        "s",
        "cantor",
        "s",
        "proof",
        "suppose",
        "s",
        "size",
        "settheoretic",
        "definition",
        "size",
        "correctly",
        "cardinality",
        "onetoone",
        "surjection",
        "s",
        "mean",
        "function",
        "match",
        "member",
        "unique",
        "member",
        "s",
        "member",
        "s",
        "left",
        "let",
        "u",
        "call",
        "function",
        "f",
        "x",
        "member",
        "f",
        "x",
        "s",
        "since",
        "s",
        "power",
        "set",
        "may",
        "x",
        "f",
        "x",
        "may",
        "f",
        "x",
        "let",
        "u",
        "define",
        "set",
        "c",
        "c",
        "x",
        "x",
        "f",
        "x",
        "clearly",
        "c",
        "subset",
        "s",
        "hypothesis",
        "f",
        "ontofor",
        "every",
        "member",
        "s",
        "x",
        "f",
        "x",
        "y",
        "thus",
        "must",
        "c",
        "f",
        "c",
        "c",
        "either",
        "c",
        "c",
        "c",
        "c",
        "suppose",
        "c",
        "c",
        "definition",
        "c",
        "c",
        "f",
        "c",
        "say",
        "c",
        "c",
        "c",
        "c",
        "c",
        "f",
        "c",
        "definition",
        "c",
        "c",
        "c",
        "thus",
        "c",
        "c",
        "c",
        "c",
        "therefore",
        "assumption",
        "set",
        "size",
        "power",
        "set",
        "lead",
        "paradox",
        "assumption",
        "must",
        "false",
        "cantor",
        "s",
        "theorem",
        "important",
        "consequence",
        "theory",
        "propositional",
        "function",
        "consider",
        "model",
        "firstorder",
        "logical",
        "language",
        "domain",
        "d",
        "variable",
        "language",
        "range",
        "member",
        "d",
        "let",
        "u",
        "add",
        "predicate",
        "variable",
        "language",
        "stand",
        "propositional",
        "function",
        "interpret",
        "model",
        "standard",
        "way",
        "sothat",
        "inherited",
        "extensional",
        "logic",
        "traditionis",
        "predicate",
        "variable",
        "range",
        "subset",
        "domain",
        "model",
        "predicate",
        "variable",
        "range",
        "subset",
        "domain",
        "called",
        "standard",
        "model",
        "secondorder",
        "logic",
        "cantor",
        "s",
        "theorem",
        "tell",
        "u",
        "domain",
        "predicate",
        "variable",
        "standard",
        "model",
        "larger",
        "domain",
        "individual",
        "variable",
        "predicate",
        "predicate",
        "domain",
        "third",
        "order",
        "predicate",
        "even",
        "larger",
        "russell",
        "s",
        "paradox",
        "closely",
        "related",
        "cantor",
        "s",
        "theorem",
        "two",
        "version",
        "paradox",
        "class",
        "version",
        "propositional",
        "function",
        "version",
        "discus",
        "propositional",
        "function",
        "version",
        "paradox",
        "early",
        "writing",
        "russell",
        "want",
        "logic",
        "universal",
        "science",
        "allow",
        "u",
        "talk",
        "property",
        "everything",
        "mean",
        "variable",
        "logic",
        "taken",
        "range",
        "entity",
        "propositional",
        "function",
        "least",
        "principle",
        "entity",
        "variable",
        "range",
        "consider",
        "predicate",
        "r",
        "x",
        "rx",
        "xx",
        "russell",
        "s",
        "predicate",
        "r",
        "similar",
        "cantor",
        "s",
        "set",
        "c",
        "instantiate",
        "substitute",
        "r",
        "x",
        "obtain",
        "rr",
        "rr",
        "seems",
        "treatment",
        "variable",
        "completely",
        "general",
        "together",
        "liberty",
        "define",
        "propositional",
        "function",
        "mean",
        "wellformed",
        "formula",
        "enables",
        "u",
        "derive",
        "contradiction",
        "russell",
        "block",
        "contradiction",
        "principle",
        "introduction",
        "theory",
        "type",
        "simple",
        "theory",
        "type",
        "distinguishes",
        "type",
        "various",
        "propositional",
        "function",
        "classform",
        "class",
        "let",
        "u",
        "depart",
        "russell",
        "s",
        "exposition",
        "theory",
        "type",
        "order",
        "give",
        "rigorous",
        "modern",
        "version",
        "theory",
        "make",
        "presentation",
        "ramified",
        "theory",
        "type",
        "modern",
        "version",
        "type",
        "theory",
        "easier",
        "ll",
        "use",
        "one",
        "basic",
        "type",
        "type",
        "individual",
        "define",
        "type",
        "follows",
        "type",
        "t",
        "tn",
        "type",
        "t",
        "tn",
        "n",
        "nothing",
        "else",
        "type",
        "except",
        "repeated",
        "application",
        "type",
        "t",
        "tn",
        "type",
        "relation",
        "among",
        "entity",
        "type",
        "t",
        "tn",
        "simplicity",
        "interpret",
        "type",
        "function",
        "take",
        "entity",
        "proposition",
        "note",
        "n",
        "empty",
        "type",
        "type",
        "proposition",
        "definition",
        "incorporates",
        "idea",
        "wellfounded",
        "structure",
        "cycle",
        "function",
        "take",
        "argument",
        "function",
        "higher",
        "type",
        "thus",
        "simple",
        "type",
        "theory",
        "ban",
        "sort",
        "selfapplication",
        "give",
        "rise",
        "russell",
        "s",
        "paradox",
        "type",
        "hierarchy",
        "corresponds",
        "neatly",
        "hierarchy",
        "domain",
        "saw",
        "discussion",
        "cantor",
        "s",
        "theorem",
        "unary",
        "predicate",
        "type",
        "domain",
        "dthe",
        "set",
        "individual",
        "unary",
        "predicate",
        "predicate",
        "type",
        "corresponds",
        "domain",
        "subset",
        "d",
        "see",
        "entry",
        "russell",
        "s",
        "paradox"
    ]
}