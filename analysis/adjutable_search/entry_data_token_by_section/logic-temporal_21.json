{
    "main_text": "Branching time temporal logics || The computation tree logics CTL and CTL*\n5.5 The computation tree logics CTL and CTL*\n\nBranching time logics are extensively used in computer science. The\nmost popular ones are the computation tree logics CTL and CTL*, which\nare variations of the Peircean and Ockhamist branching time temporal\nlogics. They are interpreted on the class of so-called computation\ntrees, where every history has the order type of the natural\nnumbers. These trees are naturally obtained as tree unfoldings of\ndiscrete transition systems and represent the possible infinite\ncomputations arising in such systems. While CTL historically preceded\nCTL*, nowadays CTL is often viewed as a fragment of CTL*, and we\nfollow this convention here. \n\nThe full computation tree logic CTL* is the computational\nvariant of Ockhamism, and it was introduced by Emerson and Halpern\n(1985). The language of CTL* contains (the reflexive versions of) the\nfuture operators \\(G\\) and \\(U\\) (Until) as well as the\nNext Time operator \\(X\\) (no past operators), which are now\ninterpreted on computation trees. As in the general Ockhamist\nbranching time logic, the evaluation is relativized to both an instant\n(here called state) and a history (here called\npath). We note that in computer science usually instant-based\natomic propositions are assumed, i.e., the valuation of the atomic\npropositions depends only on the state.\nThe computation tree logic CTL is the computational\nvariant of Peirceanism, and it was introduced by Emerson and Clarke\n(1982). CTL is the fragment of CTL* where each of the temporal\noperators \\(G\\), \\(U\\), and \\(X\\) is immediately preceded by a modal\noperator, \\(\\Box\\) or \\(\\Diamond\\), here usually denoted as the path\nquantifiers \\(\\forall\\) and \\(\\exists\\). That is, the language of CTL\nis recursively built up using the combined modalities \\(\\forall\nG\\varphi\\), \\(\\forall(\\varphi U\\psi)\\), \\(\\forall X\\varphi\\) and\n\\(\\exists G\\varphi\\), \\(\\exists(\\varphi U\\psi)\\), \\(\\exists\nX\\varphi\\). A precursor of CTL is the logic UB, introduced by Ben-Ari\net al. (1983), in which \\(U\\) does not occur. \n\n\nThe logic CTL became widely used owing to its good computational\nproperties with regard to model checking, having linear\ncomplexity both in the size of the input formula and in the size of\nthe input model (as finite transition system). However, CTL is not\nvery expressive, which led to its extension CTL*. The logic CTL* is\nexpressively much more powerful and subsumes the linear time temporal logic\nLTL, but it has higher complexities of model checking (PSPACE) and of\ndeciding satisfiability (2EXPTIME). For references and further\ndetails, see Emerson (1990) and Stirling (1992).\n\nA complete axiomatization of CTL can be obtained by replacing the\naxioms of LTL by their path-quantified versions. For proofs of\ncompleteness, see Emerson (1990) and Goldblatt (1992). For CTL* more\naxioms must be added to account for the combinations of temporal and\nmodal operators and to enforce the limit closure property of trees. A\ncomplete axiomatization for CTL* was obtained by Reynolds (2001), and\na completeness result for the extension of CTL* with past operators is\nestablished in Reynolds (2005). A sketch of the axiomatic system for\nCTL can be found in the supplementary document:\n\nAn Axiomatic System for CTL\n\nWe note that the Peircean and Ockhamist branching time logics, as well\nas their computational variants, have the finite model property and\nare decidable. Proofs of decidability of the respective logics can be\nfound in e.g. Burgess (1980); Emerson and Sistla (1984); Gurevich and\nShelah (1985); Emerson and Halpern (1985); Emerson\n(1990); Goldblatt (1992); Gabbay et al. (1994); Finger et al. (2002); and Demri et al.\n(2016).\n",
    "section_title": "5.5 The computation tree logics CTL and CTL*",
    "entry_title": "Temporal Logic",
    "hierarchy_title": "Temporal Logic || Branching time temporal logics || The computation tree logics CTL and CTL*",
    "tokenized_text": [
        "branching",
        "time",
        "temporal",
        "logic",
        "computation",
        "tree",
        "logic",
        "ctl",
        "ctl",
        "computation",
        "tree",
        "logic",
        "ctl",
        "ctl",
        "branching",
        "time",
        "logic",
        "extensively",
        "used",
        "computer",
        "science",
        "popular",
        "one",
        "computation",
        "tree",
        "logic",
        "ctl",
        "ctl",
        "variation",
        "peircean",
        "ockhamist",
        "branching",
        "time",
        "temporal",
        "logic",
        "interpreted",
        "class",
        "socalled",
        "computation",
        "tree",
        "every",
        "history",
        "order",
        "type",
        "natural",
        "number",
        "tree",
        "naturally",
        "obtained",
        "tree",
        "unfolding",
        "discrete",
        "transition",
        "system",
        "represent",
        "possible",
        "infinite",
        "computation",
        "arising",
        "system",
        "ctl",
        "historically",
        "preceded",
        "ctl",
        "nowadays",
        "ctl",
        "often",
        "viewed",
        "fragment",
        "ctl",
        "follow",
        "convention",
        "full",
        "computation",
        "tree",
        "logic",
        "ctl",
        "computational",
        "variant",
        "ockhamism",
        "introduced",
        "emerson",
        "halpern",
        "language",
        "ctl",
        "contains",
        "reflexive",
        "version",
        "future",
        "operator",
        "g",
        "u",
        "well",
        "next",
        "time",
        "operator",
        "x",
        "past",
        "operator",
        "interpreted",
        "computation",
        "tree",
        "general",
        "ockhamist",
        "branching",
        "time",
        "logic",
        "evaluation",
        "relativized",
        "instant",
        "called",
        "state",
        "history",
        "called",
        "path",
        "note",
        "computer",
        "science",
        "usually",
        "instantbased",
        "atomic",
        "proposition",
        "assumed",
        "ie",
        "valuation",
        "atomic",
        "proposition",
        "depends",
        "state",
        "computation",
        "tree",
        "logic",
        "ctl",
        "computational",
        "variant",
        "peirceanism",
        "introduced",
        "emerson",
        "clarke",
        "ctl",
        "fragment",
        "ctl",
        "temporal",
        "operator",
        "g",
        "u",
        "x",
        "immediately",
        "preceded",
        "modal",
        "operator",
        "box",
        "diamond",
        "usually",
        "denoted",
        "path",
        "quantifier",
        "forall",
        "exists",
        "language",
        "ctl",
        "recursively",
        "built",
        "using",
        "combined",
        "modality",
        "forall",
        "gvarphi",
        "forall",
        "varphi",
        "upsi",
        "forall",
        "xvarphi",
        "exists",
        "gvarphi",
        "exists",
        "varphi",
        "upsi",
        "exists",
        "xvarphi",
        "precursor",
        "ctl",
        "logic",
        "ub",
        "introduced",
        "benari",
        "et",
        "al",
        "u",
        "occur",
        "logic",
        "ctl",
        "became",
        "widely",
        "used",
        "owing",
        "good",
        "computational",
        "property",
        "regard",
        "model",
        "checking",
        "linear",
        "complexity",
        "size",
        "input",
        "formula",
        "size",
        "input",
        "model",
        "finite",
        "transition",
        "system",
        "however",
        "ctl",
        "expressive",
        "led",
        "extension",
        "ctl",
        "logic",
        "ctl",
        "expressively",
        "much",
        "powerful",
        "subsumes",
        "linear",
        "time",
        "temporal",
        "logic",
        "ltl",
        "higher",
        "complexity",
        "model",
        "checking",
        "pspace",
        "deciding",
        "satisfiability",
        "exptime",
        "reference",
        "detail",
        "see",
        "emerson",
        "stirling",
        "complete",
        "axiomatization",
        "ctl",
        "obtained",
        "replacing",
        "axiom",
        "ltl",
        "pathquantified",
        "version",
        "proof",
        "completeness",
        "see",
        "emerson",
        "goldblatt",
        "ctl",
        "axiom",
        "must",
        "added",
        "account",
        "combination",
        "temporal",
        "modal",
        "operator",
        "enforce",
        "limit",
        "closure",
        "property",
        "tree",
        "complete",
        "axiomatization",
        "ctl",
        "obtained",
        "reynolds",
        "completeness",
        "result",
        "extension",
        "ctl",
        "past",
        "operator",
        "established",
        "reynolds",
        "sketch",
        "axiomatic",
        "system",
        "ctl",
        "found",
        "supplementary",
        "document",
        "axiomatic",
        "system",
        "ctl",
        "note",
        "peircean",
        "ockhamist",
        "branching",
        "time",
        "logic",
        "well",
        "computational",
        "variant",
        "finite",
        "model",
        "property",
        "decidable",
        "proof",
        "decidability",
        "respective",
        "logic",
        "found",
        "eg",
        "burgess",
        "emerson",
        "sistla",
        "gurevich",
        "shelah",
        "emerson",
        "halpern",
        "emerson",
        "goldblatt",
        "gabbay",
        "et",
        "al",
        "finger",
        "et",
        "al",
        "demri",
        "et",
        "al"
    ]
}