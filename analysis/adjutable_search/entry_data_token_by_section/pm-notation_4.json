{
    "main_text": "Propositional Functions\n4. Propositional Functions\n\nThere are two kinds of functions in PM. Propositional functions such\nas \u201c\\(\\hat{x}\\) is a natural number\u201d are to be\ndistinguished from the more familiar mathematical functions, which are\ncalled \u201cdescriptive functions\u201d (PM, Chapter \\(\\ast\\)31).\nDescriptive functions are defined using relations and definite\ndescriptions. Examples of descriptive functions are \\(x + y\\) and\n\u201cthe successor of \\(n\\)\u201d.\n\nFocusing on propositional functions, Whitehead and Russell distinguish\nbetween expressions with a free variable (such as \u201c\\(x\\) is\nhurt\u201d) and names of functions (such as \u201c\\(\\hat{x}\\) is\nhurt\u201d) (PM, 14\u201315). The propositions which result from the\nformula by assigning allowable values to the free variable\n\u201c\\(x\\)\u201d are said to be the \u201cambiguous values\u201d\nof the function. Expressions using the circumflex notation, such as\n\\(\\phi \\hat{x}\\) only occur in the introductory material in the\ntechnical sections of PM and not in the technical sections themselves\n(with the exception of the sections on the theory of classes),\nprompting some scholars to say that such expressions do not really\noccur in the formal system of PM. This issue is distinct from that\nsurrounding the interpretation of such symbols. Are they\n\u201cterm-forming operators\u201d which turn an open formula into a\nname for a function, or simply a syntactic device, a placeholder, for\nindicating the variable for which a substitution can be made in an\nopen formula? If they are to be treated as term-forming operators, the\nmodern notation for \\(\\phi \\hat{x}\\) would be \\(\\lambda x\\phi x\\). The\n\\(\\lambda\\)-notation has the advantage of clearly revealing that the\nvariable \\(x\\) is bound by the term-forming operator\n\\(\\lambda\\), which takes a predicate \\(\\phi\\) and yields a term\n\\(\\lambda x\\phi x\\) (which in some logics is a singular term that can\noccur in the subject position of a sentence, while in other logics is\na complex predicative expression). Unlike \\(\\lambda\\)-notation, the PM\nnotation using the circumflex cannot indicate scope. The function\nexpression \u201c\\(\\phi(\\hat{x},\\hat{y}\\))\u201d is ambiguous\nbetween \\(\\lambda x\\lambda y\\phi xy\\) and \\(\\lambda y\\lambda x\\phi\nxy\\), without some further convention. Indeed, Whitehead and Russell\nspecified this convention for relations in extension (on p. 200 in the\nintroductory material of \u221721, in terms of the order of the\nvariables), but the ambiguity is brought out most clearly by using\n\\(\\lambda\\) notation: the first denotes the relation of being an \\(x\\)\nand \\(y\\) such that \\(\\phi xy\\) and the second denotes the converse\nrelation of being a \\(y\\) and \\(x\\) such that \\(\\phi xy\\).\n",
    "section_title": "4. Propositional Functions",
    "entry_title": "The Notation in Principia Mathematica",
    "hierarchy_title": "The Notation in Principia Mathematica || Propositional Functions",
    "tokenized_text": [
        "propositional",
        "function",
        "propositional",
        "function",
        "two",
        "kind",
        "function",
        "pm",
        "propositional",
        "function",
        "hat",
        "x",
        "natural",
        "number",
        "distinguished",
        "familiar",
        "mathematical",
        "function",
        "called",
        "descriptive",
        "function",
        "pm",
        "chapter",
        "ast",
        "descriptive",
        "function",
        "defined",
        "using",
        "relation",
        "definite",
        "description",
        "example",
        "descriptive",
        "function",
        "x",
        "y",
        "successor",
        "n",
        "focusing",
        "propositional",
        "function",
        "whitehead",
        "russell",
        "distinguish",
        "expression",
        "free",
        "variable",
        "x",
        "hurt",
        "name",
        "function",
        "hat",
        "x",
        "hurt",
        "pm",
        "proposition",
        "result",
        "formula",
        "assigning",
        "allowable",
        "value",
        "free",
        "variable",
        "x",
        "said",
        "ambiguous",
        "value",
        "function",
        "expression",
        "using",
        "circumflex",
        "notation",
        "phi",
        "hat",
        "x",
        "occur",
        "introductory",
        "material",
        "technical",
        "section",
        "pm",
        "technical",
        "section",
        "exception",
        "section",
        "theory",
        "class",
        "prompting",
        "scholar",
        "say",
        "expression",
        "really",
        "occur",
        "formal",
        "system",
        "pm",
        "issue",
        "distinct",
        "surrounding",
        "interpretation",
        "symbol",
        "termforming",
        "operator",
        "turn",
        "open",
        "formula",
        "name",
        "function",
        "simply",
        "syntactic",
        "device",
        "placeholder",
        "indicating",
        "variable",
        "substitution",
        "made",
        "open",
        "formula",
        "treated",
        "termforming",
        "operator",
        "modern",
        "notation",
        "phi",
        "hat",
        "x",
        "would",
        "lambda",
        "xphi",
        "x",
        "lambda",
        "notation",
        "advantage",
        "clearly",
        "revealing",
        "variable",
        "x",
        "bound",
        "termforming",
        "operator",
        "lambda",
        "take",
        "predicate",
        "phi",
        "yield",
        "term",
        "lambda",
        "xphi",
        "x",
        "logic",
        "singular",
        "term",
        "occur",
        "subject",
        "position",
        "sentence",
        "logic",
        "complex",
        "predicative",
        "expression",
        "unlike",
        "lambda",
        "notation",
        "pm",
        "notation",
        "using",
        "circumflex",
        "indicate",
        "scope",
        "function",
        "expression",
        "phi",
        "hat",
        "x",
        "hat",
        "ambiguous",
        "lambda",
        "xlambda",
        "yphi",
        "xy",
        "lambda",
        "ylambda",
        "xphi",
        "xy",
        "without",
        "convention",
        "indeed",
        "whitehead",
        "russell",
        "specified",
        "convention",
        "relation",
        "extension",
        "p",
        "introductory",
        "material",
        "term",
        "order",
        "variable",
        "ambiguity",
        "brought",
        "clearly",
        "using",
        "lambda",
        "notation",
        "first",
        "denotes",
        "relation",
        "x",
        "y",
        "phi",
        "xy",
        "second",
        "denotes",
        "converse",
        "relation",
        "y",
        "x",
        "phi",
        "xy"
    ]
}