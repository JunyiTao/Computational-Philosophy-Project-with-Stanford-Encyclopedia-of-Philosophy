{
    "main_text": "Syntax and Semantics || Semantics\n1.5 Semantics\nDenotation of Terms and Satisfaction of Formulas\n\nGiven a language and a structure, both of them sharing the same\nsignature, each closed term of the language will denote an element in\nthe structure and each atomic sentence is either true or false in the\nstructure. Nevertheless, the scope of our definition is widened\nso that each term will receive a denotation and each formula a truth\nvalue. To achieve that, we define\n assignments[5]\n from the set of variables to the domains of the structure, arguments\nand values should be of the same sort. For any individual\n\\(\\mathbf{x}\\in \\mathbf{A}_{i}\\) and variable \\(x^{i}\\) of sort \\(i\\),\nwe use \\(s(\\mathbf{x}/x^{i})\\) to denote the assignment which is like\nassignment \\(s\\) except that the value at \\(x^{i}\\) has to be\n\\(\\mathbf{x}\\).\n\nTo define the important concept of \u201ctruth of a sentence\n\\(\\varphi\\) in a structure \\(\\mathcal{A}\\)\u201d\n\\((\\mathcal{A}\\models \\varphi)\\) we need to define previously the\nconcept of satisfaction of a formula \\(\\varphi\\) in\n\\(\\mathcal{A}\\) under assignment \\(s\\) (noted as\n\\(\\mathcal{A},s\\models \\varphi\\)), as well as the denotation\nof terms.\nDenotation of terms\n\nLet \\(\\mathcal{A}\\) be an L-structure (language and structure\nsharing signature \\(\\Sigma\\)) and \\(s\\) an assignment.\n\\(\\mathcal{I}=\\langle \\mathcal{A},s\\rangle\\) is called an\ninterpretation. The recursive definition of denotation\n\\(\\mathcal{I}(\\tau )\\) of the term \\(\\tau\\) under the interpretation\n\\(\\mathcal{I}\\) is defined in the usual way, as in classical\none-sorted first-order logic. For atomic and complex terms:\n\\(\\mathcal{I}(x^{i})=s(x^{i})\\), \\(\\mathcal{I}(c)=c^{\\mathcal{A}}\\)\nand \n\\[\\mathcal{I}(f\\ \\tau _{1}\\ldots \\tau _{n})=f^{\\mathcal{A}}(\\mathcal{I}(\\tau _{1})\\ldots \\mathcal{I}(\\tau _{n})).\\]\n\n\nIt is easy to check that terms of a certain sort denote individuals of\nthat sort.\n\n\nDefinition (Tarski\u2019s Truth). The definition is\nnearly the same as in classical first-order logic, see the entry on\n classical logic.\n\nFor atomic formulas: \\(\\mathcal{A}, s\\models R\\tau _{1}\\ldots \\tau\n_{n}\\) if and only if \n\\[\\langle \\mathcal{I}(\\tau _{1}),\\ldots ,\\mathcal{I}(\\tau _{n})\\rangle \\in R^{\\mathcal{A}},\\]\n\n\nand \\(\\mathcal{A},s\\models \\tau _{1}\\approx \\tau _{2}\\) if and only if\nboth terms denote the same object in structure \\(\\mathcal{A}\\);\nnamely, \\(\\mathcal{I}(\\tau _{1})=\\mathcal{I}(\\tau _{2})\\).\n\n\nIn many-sorted logic the connectives are standard and, therefore, we\nuse the classical definition of satisfaction for formulas built on\nthem. For quantified formulas such as \\(\\exists x^{i}\\varphi\\) the\ndefinition reads: \\(\\mathcal{A},s\\models \\exists x^{i}\\varphi\\) if and\nonly if there is an \\(\\mathbf{x}\\in \\mathbf{A}_{i}\\) such that\n\\(\\mathcal{A},s(\\mathbf{x}/x^{i})\\models \\varphi\\).\nCoincidence lemma\n\nAs in classical first-order logic, the coincidence lemma holds (see\nthe entry on\n classical logic):\n For any formula \\(\\varphi\\) and assignments \\(s_{1}\\) and \\(s_{2}\\):\nif \\(s_{1}\\) and \\(s_{2}\\) agree on the free variables in \\(\\varphi\\),\nthen \\(\\mathcal{A},s_{1}\\models \\varphi\\) if and only if\n\\(\\mathcal{A},s_{2}\\models \\varphi\\).\n\nFor a formula \\(\\varphi (x_{1},\\ldots ,x_{n})\\) whose free variables\nare in \\(\\{ x_{1},\\ldots ,x_{n}\\}\\) one can write \n\\[\\mathcal{A}\\models \\varphi \\left[ \\mathbf{x}_{1},\\ldots ,\\mathbf{x}_{n}\\right]\\]\n\n\ninstead of \n\\[\\mathcal{A},s\\left( \\mathbf{x}_{1}/x_{1},\\ldots ,\\mathbf{x}_{n}/x_{n}\\right) \\models \\varphi.\\]\n\n\nBy applying the coincidence lemma, we can get rid of assignments when\ndealing with sentences, and so we just write \\(\\mathcal{A}\\models\n\\varphi\\) (instead of \\(\\mathcal{A},s\\models \\varphi\\)). In this case\nwe usually say that \\(\\mathcal{A}\\) is a model of\n\\(\\varphi\\).\n\nFor a set of sentences \\(\\Gamma\\) we say that \\(\\mathcal{A}\\) is a\nmodel of \\(\\Gamma\\) (for short \\(\\mathcal{A}\\models\n\\Gamma\\)), when \\(\\mathcal{A}\\) is a model of every sentence\n\\(\\gamma\\) in \\(\\Gamma\\). Structures and language share signature.\n\nThe abstract schema of semantics could be seen in this way: we have a\nlanguage \\(L\\) and a class of mathematical structures, sharing a given\nsignature \\(\\Sigma\\). Between these mathematical realities we have\njust built a bridge, the notion of truth in a structure. In\none direction, we circulate from sentences to structures where these\nsentences are true; on the other direction, we go from structures to\nsentences which are true in these structures. In the first case, from\na set of sentences \\(\\Gamma\\) of signature \\(\\Sigma\\) we define\n\\(\\Mod(\\Gamma )\\) as the class of structures of signature \\(\\Sigma\\)\nthat are models of \\(\\Gamma\\). In the second, from a structure\n\\(\\mathcal{A}\\) of signature \\(\\Sigma\\) we define \\(\\Th(\\mathcal{A})\\)\n(the theory of \\(\\mathcal{A}\\) ), the infinite set of sentences which\nare true at structure \\(\\mathcal{A}\\) \n\\[\\begin{align}\n\\Mod(\\Gamma ) &=\\{ \\Sigma \\text{ structure }\\mathcal{A}:\\mathcal{A}\\models \\Gamma \\} \\\\\n \\Th(\\mathcal{A}) &= \\{ \\varphi \\in \\Sent(L):\\mathcal{A}\\models \\varphi \\} \n\\end{align}\\]\n\nElementary embedding\n\nIn the previous section, the relations between structures were defined\nwithout resorting to the many-sorted formal language. That is not the\ncase for elementary embedding, another relationship between\nmany-sorted structures of the same signature. An elementary embedding\n\\(\\pi\\) between two \u03a3-structures \\(\\mathcal{A}\\) and\n\\(\\mathcal{A}^{\\prime }\\) is an embedding satisfying: \n\\[ \\mathcal{A\\models \\varphi \\lbrack }\\mathbf{x}_{1},\\ldots, \\mathbf{x}_{n}] \\textrm{ if and only if } \\mathcal{A}^{\\prime }\\mathcal{\\models \\varphi \\lbrack }\\pi (\\mathbf{x}_{1}),\\ldots \\pi (\\mathbf{x}_{n})] \\]\n\n\nfor all \u03a3-formulas \\(\\mathcal{\\varphi (}x_{1},\\ldots\n\\mathbf{,}x_{n})\\) and elements \\(\\mathbf{x}_{1},\\ldots\n,\\mathbf{x}_{n}\\) in the domains of the structure, variables and\nelements with the same sorts.\n\nTwo structures \\(\\mathcal{A}\\) and \\(\\mathcal{B}\\) are \nelementarily equivalent if and only if their theories are the same,\n\\(\\Th(\\mathcal{A})=\\Th(\\mathcal{B})\\).\nSatisfiability, Validity, and Consequence\n\nConcepts of satisfiability, validity and\nconsequence are defined as in classical first-order logic.\nGiven language \\(L\\) of signature \\(\\Sigma\\) and a formula \\(\\varphi\\)\nof \\(L\\): \\(\\varphi\\) is satisfiable if and only if there\nexists a \u03a3-structure \\(\\mathcal{A}\\) and assignment \\(s\\) on it\nsuch that \\(\\mathcal{A},s\\models \\varphi\\) holds; \\(\\varphi\\) is\nvalid (\\(\\models \\varphi\\)) if and only if\n\\(\\mathcal{A},s\\models \\varphi\\) holds for all \\(\\mathcal{A}\\) of\nsignature \\(\\Sigma\\) and any assignment \\(s\\) on \\(\\mathcal{A}\\).\n\nGiven a language \\(L\\) of a given signature \\(\\Sigma\\) we define the\nconsequence relation in this way: \\(\\Gamma \\models \\varphi\\)\nif and only if for every structure \\(\\mathcal{A}\\ \\)(of signature\n\\(\\Sigma\\) ) and assignment \\(s\\) such that \\(\\mathcal{A},s\\models\n\\gamma\\) for all \\(\\gamma \\in \\Gamma\\), we have that\n\\(\\mathcal{A},s\\models \\varphi\\).\n\nIn case \\(\\Gamma\\) and \\(\\varphi\\) were sentences, \\(\\Gamma \\models\n\\varphi\\) can be expressed in this way: \\(\\Mod(\\Gamma )\\subseteq\n\\Mod(\\varphi )\\).\n\n\nTheory: Given a set of sentences \\(\\Gamma\\) of a\nlanguage \\(L\\) we say that \\(\\Gamma\\) is a\n theory[6]\n if and only if it is closed under consequence; that is, for every\n\\(\\varphi \\in \\Sent(L)\\): If \\(\\Gamma \\models \\varphi\\) then \\(\\varphi\n\\in \\Gamma\\).\n\n",
    "section_title": "1.5 Semantics",
    "entry_title": "Many-Sorted Logic",
    "hierarchy_title": "Many-Sorted Logic || Syntax and Semantics || Semantics",
    "tokenized_text": [
        "syntax",
        "semantics",
        "semantics",
        "semantics",
        "denotation",
        "term",
        "satisfaction",
        "formula",
        "given",
        "language",
        "structure",
        "sharing",
        "signature",
        "closed",
        "term",
        "language",
        "denote",
        "element",
        "structure",
        "atomic",
        "sentence",
        "either",
        "true",
        "false",
        "structure",
        "nevertheless",
        "scope",
        "definition",
        "widened",
        "term",
        "receive",
        "denotation",
        "formula",
        "truth",
        "value",
        "achieve",
        "define",
        "assignment",
        "set",
        "variable",
        "domain",
        "structure",
        "argument",
        "value",
        "sort",
        "individual",
        "mathbf",
        "x",
        "in",
        "mathbf",
        "_",
        "variable",
        "x",
        "sort",
        "i",
        "use",
        "mathbf",
        "x",
        "x",
        "denote",
        "assignment",
        "like",
        "assignment",
        "s",
        "except",
        "value",
        "x",
        "mathbf",
        "x",
        "define",
        "important",
        "concept",
        "truth",
        "sentence",
        "varphi",
        "structure",
        "mathcal",
        "mathcal",
        "models",
        "varphi",
        "need",
        "define",
        "previously",
        "concept",
        "satisfaction",
        "formula",
        "varphi",
        "mathcal",
        "assignment",
        "s",
        "noted",
        "mathcal",
        "smodels",
        "varphi",
        "well",
        "denotation",
        "term",
        "denotation",
        "term",
        "let",
        "mathcal",
        "lstructure",
        "language",
        "structure",
        "sharing",
        "signature",
        "sigma",
        "s",
        "assignment",
        "mathcal",
        "langle",
        "mathcal",
        "srangle",
        "called",
        "interpretation",
        "recursive",
        "definition",
        "denotation",
        "mathcal",
        "tau",
        "term",
        "tau",
        "interpretation",
        "mathcal",
        "defined",
        "usual",
        "way",
        "classical",
        "onesorted",
        "firstorder",
        "logic",
        "atomic",
        "complex",
        "term",
        "mathcal",
        "x",
        "s",
        "x",
        "mathcal",
        "c",
        "c",
        "mathcal",
        "mathcal",
        "f",
        "tau",
        "_",
        "ldots",
        "tau",
        "_",
        "n",
        "f",
        "mathcal",
        "mathcal",
        "tau",
        "_",
        "ldots",
        "mathcal",
        "tau",
        "_",
        "n",
        "easy",
        "check",
        "term",
        "certain",
        "sort",
        "denote",
        "individual",
        "sort",
        "definition",
        "tarski",
        "truth",
        "definition",
        "nearly",
        "classical",
        "firstorder",
        "logic",
        "see",
        "entry",
        "classical",
        "logic",
        "atomic",
        "formula",
        "mathcal",
        "smodels",
        "rtau",
        "_",
        "ldots",
        "tau",
        "_",
        "n",
        "langle",
        "mathcal",
        "tau",
        "_",
        "ldots",
        "mathcal",
        "tau",
        "_",
        "n",
        "rangle",
        "in",
        "r",
        "mathcal",
        "mathcal",
        "smodels",
        "tau",
        "_",
        "approx",
        "tau",
        "_",
        "term",
        "denote",
        "object",
        "structure",
        "mathcal",
        "namely",
        "mathcal",
        "tau",
        "_",
        "mathcal",
        "tau",
        "_",
        "manysorted",
        "logic",
        "connective",
        "standard",
        "therefore",
        "use",
        "classical",
        "definition",
        "satisfaction",
        "formula",
        "built",
        "quantified",
        "formula",
        "exists",
        "x",
        "varphi",
        "definition",
        "read",
        "mathcal",
        "smodels",
        "exists",
        "x",
        "varphi",
        "mathbf",
        "x",
        "in",
        "mathbf",
        "_",
        "mathcal",
        "mathbf",
        "x",
        "x",
        "models",
        "varphi",
        "coincidence",
        "lemma",
        "classical",
        "firstorder",
        "logic",
        "coincidence",
        "lemma",
        "hold",
        "see",
        "entry",
        "classical",
        "logic",
        "formula",
        "varphi",
        "assignment",
        "s_",
        "s_",
        "s_",
        "s_",
        "agree",
        "free",
        "variable",
        "varphi",
        "mathcal",
        "s_",
        "models",
        "varphi",
        "mathcal",
        "s_",
        "models",
        "varphi",
        "formula",
        "varphi",
        "x_",
        "ldots",
        "x_",
        "n",
        "whose",
        "free",
        "variable",
        "x_",
        "ldots",
        "x_",
        "n",
        "one",
        "write",
        "mathcal",
        "models",
        "varphi",
        "left",
        "mathbf",
        "x",
        "_",
        "ldots",
        "mathbf",
        "x",
        "_",
        "n",
        "right",
        "instead",
        "mathcal",
        "sleft",
        "mathbf",
        "x",
        "_",
        "x_",
        "ldots",
        "mathbf",
        "x",
        "_",
        "n",
        "x_",
        "n",
        "right",
        "models",
        "varphi",
        "applying",
        "coincidence",
        "lemma",
        "get",
        "rid",
        "assignment",
        "dealing",
        "sentence",
        "write",
        "mathcal",
        "models",
        "varphi",
        "instead",
        "mathcal",
        "smodels",
        "varphi",
        "case",
        "usually",
        "say",
        "mathcal",
        "model",
        "varphi",
        "set",
        "sentence",
        "gamma",
        "say",
        "mathcal",
        "model",
        "gamma",
        "short",
        "mathcal",
        "models",
        "gamma",
        "mathcal",
        "model",
        "every",
        "sentence",
        "gamma",
        "gamma",
        "structure",
        "language",
        "share",
        "signature",
        "abstract",
        "schema",
        "semantics",
        "could",
        "seen",
        "way",
        "language",
        "l",
        "class",
        "mathematical",
        "structure",
        "sharing",
        "given",
        "signature",
        "sigma",
        "mathematical",
        "reality",
        "built",
        "bridge",
        "notion",
        "truth",
        "structure",
        "one",
        "direction",
        "circulate",
        "sentence",
        "structure",
        "sentence",
        "true",
        "direction",
        "go",
        "structure",
        "sentence",
        "true",
        "structure",
        "first",
        "case",
        "set",
        "sentence",
        "gamma",
        "signature",
        "sigma",
        "define",
        "mod",
        "gamma",
        "class",
        "structure",
        "signature",
        "sigma",
        "model",
        "gamma",
        "second",
        "structure",
        "mathcal",
        "signature",
        "sigma",
        "define",
        "th",
        "mathcal",
        "theory",
        "mathcal",
        "infinite",
        "set",
        "sentence",
        "true",
        "structure",
        "mathcal",
        "begin",
        "align",
        "mod",
        "gamma",
        "sigma",
        "text",
        "structure",
        "mathcal",
        "mathcal",
        "models",
        "gamma",
        "th",
        "mathcal",
        "varphi",
        "in",
        "sent",
        "l",
        "mathcal",
        "models",
        "varphi",
        "end",
        "align",
        "elementary",
        "embedding",
        "previous",
        "section",
        "relation",
        "structure",
        "defined",
        "without",
        "resorting",
        "manysorted",
        "formal",
        "language",
        "case",
        "elementary",
        "embedding",
        "another",
        "relationship",
        "manysorted",
        "structure",
        "signature",
        "elementary",
        "embedding",
        "pi",
        "two",
        "\u03c3structures",
        "mathcal",
        "mathcal",
        "prime",
        "embedding",
        "satisfying",
        "mathcal",
        "amodels",
        "varphi",
        "lbrack",
        "mathbf",
        "x",
        "_",
        "ldots",
        "mathbf",
        "x",
        "_",
        "n",
        "textrm",
        "mathcal",
        "prime",
        "mathcal",
        "models",
        "varphi",
        "lbrack",
        "pi",
        "mathbf",
        "x",
        "_",
        "ldots",
        "pi",
        "mathbf",
        "x",
        "_",
        "n",
        "\u03c3formulas",
        "mathcal",
        "varphi",
        "x_",
        "ldots",
        "mathbf",
        "x_",
        "n",
        "element",
        "mathbf",
        "x",
        "_",
        "ldots",
        "mathbf",
        "x",
        "_",
        "n",
        "domain",
        "structure",
        "variable",
        "element",
        "sort",
        "two",
        "structure",
        "mathcal",
        "mathcal",
        "b",
        "elementarily",
        "equivalent",
        "theory",
        "th",
        "mathcal",
        "th",
        "mathcal",
        "b",
        "satisfiability",
        "validity",
        "consequence",
        "concept",
        "satisfiability",
        "validity",
        "consequence",
        "defined",
        "classical",
        "firstorder",
        "logic",
        "given",
        "language",
        "l",
        "signature",
        "sigma",
        "formula",
        "varphi",
        "l",
        "varphi",
        "satisfiable",
        "exists",
        "\u03c3structure",
        "mathcal",
        "assignment",
        "s",
        "mathcal",
        "smodels",
        "varphi",
        "hold",
        "varphi",
        "valid",
        "models",
        "varphi",
        "mathcal",
        "smodels",
        "varphi",
        "hold",
        "mathcal",
        "signature",
        "sigma",
        "assignment",
        "s",
        "mathcal",
        "given",
        "language",
        "l",
        "given",
        "signature",
        "sigma",
        "define",
        "consequence",
        "relation",
        "way",
        "gamma",
        "models",
        "varphi",
        "every",
        "structure",
        "mathcal",
        "signature",
        "sigma",
        "assignment",
        "s",
        "mathcal",
        "smodels",
        "gamma",
        "gamma",
        "in",
        "gamma",
        "mathcal",
        "smodels",
        "varphi",
        "case",
        "gamma",
        "varphi",
        "sentence",
        "gamma",
        "models",
        "varphi",
        "expressed",
        "way",
        "mod",
        "gamma",
        "subseteq",
        "mod",
        "varphi",
        "theory",
        "given",
        "set",
        "sentence",
        "gamma",
        "language",
        "l",
        "say",
        "gamma",
        "theory",
        "closed",
        "consequence",
        "every",
        "varphi",
        "in",
        "sent",
        "l",
        "gamma",
        "models",
        "varphi",
        "varphi",
        "in",
        "gamma"
    ]
}