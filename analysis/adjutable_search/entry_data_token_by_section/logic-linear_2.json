{
    "main_text": "Proof Systems\n2. Proof Systems\n\nThe core propositional connectives of linear logic are divided into\nadditive and multiplicative connectives. The classical conjunction and\nits identity, \\(\\wedge\\) and \\(\\top\\), split into the additive\n\\(\\amp\\) (with) and \\(\\top\\) (top) and the multiplicative \\(\\otimes\\)\n(tensor) and 1 (one). Similarly, the classical disjunction and its\nidentity, \\(\\vee\\) and \\(\\bot\\), split into the additive \\(\\oplus\\)\n(oplus) and 0 (zero) and the multiplicative \\(\\lpar\\) (par) and\n\\(\\bot\\) (bottom). Negation is generally treated in one of two ways in\npresentations a linear logic. Negation can be viewed as a primitive\npropositional connective with no restrictions on its occurrences\nwithin formulas. Since De Morgan dualities exist between negation and\nall propositional connectives, exponentials, and quantifiers, it is\nalso possible to treat negation as a special symbol that only occurs\napplied to atomic formulas. Implications are also commonly introduced\ninto linear logic via definitions: the linear implication \\(B \\limp\nC\\) can be defined as \\(B^{\\bot} \\lpar C\\), while the intuitionistic\nimplication \\(B \\Rightarrow C\\) can be defined as \\(\\bang B \\limp C\\).\nThe operators \\(\\bang\\) and \\(\\quest\\) are variously called modals or\nexponentials. The term \u201cexponential\u201d is particularly\nappropriate since, following the usual relationship between\nexponentiation, addition, and multiplication, linear logic supports\nthe equivalences \\(\\bang (B \\amp C) \\equiv (\\bang B \\otimes \\bang C)\\)\nand \\(\\quest(B \\oplus C) \\equiv (\\quest B \\lpar \\quest C)\\), as well\nas the 0-ary versions of these equivalences, namely, \\((\\bang\\top\n\\equiv 1)\\) and \\((\\quest 0 \\equiv \\bot)\\). Here, we use the binary\nequivalence \\(B \\equiv C\\) to mean that the formula \\((B \\limp C)\n\\amp(C \\limp B)\\) is derivable in linear logic.\n",
    "section_title": "2. Proof Systems",
    "entry_title": "Linear Logic",
    "hierarchy_title": "Linear Logic || Proof Systems",
    "tokenized_text": [
        "proof",
        "system",
        "proof",
        "system",
        "core",
        "propositional",
        "connective",
        "linear",
        "logic",
        "divided",
        "additive",
        "multiplicative",
        "connective",
        "classical",
        "conjunction",
        "identity",
        "wedge",
        "top",
        "split",
        "additive",
        "amp",
        "top",
        "top",
        "multiplicative",
        "otimes",
        "tensor",
        "one",
        "similarly",
        "classical",
        "disjunction",
        "identity",
        "vee",
        "bot",
        "split",
        "additive",
        "oplus",
        "oplus",
        "zero",
        "multiplicative",
        "lpar",
        "par",
        "bot",
        "bottom",
        "negation",
        "generally",
        "treated",
        "one",
        "two",
        "way",
        "presentation",
        "linear",
        "logic",
        "negation",
        "viewed",
        "primitive",
        "propositional",
        "connective",
        "restriction",
        "occurrence",
        "within",
        "formula",
        "since",
        "de",
        "morgan",
        "duality",
        "exist",
        "negation",
        "propositional",
        "connective",
        "exponential",
        "quantifier",
        "also",
        "possible",
        "treat",
        "negation",
        "special",
        "symbol",
        "occurs",
        "applied",
        "atomic",
        "formula",
        "implication",
        "also",
        "commonly",
        "introduced",
        "linear",
        "logic",
        "via",
        "definition",
        "linear",
        "implication",
        "b",
        "limp",
        "c",
        "defined",
        "b",
        "bot",
        "lpar",
        "c",
        "intuitionistic",
        "implication",
        "b",
        "rightarrow",
        "c",
        "defined",
        "bang",
        "b",
        "limp",
        "c",
        "operator",
        "bang",
        "quest",
        "variously",
        "called",
        "modal",
        "exponential",
        "term",
        "exponential",
        "particularly",
        "appropriate",
        "since",
        "following",
        "usual",
        "relationship",
        "exponentiation",
        "addition",
        "multiplication",
        "linear",
        "logic",
        "support",
        "equivalence",
        "bang",
        "b",
        "amp",
        "c",
        "equiv",
        "bang",
        "b",
        "otimes",
        "bang",
        "c",
        "quest",
        "b",
        "oplus",
        "c",
        "equiv",
        "quest",
        "b",
        "lpar",
        "quest",
        "c",
        "well",
        "ary",
        "version",
        "equivalence",
        "namely",
        "bangtop",
        "equiv",
        "quest",
        "equiv",
        "bot",
        "use",
        "binary",
        "equivalence",
        "b",
        "equiv",
        "c",
        "mean",
        "formula",
        "b",
        "limp",
        "c",
        "amp",
        "c",
        "limp",
        "b",
        "derivable",
        "linear",
        "logic"
    ]
}