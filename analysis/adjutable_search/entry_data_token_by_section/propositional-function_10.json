{
    "main_text": "Categorial Grammar\n11. Categorial Grammar\nCategorial grammars were first constructed in the 1930s by Kazamir\nAjdukiewicz (1890\u20131963), and developed by Yehoshua Bar Hillel\n(1915\u20131975) and Joachim Lambek (1922\u2013) in the 1950s an\n1960s. Categorial grammars are logical tools for representing the\nsyntax of languages.\nIn categorial grammar, the syntax of languages is represented using\na different sort of generalization of the functional notation than in\nMontague semantics. In Montague Semantics, the lambda abstractor is\nused to move the meaning of an expression to the location that the\nexpression occupies in a sentence. In categorial grammar, predicates\nand many other sorts of expressions are taken to be functions of\nsorts. But there is a distinction in categorial grammar between two\nsorts of application of a function to its arguments. \nLet's see how this works. Let's start with the primitive types CN\n(common noun) and NP (noun phrase). The indefinite article \u2018a\u2019 takes\na common noun (on its right) and returns a NP. So it has the type\nNP/CN. The common noun \u2018dog\u2019, of course, has the type CN. We write\n\u2018A has the type T\u2019 as\n\u2018A\u22a2T\u2019. So we have,\n\na \u22a2 NP/CN\nand\n\ndog \u22a2 CN\nIn order to put these two sequents together, we can\nuse a form of the rule modus ponens which says that from a sequent X\n\u22a2 A/B and a sequent Y \u22a2 B, we can derive the sequent X.Y\n\u22a2 A. We can use this rule to derive:\n\na.dog \u22a2 NP\nMoreover, an intransitive verb has the type NP\\S,\nwhere S is the type of sentences. The backslash in NP\\S means that the\nexpression takes an argument of type NP\non the left side and returns an expression of type S. The\nverb \u2018barks\u2019 is intransitive, that is,\n\nbarks \u22a2 NP\\S\nThe version of modus ponens that we use with the backslash is\nslightly different. It tells us that from X \u22a2 A\\B and Y \u22a2\nA we can derive Y.X \u22a2 B. So we now can obtain,\n\n(a.dog).barks \u22a2 S\nThis says that \u2018a dog barks\u2019 is a sentence.\nThe logics used to describe grammars in this way\nare substructural logics.\nWhat is of interest to us here is that in categorial grammars\ndeterminers such as \u2018a\u2019 and verbs are thought of as functions, but\nthey can differ from one another in terms of whether they take\narguments on their right or on their left. In the set theoretic\nconcept of function as a set of ordered pairs, functions are thought\nof just in terms of their correlating arguments with values. A\nfunction, as it is understood in categorial grammar has more\nstructure than this. This is an interesting generalization of the\nnotion of a function as it is used in logic. We can see that it also\nhas important links to the concept of a propositional function,\nespecially as it is used in Montague semantics.\nIn categorial grammar we can attribute more than one type to a\nsingle expression in a language. Let us call this the\nprinciple of multiple types. Here is an example due to Mark\nSteadman. Consider the sentence\n\nI dislike, and Mary enjoys musicals.\nThe transitive verbs \u2018dislike\u2019 and \u2018enjoys\u2019 have the\ntype (NP\\S)/NP, that is, they take a noun phrase on their right and\nreturn a verb phrase. But in the case of \u2018I dislike, and Mary enjoys\nmusicals\u2019 the verbs are separated from their object and joined to\ntheir objects. Steadman deals with this by raising the type of the\nsubjects \u2018I\u2019 and \u2018Mary\u2019. Usually, we treat these words as having the\ntype NP, but here they have the type S/(NP\\S). This is the type of an\nexpression that takes a verb phrase on its right and returns a\nsentence. Steadman then uses a rule that makes the backslash\ntransitive and derives that \u2018I.dislike\u2019 has the type S/NP, which takes\na noun phrase (such as \u2018musicals\u2019) on its right an returns a\nsentence.\nWe can see that the principle of multiple types also holds if\nanalyze sentences other type theories, such as the simple theory of\ntypes. For consider the sentence\n\nMary eats a hamburger.\nIn interpreting this sentence we can take \u2018Mary\u2019 to be\nof type i, but we can also take it to be of type\n<<i>>, that is, the type of a propositional\nfunction on propositional functions of individuals. We can also raise\nthe type of \u2018eats a hamburger\u2019 to\n<<<i>>>, a propositional function on\npropositional functions on propositional functions on individuals. And\nso on. The principle of multiple types and the principle of multiple\nanalyses together show that a single expression or sentence can be\ninterpreted as having a very large number of logical forms.\n",
    "section_title": "11. Categorial Grammar",
    "entry_title": "Propositional Function",
    "hierarchy_title": "Propositional Function || Categorial Grammar",
    "tokenized_text": [
        "categorial",
        "grammar",
        "categorial",
        "grammar",
        "categorial",
        "grammar",
        "first",
        "constructed",
        "s",
        "kazamir",
        "ajdukiewicz",
        "developed",
        "yehoshua",
        "bar",
        "hillel",
        "joachim",
        "lambek",
        "s",
        "s",
        "categorial",
        "grammar",
        "logical",
        "tool",
        "representing",
        "syntax",
        "language",
        "categorial",
        "grammar",
        "syntax",
        "language",
        "represented",
        "using",
        "different",
        "sort",
        "generalization",
        "functional",
        "notation",
        "montague",
        "semantics",
        "montague",
        "semantics",
        "lambda",
        "abstractor",
        "used",
        "move",
        "meaning",
        "expression",
        "location",
        "expression",
        "occupies",
        "sentence",
        "categorial",
        "grammar",
        "predicate",
        "many",
        "sort",
        "expression",
        "taken",
        "function",
        "sort",
        "distinction",
        "categorial",
        "grammar",
        "two",
        "sort",
        "application",
        "function",
        "argument",
        "let",
        "s",
        "see",
        "work",
        "let",
        "s",
        "start",
        "primitive",
        "type",
        "cn",
        "common",
        "noun",
        "np",
        "noun",
        "phrase",
        "indefinite",
        "article",
        "take",
        "common",
        "noun",
        "right",
        "return",
        "np",
        "type",
        "npcn",
        "common",
        "noun",
        "dog",
        "course",
        "type",
        "cn",
        "write",
        "type",
        "at",
        "npcn",
        "dog",
        "cn",
        "order",
        "put",
        "two",
        "sequents",
        "together",
        "use",
        "form",
        "rule",
        "modus",
        "ponens",
        "say",
        "sequent",
        "x",
        "ab",
        "sequent",
        "b",
        "derive",
        "sequent",
        "xy",
        "a",
        "use",
        "rule",
        "derive",
        "adog",
        "np",
        "moreover",
        "intransitive",
        "verb",
        "type",
        "nps",
        "type",
        "sentence",
        "backslash",
        "nps",
        "mean",
        "expression",
        "take",
        "argument",
        "type",
        "np",
        "left",
        "side",
        "return",
        "expression",
        "type",
        "s",
        "verb",
        "bark",
        "intransitive",
        "bark",
        "nps",
        "version",
        "modus",
        "ponens",
        "use",
        "backslash",
        "slightly",
        "different",
        "tell",
        "u",
        "x",
        "ab",
        "derive",
        "yx",
        "b",
        "obtain",
        "adog",
        "barks",
        "say",
        "dog",
        "bark",
        "sentence",
        "logic",
        "used",
        "describe",
        "grammar",
        "way",
        "substructural",
        "logic",
        "interest",
        "u",
        "categorial",
        "grammar",
        "determiner",
        "verb",
        "thought",
        "function",
        "differ",
        "one",
        "another",
        "term",
        "whether",
        "take",
        "argument",
        "right",
        "left",
        "set",
        "theoretic",
        "concept",
        "function",
        "set",
        "ordered",
        "pair",
        "function",
        "thought",
        "term",
        "correlating",
        "argument",
        "value",
        "function",
        "understood",
        "categorial",
        "grammar",
        "structure",
        "interesting",
        "generalization",
        "notion",
        "function",
        "used",
        "logic",
        "see",
        "also",
        "important",
        "link",
        "concept",
        "propositional",
        "function",
        "especially",
        "used",
        "montague",
        "semantics",
        "categorial",
        "grammar",
        "attribute",
        "one",
        "type",
        "single",
        "expression",
        "language",
        "let",
        "u",
        "call",
        "principle",
        "multiple",
        "type",
        "example",
        "due",
        "mark",
        "steadman",
        "consider",
        "sentence",
        "dislike",
        "mary",
        "enjoys",
        "musical",
        "transitive",
        "verb",
        "dislike",
        "enjoys",
        "type",
        "nps",
        "np",
        "take",
        "noun",
        "phrase",
        "right",
        "return",
        "verb",
        "phrase",
        "case",
        "dislike",
        "mary",
        "enjoys",
        "musical",
        "verb",
        "separated",
        "object",
        "joined",
        "object",
        "steadman",
        "deal",
        "raising",
        "type",
        "subject",
        "mary",
        "usually",
        "treat",
        "word",
        "type",
        "np",
        "type",
        "s",
        "nps",
        "type",
        "expression",
        "take",
        "verb",
        "phrase",
        "right",
        "return",
        "sentence",
        "steadman",
        "us",
        "rule",
        "make",
        "backslash",
        "transitive",
        "derives",
        "idislike",
        "type",
        "snp",
        "take",
        "noun",
        "phrase",
        "musical",
        "right",
        "return",
        "sentence",
        "see",
        "principle",
        "multiple",
        "type",
        "also",
        "hold",
        "analyze",
        "sentence",
        "type",
        "theory",
        "simple",
        "theory",
        "type",
        "consider",
        "sentence",
        "mary",
        "eats",
        "hamburger",
        "interpreting",
        "sentence",
        "take",
        "mary",
        "type",
        "also",
        "take",
        "type",
        "type",
        "propositional",
        "function",
        "propositional",
        "function",
        "individual",
        "also",
        "raise",
        "type",
        "eats",
        "hamburger",
        "propositional",
        "function",
        "propositional",
        "function",
        "propositional",
        "function",
        "individual",
        "principle",
        "multiple",
        "type",
        "principle",
        "multiple",
        "analysis",
        "together",
        "show",
        "single",
        "expression",
        "sentence",
        "interpreted",
        "large",
        "number",
        "logical",
        "form"
    ]
}