{
    "main_text": "Introduction || Multi-argument operations\n1.1 Multi-argument operations\n\nWhat about functions of multiple arguments? Can the\n\\(\\lambda\\)-calculus represent operations such as computing the length\nof the hypotenuse of a right triangle:\n\nHypotenuse of a right triangle with legs of length \\(x\\) and \\(y\n\\Rightarrow \\sqrt{x^2 + y^2}\\).\n\nThe length-of-hypotenuse operation maps two positive real numbers\n\\(x\\) and \\(y\\) to another positive real number. One can represent\nsuch multiple-arity operations using the apparatus of the\n\\(\\lambda\\)-calculus by viewing the operation as taking one input at a\ntime. Thus, the operation can be seen as taking one input, \\(x\\), a\npositive real number, and producing as its value not a\nnumber, but an operation: namely, the operation that\ntakes a positive real number \\(y\\) as input and produces as output the\npositive real number \\(\\sqrt{x^2 + y^2}\\). One could summarize the\ndiscussion by saying that the operation, hypotenuse-length,\nthat computes\nthe length of the hypotenuse of a right triangle given the lengths\n\\(a\\) and \\(b\\) of its legs, is:\n\nhypotenuse-length \\(:=\n\\lambda a[\\lambda b[\\sqrt{a^2 + b^2}]]\\)\n\nBy the principle of \\(\\beta\\)-reduction, we have, for example, that\nhypotenuse-length 3, the\napplication of hypotenuse-length\nto 3, is\n\\(\\lambda b[\\sqrt{3^2 + b^2}]\\), which is a function of that is\n\u2018waiting\u2019 for another argument. The \\(\\lambda\\)-term hypotenuse-length\n3 can be viewed\nas a function that computes the length of the hypotenuse of a right\ntriangle one of whose legs has length 3. We find, finally, that (hypotenuse-length\n3)4\u2014the\napplication of hypotenuse-length\nto 3 and then to\n4\u2014is 5, as expected.\n\nAnother way to understand the reduction of many-place functions to\none-place functions is to imagine a machine \\(M\\) that initially\nstarts out by loading the first \\(a\\) of multiple arguments \\(a,\nb,\\ldots\\) into memory. If one then suspends the machine after it has\nloaded the first argument into memory, one can view the result as\nanother machine M\\(_a\\) that is awaiting one fewer input; the first\nargument is now fixed.\n",
    "section_title": "1.1 Multi-argument operations",
    "entry_title": "The Lambda Calculus",
    "hierarchy_title": "The Lambda Calculus || Introduction || Multi-argument operations",
    "tokenized_text": [
        "introduction",
        "multiargument",
        "operation",
        "multiargument",
        "operation",
        "function",
        "multiple",
        "argument",
        "lambda",
        "calculus",
        "represent",
        "operation",
        "computing",
        "length",
        "hypotenuse",
        "right",
        "triangle",
        "hypotenuse",
        "right",
        "triangle",
        "leg",
        "length",
        "x",
        "rightarrow",
        "sqrt",
        "x",
        "y",
        "lengthofhypotenuse",
        "operation",
        "map",
        "two",
        "positive",
        "real",
        "number",
        "x",
        "y",
        "another",
        "positive",
        "real",
        "number",
        "one",
        "represent",
        "multiplearity",
        "operation",
        "using",
        "apparatus",
        "lambda",
        "calculus",
        "viewing",
        "operation",
        "taking",
        "one",
        "input",
        "time",
        "thus",
        "operation",
        "seen",
        "taking",
        "one",
        "input",
        "x",
        "positive",
        "real",
        "number",
        "producing",
        "value",
        "number",
        "operation",
        "namely",
        "operation",
        "take",
        "positive",
        "real",
        "number",
        "y",
        "input",
        "produce",
        "output",
        "positive",
        "real",
        "number",
        "sqrt",
        "x",
        "y",
        "one",
        "could",
        "summarize",
        "discussion",
        "saying",
        "operation",
        "hypotenuselength",
        "computes",
        "length",
        "hypotenuse",
        "right",
        "triangle",
        "given",
        "length",
        "a",
        "b",
        "leg",
        "hypotenuselength",
        "lambda",
        "lambda",
        "b",
        "sqrt",
        "a",
        "b",
        "principle",
        "beta",
        "reduction",
        "example",
        "hypotenuselength",
        "application",
        "hypotenuselength",
        "lambda",
        "b",
        "sqrt",
        "b",
        "function",
        "waiting",
        "another",
        "argument",
        "lambda",
        "term",
        "hypotenuselength",
        "viewed",
        "function",
        "computes",
        "length",
        "hypotenuse",
        "right",
        "triangle",
        "one",
        "whose",
        "leg",
        "length",
        "find",
        "finally",
        "hypotenuselength",
        "the",
        "application",
        "hypotenuselength",
        "is",
        "expected",
        "another",
        "way",
        "understand",
        "reduction",
        "manyplace",
        "function",
        "oneplace",
        "function",
        "imagine",
        "machine",
        "m",
        "initially",
        "start",
        "loading",
        "first",
        "a",
        "multiple",
        "argument",
        "b",
        "ldots",
        "memory",
        "one",
        "suspends",
        "machine",
        "loaded",
        "first",
        "argument",
        "memory",
        "one",
        "view",
        "result",
        "another",
        "machine",
        "m",
        "_a",
        "awaiting",
        "one",
        "fewer",
        "input",
        "first",
        "argument",
        "fixed"
    ]
}