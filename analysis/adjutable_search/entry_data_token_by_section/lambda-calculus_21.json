{
    "main_text": "Applications || Computing\n9.3 Relations\n\nThe motivation for the \\(\\lambda\\)-calculus given at the beginning of\nthe entry was based on reading \\(\\lambda\\)-expressions as descriptions\nof functions. Thus, we have understood \u2018\\(\\lambda x[M]\\)\u2019\nto be a (or the) function that, given \\(x\\), gives \\(M\\) (which\ngenerally, though not necessarily, involves x). But it is not\nnecessary to read \\(\\lambda\\)-terms as functions. One could understand\n\\(\\lambda\\)-terms as denoting relations, and read an abstraction term\n\u2018\\(\\lambda x[M]\\)\u2019 as the unary relation (or property)\n\\(R\\) that holds of an argument \\(x\\) just in case \\(M\\) does (see\nCarnap 1947, p. 3). On the relational reading, we can understand an\napplication term \\(MN\\) as a form of predication. One can make sense\nof these terms using the principle of \\(\\beta\\)-conversion:\n\n\\[\n(\\lambda x[M])a = M[x := A],\n\\]\n\n\nwhich says that the abstraction relation \\(\\lambda x[M]\\), predicated\nof A, is the relation obtained by plugging in A for all free\noccurrences of \\(x\\) inside \\(M\\).\n\nAs a concrete example of this kind of approach to\n\\(\\lambda\\)-calculus, consider an extension of first-order logic where\none can form new atomic formulas using \\(\\lambda\\)-terms, in the\nfollowing way:\n\n\nSyntax: For any formula \\(\\phi\\) and any finite\nsequence \\(x_1 , \\ldots ,x_n\\) of variables, the expression\n\u2018\\(\\lambda x_1 \\ldots x_n [\\phi]\\)\u2019 is a predicate symbol\nof arity n. Extend the notion of free and bound variables (using the\nfunctions \\(\\mathbf{FV}\\) and \\(\\mathbf{BV})\\) in such a way that\n\n\\[\n\\mathbf{FV}(\\lambda x_1 \\ldots x_n [\\phi]) = \\mathbf{FV}(\\phi) - \\{ x_1 , \\ldots x_n \\}\n\\]\n\n\nand \n\\[\n\\mathbf{BV}(\\lambda x_1 \\ldots x_n [\\phi]) = \\mathbf{BV}(\\phi) \\cup \\{ x_1 , \\ldots x_n \\}\n\\]\n\n\nDeduction Assume as axioms the universal closures of\nall equivalences \n\\[\n\\lambda x_1 \\ldots x_n [\\phi](t_1 ,\\ldots t_n) \\leftrightarrow \\phi[x_1 ,\\ldots x_n := t_1,\\ldots t_n]\n\\]\n\n\nwhere \\(\\phi[x_1 ,\\ldots x_n := t_1,\\ldots t_n]\\) denotes the\nsimultaneous substitution of the terms \\(t_k\\) for the variables\n\\(x_k\\) \\((1 \\le k \\le n)\\).\n\nSemantics For a first-order structure \\(A\\) and an\nassignment \\(s\\) of elements of \\(A\\) to variables, define\n\n\\[\\begin{align}\nA \\vDash &\\lambda x_1 \\ldots x_n [\\phi](t_1 ,\\ldots t_n) [s] \\text{ iff } \\\\\n         &A \\vDash \\phi[x_1 ,\\ldots x_n := t_1,\\ldots t_n] [s]\n\\end{align}\\]\n\n\n\nAccording to this approach, one can use a \\(\\lambda\\) to treat\nessentially any formula, even complex ones, as if they were atomic. We\nsee the principle of \\(\\beta\\)-reduction in the deductive and semantic\nparts. That this approach adheres to the relational reading of\n\\(\\lambda\\) terms can be seen clearly in the semantics: according to\nthe standard Tarski-style semantics for first-order logic, the\ninterpretation of a formula (possibly with free variables) denotes a\nset of tuples of elements of the structure, as we vary the variable\nassignment that assigns elements of the structure to the\nvariables.\n\nOne can \u2018internalize\u2019 this functional approach. This is\ndone in the case of various property theories, formal\ntheories for reasoning about properties as metaphysical objects\n(Bealer 1982, Zalta 1983, Menzel 1986, 1993, and Turner 1987). This\nkind of theory is employed in certain metaphysical investigations\nwhere properties are metaphysical entities to be investigated. In\nthese theories, metaphysical relations are (or are among) the objects\nof interest; just as we add term-building symbols + and \\(\\times\\) in\nformal theories of arithmetic to build numbers, \\(\\lambda\\) is used in\nproperty theory to build relations. This approach contrasts with the\napproach above. There, \\(\\lambda\\) was added to the grammar of\nfirst-order logic by making it a recipe for building atomic formulas;\nit was a new formula-building operator, like \\(\\vee\\) or\n\\(\\rightarrow\\) or the other connectives. In the case of property\ntheories, the \\(\\lambda\\) plays a role more like + and \\(\\times\\) in\nformal theories of arithmetic: it is used to construct relations\n(which, in this setting, are to be understood as a kind of\nmetaphysical object). Unlike + and \\(\\times\\), though, the \\(\\lambda\\)\nbinds variables.\n\nTo give an illustration of how \\(\\lambda\\) is used in this setting,\nlet us inspect the grammar of a typical application (McMichael and\nZalta, 1980). One typically has a predication operator (or,\nmore precisely, a family of predication operators) \\(p_k (k \\ge 0)\\).\nIn a language where we have terms \\(\\mary\\) and \\(\\john\\) and a binary\nrelation loves, we can formally express:\n\nJohn loves Mary: \\(\\loves(\\john ,\\mary)\\)\nThe property that John loves Mary: \\(\\lambda[\\loves(\\john\n,\\mary)]\\) (note that the \\(\\lambda\\) is binding no variables; we\nmight call this \u2018vacuous binding\u2019. Such properties can be\nunderstood as propositions.)\nThe property of an object \\(x\\) that John loves it: \\(\\lambda x\n[\\loves(\\john,x)]\\).\nThe property that Mary is loved by something: \\(\\lambda[\\exists\nx(\\loves(x,\\mary))]\\) (another instance of vacuous binding, viz.,\nproposition)\nThe predication of the property of \\(x\\) that John loves \\(x\\) to\nMary: \\(p_1 (\\lambda x[\\loves(\\john,x)],\\mary)\\).\nThe (0-ary) predication of the property that John loves Mary:\n\\(p_0 (\\lambda x[\\loves(\\john,\\mary)])\\).\nThe property of objects \\(x\\) and \\(y\\) that \\(x\\) loves \\(y\\):\n\\(\\lambda xy[\\loves(x,y)]\\).\nThe property of an objects \\(x\\) that \\(x\\) loves itself:\n\\(\\lambda x[\\loves(x,x)]\\).\nThe predication of the property of objects \\(x\\) and \\(y\\) that\n\\(x\\) loves \\(y\\) to John and Mary (in that order): \\(p_2 (\\lambda\nxy[\\loves(x,y)],\\john,\\mary)\\).\n\n\nWe reason with these \\(\\lambda\\)-terms using a \\(\\beta\\)-conversion\nprinciple such as: \n\\[\\begin{align}\np_n (\\lambda x_1,&\\ldots x_n [A], t_1 , \\ldots ,t_n) \\leftrightarrow \\\\\n                 &A[x_1 ,\\ldots x_n := t_1,\\ldots, t_n]\n\\end{align}\\]\n\n\nFormally, the predication operator p\\(_k\\) is a \\((k+1)\\)-ary\npredicate symbol. The first argument is intended to be a\n\\(\\lambda\\)-term of \\(k\\) arguments, and the rest of the arguments are\nintended to be the arguments of the body of the \\(\\lambda\\)-term. The\n\\(\\beta\\)-principle above says that the predication of an \\(n\\)-ary\n\\(\\lambda\\)-term \\(L\\) to \\(n\\) terms holds precisely when the body of\n\\(L\\) holds of those terms.\n\nIt turns out that in these theories, we may or may not be able to be\nfully committed to the principle of \\(\\beta\\)-conversion. Indeed, in\nsome property theories, the full principle of \\(\\beta\\)-conversion\nleads to paradox, because one can replay a Russell-style argument when\nthe full principle of \\(\\beta\\)-conversion is in place. In such\nsettings, one restricts the formation of \\(\\lambda\\)-formulas by\nrequiring that the body of a \\(\\lambda\\)-term not contain further\n\\(\\lambda\\)-terms or quantifiers. For further discussion, see (Orilia,\n2000).\n\nOne of the reasons why property theories formulated in the\n\\(\\lambda\\)-calculus are of a particular philosophical importance is\nthe hyperintensional nature of the calculus (see section\n 1.2).\n A property concept may be called\n\u2018hyperintensional\u2019 if and only if it does not\nidentify necessarily coextensional properties, i.e., properties that\nare instanciated by exactly the same objects at every possible world.\nThe properties and relations described by the theories of Bealer,\nZalta, Menzel, and Turner have exactly this characteristic. In other\nwords, the theories are hyperintensional property theories. Recent\nyears have seen a significant rise of interest in hyperintensional\nconcepts of properties in metaphysics (Nolan 2014), and\ncorrespondingly property theories formulated in the\n\\(\\lambda\\)-calculus will likely experience a rise of interest as\nwell.\n\nIn the context of the foundations of mathematics, Zalta and\nOppenheimer (2011) argue for the conceptual priority of the relational\ninterpretation of \\(\\lambda\\)-terms over the functional one. \n\n",
    "section_title": "9.3 Relations",
    "entry_title": "The Lambda Calculus",
    "hierarchy_title": "The Lambda Calculus || Applications || Computing",
    "tokenized_text": [
        "application",
        "computing",
        "relation",
        "motivation",
        "lambda",
        "calculus",
        "given",
        "beginning",
        "entry",
        "based",
        "reading",
        "lambda",
        "expressions",
        "description",
        "function",
        "thus",
        "understood",
        "lambda",
        "x",
        "function",
        "given",
        "x",
        "give",
        "m",
        "generally",
        "though",
        "necessarily",
        "involves",
        "x",
        "necessary",
        "read",
        "lambda",
        "terms",
        "function",
        "one",
        "could",
        "understand",
        "lambda",
        "terms",
        "denoting",
        "relation",
        "read",
        "abstraction",
        "term",
        "lambda",
        "x",
        "unary",
        "relation",
        "property",
        "r",
        "hold",
        "argument",
        "x",
        "case",
        "m",
        "see",
        "carnap",
        "p",
        "relational",
        "reading",
        "understand",
        "application",
        "term",
        "mn",
        "form",
        "predication",
        "one",
        "make",
        "sense",
        "term",
        "using",
        "principle",
        "beta",
        "conversion",
        "lambda",
        "x",
        "x",
        "say",
        "abstraction",
        "relation",
        "lambda",
        "x",
        "predicated",
        "relation",
        "obtained",
        "plugging",
        "free",
        "occurrence",
        "x",
        "inside",
        "m",
        "concrete",
        "example",
        "kind",
        "approach",
        "lambda",
        "calculus",
        "consider",
        "extension",
        "firstorder",
        "logic",
        "one",
        "form",
        "new",
        "atomic",
        "formula",
        "using",
        "lambda",
        "terms",
        "following",
        "way",
        "syntax",
        "formula",
        "phi",
        "finite",
        "sequence",
        "x_",
        "ldots",
        "x_n",
        "variable",
        "expression",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "phi",
        "predicate",
        "symbol",
        "arity",
        "n",
        "extend",
        "notion",
        "free",
        "bound",
        "variable",
        "using",
        "function",
        "mathbf",
        "fv",
        "mathbf",
        "bv",
        "way",
        "mathbf",
        "fv",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "phi",
        "mathbf",
        "fv",
        "phi",
        "x_",
        "ldots",
        "x_n",
        "mathbf",
        "bv",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "phi",
        "mathbf",
        "bv",
        "phi",
        "cup",
        "x_",
        "ldots",
        "x_n",
        "deduction",
        "assume",
        "axiom",
        "universal",
        "closure",
        "equivalence",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "phi",
        "t_",
        "ldots",
        "t_n",
        "leftrightarrow",
        "phi",
        "x_",
        "ldots",
        "x_n",
        "t_",
        "ldots",
        "t_n",
        "phi",
        "x_",
        "ldots",
        "x_n",
        "t_",
        "ldots",
        "t_n",
        "denotes",
        "simultaneous",
        "substitution",
        "term",
        "t_k",
        "variable",
        "x_k",
        "le",
        "k",
        "le",
        "n",
        "semantics",
        "firstorder",
        "structure",
        "a",
        "assignment",
        "s",
        "element",
        "a",
        "variable",
        "define",
        "begin",
        "align",
        "vdash",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "phi",
        "t_",
        "ldots",
        "t_n",
        "text",
        "iff",
        "vdash",
        "phi",
        "x_",
        "ldots",
        "x_n",
        "t_",
        "ldots",
        "t_n",
        "end",
        "align",
        "according",
        "approach",
        "one",
        "use",
        "lambda",
        "treat",
        "essentially",
        "formula",
        "even",
        "complex",
        "one",
        "atomic",
        "see",
        "principle",
        "beta",
        "reduction",
        "deductive",
        "semantic",
        "part",
        "approach",
        "adheres",
        "relational",
        "reading",
        "lambda",
        "term",
        "seen",
        "clearly",
        "semantics",
        "according",
        "standard",
        "tarskistyle",
        "semantics",
        "firstorder",
        "logic",
        "interpretation",
        "formula",
        "possibly",
        "free",
        "variable",
        "denotes",
        "set",
        "tuples",
        "element",
        "structure",
        "vary",
        "variable",
        "assignment",
        "assigns",
        "element",
        "structure",
        "variable",
        "one",
        "internalize",
        "functional",
        "approach",
        "done",
        "case",
        "various",
        "property",
        "theory",
        "formal",
        "theory",
        "reasoning",
        "property",
        "metaphysical",
        "object",
        "bealer",
        "zalta",
        "menzel",
        "turner",
        "kind",
        "theory",
        "employed",
        "certain",
        "metaphysical",
        "investigation",
        "property",
        "metaphysical",
        "entity",
        "investigated",
        "theory",
        "metaphysical",
        "relation",
        "among",
        "object",
        "interest",
        "add",
        "termbuilding",
        "symbol",
        "times",
        "formal",
        "theory",
        "arithmetic",
        "build",
        "number",
        "lambda",
        "used",
        "property",
        "theory",
        "build",
        "relation",
        "approach",
        "contrast",
        "approach",
        "lambda",
        "added",
        "grammar",
        "firstorder",
        "logic",
        "making",
        "recipe",
        "building",
        "atomic",
        "formula",
        "new",
        "formulabuilding",
        "operator",
        "like",
        "vee",
        "rightarrow",
        "connective",
        "case",
        "property",
        "theory",
        "lambda",
        "play",
        "role",
        "like",
        "times",
        "formal",
        "theory",
        "arithmetic",
        "used",
        "construct",
        "relation",
        "setting",
        "understood",
        "kind",
        "metaphysical",
        "object",
        "unlike",
        "times",
        "though",
        "lambda",
        "bind",
        "variable",
        "give",
        "illustration",
        "lambda",
        "used",
        "setting",
        "let",
        "u",
        "inspect",
        "grammar",
        "typical",
        "application",
        "mcmichael",
        "zalta",
        "one",
        "typically",
        "predication",
        "operator",
        "precisely",
        "family",
        "predication",
        "operator",
        "p_k",
        "k",
        "ge",
        "language",
        "term",
        "mary",
        "john",
        "binary",
        "relation",
        "love",
        "formally",
        "express",
        "john",
        "love",
        "mary",
        "loves",
        "john",
        "mary",
        "property",
        "john",
        "love",
        "mary",
        "lambda",
        "loves",
        "john",
        "mary",
        "note",
        "lambda",
        "binding",
        "variable",
        "might",
        "call",
        "vacuous",
        "binding",
        "property",
        "understood",
        "proposition",
        "property",
        "object",
        "x",
        "john",
        "love",
        "lambda",
        "x",
        "loves",
        "john",
        "x",
        "property",
        "mary",
        "loved",
        "something",
        "lambda",
        "exists",
        "x",
        "loves",
        "x",
        "mary",
        "another",
        "instance",
        "vacuous",
        "binding",
        "viz",
        "proposition",
        "predication",
        "property",
        "x",
        "john",
        "love",
        "x",
        "mary",
        "p_",
        "lambda",
        "x",
        "loves",
        "john",
        "x",
        "mary",
        "ary",
        "predication",
        "property",
        "john",
        "love",
        "mary",
        "p_",
        "lambda",
        "x",
        "loves",
        "john",
        "mary",
        "property",
        "object",
        "x",
        "y",
        "x",
        "love",
        "y",
        "lambda",
        "xy",
        "loves",
        "x",
        "property",
        "object",
        "x",
        "x",
        "love",
        "lambda",
        "x",
        "loves",
        "x",
        "x",
        "predication",
        "property",
        "object",
        "x",
        "y",
        "x",
        "love",
        "y",
        "john",
        "mary",
        "order",
        "p_",
        "lambda",
        "xy",
        "loves",
        "x",
        "john",
        "mary",
        "reason",
        "lambda",
        "terms",
        "using",
        "beta",
        "conversion",
        "principle",
        "begin",
        "align",
        "p_n",
        "lambda",
        "x_",
        "ldots",
        "x_n",
        "t_",
        "ldots",
        "t_n",
        "leftrightarrow",
        "x_",
        "ldots",
        "x_n",
        "t_",
        "ldots",
        "t_n",
        "end",
        "align",
        "formally",
        "predication",
        "operator",
        "p",
        "_k",
        "k",
        "ary",
        "predicate",
        "symbol",
        "first",
        "argument",
        "intended",
        "lambda",
        "term",
        "k",
        "argument",
        "rest",
        "argument",
        "intended",
        "argument",
        "body",
        "lambda",
        "term",
        "beta",
        "principle",
        "say",
        "predication",
        "n",
        "ary",
        "lambda",
        "term",
        "l",
        "n",
        "term",
        "hold",
        "precisely",
        "body",
        "l",
        "hold",
        "term",
        "turn",
        "theory",
        "may",
        "may",
        "able",
        "fully",
        "committed",
        "principle",
        "beta",
        "conversion",
        "indeed",
        "property",
        "theory",
        "full",
        "principle",
        "beta",
        "conversion",
        "lead",
        "paradox",
        "one",
        "replay",
        "russellstyle",
        "argument",
        "full",
        "principle",
        "beta",
        "conversion",
        "place",
        "setting",
        "one",
        "restricts",
        "formation",
        "lambda",
        "formulas",
        "requiring",
        "body",
        "lambda",
        "term",
        "contain",
        "lambda",
        "terms",
        "quantifier",
        "discussion",
        "see",
        "orilia",
        "one",
        "reason",
        "property",
        "theory",
        "formulated",
        "lambda",
        "calculus",
        "particular",
        "philosophical",
        "importance",
        "hyperintensional",
        "nature",
        "calculus",
        "see",
        "section",
        "property",
        "concept",
        "may",
        "called",
        "hyperintensional",
        "identify",
        "necessarily",
        "coextensional",
        "property",
        "ie",
        "property",
        "instanciated",
        "exactly",
        "object",
        "every",
        "possible",
        "world",
        "property",
        "relation",
        "described",
        "theory",
        "bealer",
        "zalta",
        "menzel",
        "turner",
        "exactly",
        "characteristic",
        "word",
        "theory",
        "hyperintensional",
        "property",
        "theory",
        "recent",
        "year",
        "seen",
        "significant",
        "rise",
        "interest",
        "hyperintensional",
        "concept",
        "property",
        "metaphysics",
        "nolan",
        "correspondingly",
        "property",
        "theory",
        "formulated",
        "lambda",
        "calculus",
        "likely",
        "experience",
        "rise",
        "interest",
        "well",
        "context",
        "foundation",
        "mathematics",
        "zalta",
        "oppenheimer",
        "argue",
        "conceptual",
        "priority",
        "relational",
        "interpretation",
        "lambda",
        "terms",
        "functional",
        "one"
    ]
}