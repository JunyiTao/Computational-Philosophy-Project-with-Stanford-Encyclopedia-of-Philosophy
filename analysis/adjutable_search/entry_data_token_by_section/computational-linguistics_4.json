{
    "main_text": "Syntax and parsing || Parsing\n2.3 Parsing\n\nNatural language analysis in the early days of AI tended to rely on\ntemplate matching, for example, matching templates such as\n(X has Y) or\n(how many Y are there\non X) to the input to be analyzed. This of course\ndepended on having a very restricted discourse and task domain. By the\nlate 1960s and early 70s, quite sophisticated recursive parsing\ntechniques were being employed. For example, Woods'\nlunar system used a top-down recursive parsing strategy\ninterpreting an ATN in the manner roughly indicated in \nsection 2.2 (though ATNs in principle allow other\nparsing styles). It also saved recognized constituents in a table,\nmuch like the class of parsers we are about to describe. Later parsers\nwere influenced by the efficient and conceptually elegant CFG parsers\ndescribed by Jay Earley (1970) and (separately) by John Cocke, Tadao\nKasami, and Daniel Younger (e.g., Younger 1967). The latter algorithm,\ntermed the CYK or CKY algorithm for the three separate authors, was\nparticularly simple, using a bottom-up dynamic programming approach to\nfirst identify and tabulate the possible types (nonterminal labels) of\nsentence segments of length 1 (i.e., words), then the possible types\nof sentence segments of length 2, and so on, always building on the\npreviously discovered segment types to recognize longer phrases. This\nprocess runs in cubic time in the length of the sentence, and a parse\ntree can be constructed from the tabulated constituents in quadratic\ntime. The CYK algorithm assumes a Chomsky Normal Form (CNF) grammar,\nallowing only productions of form Np \u2192\nNq Nr, or Np\n\u2192 w, i.e., generation of two nonterminals or a word from\nany given nonterminal.  This is only a superficial limitation, because\narbitrary CF grammars are easily converted to CNF.\n\nThe method most frequently employed nowadays in fully analyzing\nsentential structure is chart parsing.  This is a\nconceptually simple and efficient dynamic programming method closely\nrelated to the algorithms just mentioned; i.e., it begins by assigning\npossible analyses to the smallest constituents and then inferring\nlarger constituents based on these, until an instance of the top-level\ncategory (usually S) is found that spans the given text or text\nsegment. There are many variants, depending on whether only complete\nconstituents are posited or incomplete ones as well (to be\nprogressively extended), and whether we proceed left-to-right through\nthe word stream or in some other order (e.g., some seemingly\nbest-first order). A common variant is a left-corner chart\nparser, in which partial constituents are posited whenever their\n\u201cleft corner\u201d\u2014i.e., leftmost constituent on the\nright-hand side of a rule\u2014is already in place. Newly completed\nconstituents are placed on an agenda, and items are\nsuccessively taken off the agenda and used if possible as left corners\nof new, higher-level constituents, and to extend partially completed\nconstituents. At the same time, completed constituents (or rather,\ncategories) are placed in a chart, which can be thought of as a\ntriangular table of width n and height n (the number\nof words processed), where the cell at indices (i, j),\nwith j > i, contains the\ncategories of all complete constituents so far verified reaching from\nposition i to position j in the input.  The chart is\nused both to avoid duplication of constituents already built, and\nultimately to reconstruct one or more global structural analyses. (If\nall possible chart entries are built, the final chart will allow\nreconstruction of all possible parses.) Chart-parsing methods carry\nover to PCFGs essentially without change, still running within a cubic\ntime bound in terms of sentence length. An extra task is maintaining\nprobabilities of completed chart entries (and perhaps bounds on\nprobabilities of incomplete entries, for pruning purposes).\n\nBecause of their greater expressiveness, TAGs and CCGs are harder to\nparse in the worst case (O(n6)) than CFGs\nand projective DGs (O(n3)), at least with\ncurrent algorithms (see Vijay-Shankar & Weir 1994 for parsing\nalgorithms for TAG, CCG, and  LIG based on bottom-up dynamic\nprogramming). However, it does not follow that TAG parsing or CCG\nparsing is impractical for real grammars and real language, and in\nfact parsers exist for both that are competitive with more common\nCFG-based parsers.\n \nFinally we mention connectionist  models of parsing,\nwhich perform syntactic analysis using layered (artificial) neural\nnets (ANNs, NNs) (see Palmer-Brown et al. 2002; Mayberry and\nMiikkulainen 2008; and Bengio 2008 for surveys). There is typically a\nlayer of input units (nodes), one or more layers of hidden units, and\nan output layer, where each layer has (excitatory and inhibitory)\nconnections forward to the next layer, typically conveying evidence\nfor higher-level constituents to that layer. There may also be\nconnections within a hidden layer,  implementing cooperation or\ncompetition among alternatives. A linguistic entity such as a phoneme,\nword, or phrase of a particular type may be represented within a layer\neither by a pattern of activation of units in that layer\n(a distributed representation) or by a single activated unit\n(a localist representation). \nOne of the problems that connectionist models need to confront is that\ninputs are temporally sequenced, so that in order to combine\nconstituent parts, the network must retain information about recently\nprocessed parts. Two possible approaches are the use of simple\nrecurrent networks (SRNs)\nand, in localist networks, sustained\nactivation. SRNs use one-to-one feedback connections from the hidden\nlayer to special context units\naligned with the previous layer\n(normally the input layer or perhaps a secondary hidden layer), in\neffect storing their current outputs in those context units. Thus at\nthe next cycle, the hidden units can use their own previous outputs,\nalong with the new inputs from the input layer, to determine their next\noutputs. In localist models it is common to assume that once a unit\n(standing for a particular concept) becomes active, it stays active for\nsome length of time, so that multiple concepts corresponding to\nmultiple parts of the same sentence, and their properties, can be\nsimultaneously active. A problem that arises is how the properties of\nan entity that are active at a given point in time can be properly tied\nto that entity, and not to other activated entities. (This is the\nvariable binding problem, which has spawned a variety of\napproaches\u2014see Browne and Sun 1999). One solution is to assume\nthat unit activation consists of pulses emitted at a globally fixed\nfrequency, and pulse trains that are in phase with one another\ncorrespond to the same entity (e.g., see Henderson 1994).  Much\ncurrent connectionist research borrows from symbolic processing\nperspectives, by assuming that parsing assigns linguistic phrase\nstructures to sentences, and treating the choice of a structure as\nsimultaneous satisfaction of symbolic linguistic constraints (or\nbiases). Also, more radical forms of hybridization and modularization\nare being explored, such as interfacing a NN parser to a symbolic\nstack, or using a neural net to learn the probabilities needed in a\nstatistical parser, or interconnecting the parser network with\nseparate prediction networks and learning networks.  For an overview\nof connectionist sentence processing and some hybrid methods (see\nCrocker 2010).\n",
    "section_title": "2.3 Parsing",
    "entry_title": "Computational Linguistics",
    "hierarchy_title": "Computational Linguistics || Syntax and parsing || Parsing",
    "tokenized_text": [
        "syntax",
        "parsing",
        "parsing",
        "parsing",
        "natural",
        "language",
        "analysis",
        "early",
        "day",
        "ai",
        "tended",
        "rely",
        "template",
        "matching",
        "example",
        "matching",
        "template",
        "x",
        "many",
        "x",
        "input",
        "analyzed",
        "course",
        "depended",
        "restricted",
        "discourse",
        "task",
        "domain",
        "late",
        "s",
        "early",
        "quite",
        "sophisticated",
        "recursive",
        "parsing",
        "technique",
        "employed",
        "example",
        "wood",
        "lunar",
        "system",
        "used",
        "topdown",
        "recursive",
        "parsing",
        "strategy",
        "interpreting",
        "atn",
        "manner",
        "roughly",
        "indicated",
        "section",
        "though",
        "atns",
        "principle",
        "allow",
        "parsing",
        "style",
        "also",
        "saved",
        "recognized",
        "constituent",
        "table",
        "much",
        "like",
        "class",
        "parser",
        "describe",
        "later",
        "parser",
        "influenced",
        "efficient",
        "conceptually",
        "elegant",
        "cfg",
        "parser",
        "described",
        "jay",
        "earley",
        "separately",
        "john",
        "cocke",
        "tadao",
        "kasami",
        "daniel",
        "younger",
        "eg",
        "younger",
        "latter",
        "algorithm",
        "termed",
        "cyk",
        "cky",
        "algorithm",
        "three",
        "separate",
        "author",
        "particularly",
        "simple",
        "using",
        "bottomup",
        "dynamic",
        "programming",
        "approach",
        "first",
        "identify",
        "tabulate",
        "possible",
        "type",
        "nonterminal",
        "label",
        "sentence",
        "segment",
        "length",
        "ie",
        "word",
        "possible",
        "type",
        "sentence",
        "segment",
        "length",
        "always",
        "building",
        "previously",
        "discovered",
        "segment",
        "type",
        "recognize",
        "longer",
        "phrase",
        "process",
        "run",
        "cubic",
        "time",
        "length",
        "sentence",
        "parse",
        "tree",
        "constructed",
        "tabulated",
        "constituent",
        "quadratic",
        "time",
        "cyk",
        "algorithm",
        "assumes",
        "chomsky",
        "normal",
        "form",
        "cnf",
        "grammar",
        "allowing",
        "production",
        "form",
        "np",
        "nq",
        "nr",
        "np",
        "w",
        "ie",
        "generation",
        "two",
        "nonterminals",
        "word",
        "given",
        "nonterminal",
        "superficial",
        "limitation",
        "arbitrary",
        "cf",
        "grammar",
        "easily",
        "converted",
        "cnf",
        "method",
        "frequently",
        "employed",
        "nowadays",
        "fully",
        "analyzing",
        "sentential",
        "structure",
        "chart",
        "parsing",
        "conceptually",
        "simple",
        "efficient",
        "dynamic",
        "programming",
        "method",
        "closely",
        "related",
        "algorithm",
        "mentioned",
        "ie",
        "begin",
        "assigning",
        "possible",
        "analysis",
        "smallest",
        "constituent",
        "inferring",
        "larger",
        "constituent",
        "based",
        "instance",
        "toplevel",
        "category",
        "usually",
        "found",
        "span",
        "given",
        "text",
        "text",
        "segment",
        "many",
        "variant",
        "depending",
        "whether",
        "complete",
        "constituent",
        "posited",
        "incomplete",
        "one",
        "well",
        "progressively",
        "extended",
        "whether",
        "proceed",
        "lefttoright",
        "word",
        "stream",
        "order",
        "eg",
        "seemingly",
        "bestfirst",
        "order",
        "common",
        "variant",
        "leftcorner",
        "chart",
        "parser",
        "partial",
        "constituent",
        "posited",
        "whenever",
        "left",
        "corner",
        "ie",
        "leftmost",
        "constituent",
        "righthand",
        "side",
        "ruleis",
        "already",
        "place",
        "newly",
        "completed",
        "constituent",
        "placed",
        "agenda",
        "item",
        "successively",
        "taken",
        "agenda",
        "used",
        "possible",
        "left",
        "corner",
        "new",
        "higherlevel",
        "constituent",
        "extend",
        "partially",
        "completed",
        "constituent",
        "time",
        "completed",
        "constituent",
        "rather",
        "category",
        "placed",
        "chart",
        "thought",
        "triangular",
        "table",
        "width",
        "n",
        "height",
        "n",
        "number",
        "word",
        "processed",
        "cell",
        "index",
        "j",
        "j",
        "contains",
        "category",
        "complete",
        "constituent",
        "far",
        "verified",
        "reaching",
        "position",
        "position",
        "j",
        "input",
        "chart",
        "used",
        "avoid",
        "duplication",
        "constituent",
        "already",
        "built",
        "ultimately",
        "reconstruct",
        "one",
        "global",
        "structural",
        "analysis",
        "possible",
        "chart",
        "entry",
        "built",
        "final",
        "chart",
        "allow",
        "reconstruction",
        "possible",
        "par",
        "chartparsing",
        "method",
        "carry",
        "pcfgs",
        "essentially",
        "without",
        "change",
        "still",
        "running",
        "within",
        "cubic",
        "time",
        "bound",
        "term",
        "sentence",
        "length",
        "extra",
        "task",
        "maintaining",
        "probability",
        "completed",
        "chart",
        "entry",
        "perhaps",
        "bound",
        "probability",
        "incomplete",
        "entry",
        "pruning",
        "purpose",
        "greater",
        "expressiveness",
        "tag",
        "ccgs",
        "harder",
        "parse",
        "worst",
        "case",
        "n",
        "cfgs",
        "projective",
        "dg",
        "n",
        "least",
        "current",
        "algorithm",
        "see",
        "vijayshankar",
        "weir",
        "parsing",
        "algorithm",
        "tag",
        "ccg",
        "lig",
        "based",
        "bottomup",
        "dynamic",
        "programming",
        "however",
        "follow",
        "tag",
        "parsing",
        "ccg",
        "parsing",
        "impractical",
        "real",
        "grammar",
        "real",
        "language",
        "fact",
        "parser",
        "exist",
        "competitive",
        "common",
        "cfgbased",
        "parser",
        "finally",
        "mention",
        "connectionist",
        "model",
        "parsing",
        "perform",
        "syntactic",
        "analysis",
        "using",
        "layered",
        "artificial",
        "neural",
        "net",
        "anns",
        "nns",
        "see",
        "palmerbrown",
        "et",
        "al",
        "mayberry",
        "miikkulainen",
        "bengio",
        "survey",
        "typically",
        "layer",
        "input",
        "unit",
        "node",
        "one",
        "layer",
        "hidden",
        "unit",
        "output",
        "layer",
        "layer",
        "excitatory",
        "inhibitory",
        "connection",
        "forward",
        "next",
        "layer",
        "typically",
        "conveying",
        "evidence",
        "higherlevel",
        "constituent",
        "layer",
        "may",
        "also",
        "connection",
        "within",
        "hidden",
        "layer",
        "implementing",
        "cooperation",
        "competition",
        "among",
        "alternative",
        "linguistic",
        "entity",
        "phoneme",
        "word",
        "phrase",
        "particular",
        "type",
        "may",
        "represented",
        "within",
        "layer",
        "either",
        "pattern",
        "activation",
        "unit",
        "layer",
        "distributed",
        "representation",
        "single",
        "activated",
        "unit",
        "localist",
        "representation",
        "one",
        "problem",
        "connectionist",
        "model",
        "need",
        "confront",
        "input",
        "temporally",
        "sequenced",
        "order",
        "combine",
        "constituent",
        "part",
        "network",
        "must",
        "retain",
        "information",
        "recently",
        "processed",
        "part",
        "two",
        "possible",
        "approach",
        "use",
        "simple",
        "recurrent",
        "network",
        "srns",
        "localist",
        "network",
        "sustained",
        "activation",
        "srns",
        "use",
        "onetoone",
        "feedback",
        "connection",
        "hidden",
        "layer",
        "special",
        "context",
        "unit",
        "aligned",
        "previous",
        "layer",
        "normally",
        "input",
        "layer",
        "perhaps",
        "secondary",
        "hidden",
        "layer",
        "effect",
        "storing",
        "current",
        "output",
        "context",
        "unit",
        "thus",
        "next",
        "cycle",
        "hidden",
        "unit",
        "use",
        "previous",
        "output",
        "along",
        "new",
        "input",
        "input",
        "layer",
        "determine",
        "next",
        "output",
        "localist",
        "model",
        "common",
        "assume",
        "unit",
        "standing",
        "particular",
        "concept",
        "becomes",
        "active",
        "stay",
        "active",
        "length",
        "time",
        "multiple",
        "concept",
        "corresponding",
        "multiple",
        "part",
        "sentence",
        "property",
        "simultaneously",
        "active",
        "problem",
        "arises",
        "property",
        "entity",
        "active",
        "given",
        "point",
        "time",
        "properly",
        "tied",
        "entity",
        "activated",
        "entity",
        "variable",
        "binding",
        "problem",
        "spawned",
        "variety",
        "approachessee",
        "browne",
        "sun",
        "one",
        "solution",
        "assume",
        "unit",
        "activation",
        "consists",
        "pulse",
        "emitted",
        "globally",
        "fixed",
        "frequency",
        "pulse",
        "train",
        "phase",
        "one",
        "another",
        "correspond",
        "entity",
        "eg",
        "see",
        "henderson",
        "much",
        "current",
        "connectionist",
        "research",
        "borrows",
        "symbolic",
        "processing",
        "perspective",
        "assuming",
        "parsing",
        "assigns",
        "linguistic",
        "phrase",
        "structure",
        "sentence",
        "treating",
        "choice",
        "structure",
        "simultaneous",
        "satisfaction",
        "symbolic",
        "linguistic",
        "constraint",
        "bias",
        "also",
        "radical",
        "form",
        "hybridization",
        "modularization",
        "explored",
        "interfacing",
        "nn",
        "parser",
        "symbolic",
        "stack",
        "using",
        "neural",
        "net",
        "learn",
        "probability",
        "needed",
        "statistical",
        "parser",
        "interconnecting",
        "parser",
        "network",
        "separate",
        "prediction",
        "network",
        "learning",
        "network",
        "overview",
        "connectionist",
        "sentence",
        "processing",
        "hybrid",
        "method",
        "see",
        "crocker"
    ]
}