{
    "main_text": "Some examples of logics || Local Normal Modal logics\n3.3 Local Normal Modal logics\nThe language of modal logic we consider here is the set \\(L_m = \\{\\wedge , \\vee , \\rightarrow , \\neg , \\Box , \\top , \\bot \\}\\) that expands \\(L_c\\) by adding the unary connective \\(\\Box\\). In the standard literature on modal logic a normal modal logic is defined not as a consequence relation but as a set of formulas with certain properties. A normal modal logic is a set \\(\\Lambda\\) of formulas of \\(L_m\\) that contains all the tautologies of the language of classical logic, the formulas of the form \\[\\Box(\\phi \\rightarrow \\psi) \\rightarrow(\\Box \\phi \\rightarrow \\Box \\psi)\\] and is closed under the rules\n\n \n\n\\[ \\begin{align*} \\phi , \\phi \\rightarrow \\psi / \\psi \\tag{Modus Ponens}\\\\ \\phi / \\Box \\phi \\tag{Modal Generalization}\\\\ \\phi/ \\bsigma(\\phi), \\textrm{ for every substitution } \\sigma \\tag{Substitution}\\\\ \\end{align*} \\]\n\n\nNote that the set \\(\\Lambda\\) is closed under substitution instances,\nnamely for every substitution \\(\\sigma\\), if \\(\\phi \\in L_m\\), then\n\\(\\bsigma(\\phi) \\in L_m\\).\n\nThe least normal modal logic is called \\(K\\) and can be\naxiomatized by the Hilbert-style calculus with axioms the tautologies\nof classical logic and the formulas \\(\\Box(\\phi \\rightarrow \\psi)\n\\rightarrow(\\Box \\phi \\rightarrow \\Box \\psi)\\), and with rules of\ninference Modus Ponens and Modal Generalization. Note that since we use schemas in the presentation of the axioms, the set of derivable formulas is closed under the Substitution  rule.\n\nWith a normal modal logic \\(\\Lambda\\) it is associated the consequence\nrelation defined by the calculus that takes as axioms all the formulas\nin \\(\\Lambda\\) and as the only rule of inference Modus Ponens. The\nlogic system given by this consequence relation is called the\nlocal consequence of \\(\\Lambda\\). We denote it by\n\\(\\blLambda\\). Its theorems are the elements of \\(\\Lambda\\) and it\nholds that\n\n\\(\\Gamma \\vdash_{\\blLambda} \\phi\\txtiff\\phi \\in \\Lambda\\) or there are\n\\(\\phi_1 , \\ldots ,\\phi_n \\in \\Gamma\\) such that \\((\\phi_1 \\wedge\n\\ldots \\wedge \\phi_n) \\rightarrow \\phi \\in \\Lambda\\).\n",
    "section_title": "3.3 Local Normal Modal logics",
    "entry_title": "Algebraic Propositional Logic",
    "hierarchy_title": "Algebraic Propositional Logic || Some examples of logics || Local Normal Modal logics",
    "tokenized_text": [
        "example",
        "logic",
        "local",
        "normal",
        "modal",
        "logic",
        "local",
        "normal",
        "modal",
        "logic",
        "language",
        "modal",
        "logic",
        "consider",
        "set",
        "l_m",
        "wedge",
        "vee",
        "rightarrow",
        "neg",
        "box",
        "top",
        "bot",
        "expands",
        "l_c",
        "adding",
        "unary",
        "connective",
        "box",
        "standard",
        "literature",
        "modal",
        "logic",
        "normal",
        "modal",
        "logic",
        "defined",
        "consequence",
        "relation",
        "set",
        "formula",
        "certain",
        "property",
        "normal",
        "modal",
        "logic",
        "set",
        "lambda",
        "formula",
        "l_m",
        "contains",
        "tautology",
        "language",
        "classical",
        "logic",
        "formula",
        "form",
        "box",
        "phi",
        "rightarrow",
        "psi",
        "rightarrow",
        "box",
        "phi",
        "rightarrow",
        "box",
        "psi",
        "closed",
        "rule",
        "begin",
        "align",
        "phi",
        "phi",
        "rightarrow",
        "psi",
        "psi",
        "tag",
        "modus",
        "ponens",
        "phi",
        "box",
        "phi",
        "tag",
        "modal",
        "generalization",
        "phi",
        "bsigma",
        "phi",
        "textrm",
        "every",
        "substitution",
        "sigma",
        "tag",
        "substitution",
        "end",
        "align",
        "note",
        "set",
        "lambda",
        "closed",
        "substitution",
        "instance",
        "namely",
        "every",
        "substitution",
        "sigma",
        "phi",
        "in",
        "l_m",
        "bsigma",
        "phi",
        "in",
        "l_m",
        "least",
        "normal",
        "modal",
        "logic",
        "called",
        "k",
        "axiomatized",
        "hilbertstyle",
        "calculus",
        "axiom",
        "tautology",
        "classical",
        "logic",
        "formula",
        "box",
        "phi",
        "rightarrow",
        "psi",
        "rightarrow",
        "box",
        "phi",
        "rightarrow",
        "box",
        "psi",
        "rule",
        "inference",
        "modus",
        "ponens",
        "modal",
        "generalization",
        "note",
        "since",
        "use",
        "schema",
        "presentation",
        "axiom",
        "set",
        "derivable",
        "formula",
        "closed",
        "substitution",
        "rule",
        "normal",
        "modal",
        "logic",
        "lambda",
        "associated",
        "consequence",
        "relation",
        "defined",
        "calculus",
        "take",
        "axiom",
        "formula",
        "lambda",
        "rule",
        "inference",
        "modus",
        "ponens",
        "logic",
        "system",
        "given",
        "consequence",
        "relation",
        "called",
        "local",
        "consequence",
        "lambda",
        "denote",
        "bllambda",
        "theorem",
        "element",
        "lambda",
        "hold",
        "gamma",
        "vdash_",
        "bllambda",
        "phitxtiffphi",
        "in",
        "lambda",
        "phi_",
        "ldots",
        "phi_n",
        "in",
        "gamma",
        "phi_",
        "wedge",
        "ldots",
        "wedge",
        "phi_n",
        "rightarrow",
        "phi",
        "in",
        "lambda"
    ]
}