{
    "main_text": "Sense as Algorithm || Motivating Examples\n4.1 Motivating Examples\nSuppose we have a structure with a given domain and some given\nrelations of various arities, say \\(\\langle \\bD, \\bR_1,\n\\ldots, \\bR_n\\rangle\\). And suppose we have a first-order\nlanguage formed in the usual way, with relation symbols, \\(R_1\\),\n\u2026, \\(R_n\\) whose arities match those of the given relations. We\nwill generally use the typographical convention that \\(\\bR\\) is\na relation and \\(R\\) is the associated formal symbol interpreted by\nthat relation. In the usual way we can build up a first-order language\nthat talks about the structure, where atomic formulas involve \\(R_1\\),\n\u2026, \\(R_n\\) and \\(=\\). Constants can be simulated by the use of\nunary relations that are true of single things. For example, in\narithmetic we can have a relation \\(\\bZ\\) such that\n\\(\\bZ(x)\\) holds only when \\(x=0\\). In the interests of\nreadability, in such a case we would act as if we had a constant\nsymbol in our language that was interpreted by 0. Such informal\nsimplifications make formula reading a bit easier, while nothing\nsignificant is lost.\nWhat is added to the usual first-order machinery is a\n\\(\\textsf{where}\\) construction. We will give a proper definition\nshortly but first, here is a concrete example. Let us assume we have a\nstructure for arithmetic, \\(\\langle \\{0,1,2,\\ldots\\}, \\bS,\n\\bZ\\rangle\\). Here \\(\\bS\\) is the two-place successor\nrelation on the domain, that is, we have \\(\\bS(0,1)\\),\n\\(\\bS(1,2)\\), \u2026. We also assume \\(\\bZ\\) is true\nuniquely of 0 and, in accord with what we said above about relations\nand individual constants, we act as if we had a constant symbol 0 in\nthe formal language. Consider the following formula, where \\(S\\) is a\ntwo-place relation symbol interpreted by \\(\\bS\\), and \\(E\\) and\n\\(O\\) are auxiliary one-place relation symbols.\n\n\\[\\tag{20}\\label{evenone}\n\\begin{array}{rl}\n\\even(x) \\equiv E(x) \\textsf{ where } \\{& E(x) \\simeq x=0 \\lor (\\exists y)(S(y,x)\\land O(y)),\\\\\n     &O(x) \\simeq (\\exists y)(S(y,x) \\land E(y))\\}\n\\end{array}\\] \n\nFor the time being think of \\(\\simeq\\) as something like \u201cis\ndefined to be\u201d. This will be discussed further later. Think of\n\\(E(x)\\) as representing the \u2018output\u2019 relation. It is\ndefined in terms \\(O\\), where \\(O\\) is defined in terms of\n\\(E\\). Mutual recursion is involved. Even at this informal stage it is\nnot hard to see that \\(\\even\\) defines the set of even\nnumbers, in the sense that \\(\\even(x)\\) evaluates to true for\neven \\(x\\) and to false for odd \\(x\\). Here is an informal calculation\nshowing that \\(\\even(2)\\) evaluates to true. In it we use\n\\(\\Leftarrow\\) for reverse implication. Also we write members of the\ndomain (numbers) directly into formulas, rather than using the\nmachinery of valuations assigning numbers to free variables.\n\n\\[\\begin{aligned}\n\\even(2) &\\equiv E(2)\\\\\n& \\simeq 2=0 \\lor (\\exists y)(S(y,2) \\land O(y))\\\\\n& \\Leftarrow 2=0 \\lor (S(1,2) \\land O(1))\\\\\n& \\simeq 2=0 \\lor (S(1,2) \\land (\\exists y)(S(y,1) \\land E(y)))\\\\\n& \\Leftarrow 2=0 \\lor (S(1,2) \\land (S(0,1) \\land E(0)))\\\\\n& \\simeq 2=0 \\lor (S(1,2) \\land (S(0,1) \\land (0=0\\lor (\\exists y)(S(y,0)\\land E(y)))))\\end{aligned}\n\\] \n\n\nWe used the clause three times, replacing \\(E(2)\\), \\(O(1)\\), and\n\\(E(0)\\). The final line is true because \\(S(1,2)\\), \\(S(0,1)\\), and\n\\(0=0\\) are true.\nThis example is a start, but it is misleadingly simple. The\nmachinery is rich enough to allow formulation of the liar sentence. In\nthe following, \\(P\\) is an auxiliary relation symbol of arity 0, that\nis, a propositional letter. We have written just \\(P\\) instead of\n\\(P()\\). \n\n\\[\\tag{21}\\label{liar}\n\\textit{liar} \\equiv P \\textsf{ where } \\{ P \\simeq \\lnot P\\}\\] \n\n\nClearly an evaluation attempt of the sort shown above will not\nterminate. A solution to non-termination is familiar from classical\nrecursion theory, and also from work on the theory of truth: allow the\nrelations defined by our formal machinery to be partial. Not\nall instances of a relation have to receive a truth value. But these\nare semantic issues and before getting to them we need to give a\nproper syntactic definition of the language within which our formulas\nwill be written.\n",
    "section_title": "4.1 Motivating Examples",
    "entry_title": "Intensional Logic",
    "hierarchy_title": "Intensional Logic || Sense as Algorithm || Motivating Examples",
    "tokenized_text": [
        "sense",
        "algorithm",
        "motivating",
        "example",
        "motivating",
        "example",
        "suppose",
        "structure",
        "given",
        "domain",
        "given",
        "relation",
        "various",
        "arity",
        "say",
        "langle",
        "bd",
        "br_",
        "ldots",
        "br_nrangle",
        "suppose",
        "firstorder",
        "language",
        "formed",
        "usual",
        "way",
        "relation",
        "symbol",
        "r_",
        "r_n",
        "whose",
        "arity",
        "match",
        "given",
        "relation",
        "generally",
        "use",
        "typographical",
        "convention",
        "br",
        "relation",
        "r",
        "associated",
        "formal",
        "symbol",
        "interpreted",
        "relation",
        "usual",
        "way",
        "build",
        "firstorder",
        "language",
        "talk",
        "structure",
        "atomic",
        "formula",
        "involve",
        "r_",
        "r_n",
        "constant",
        "simulated",
        "use",
        "unary",
        "relation",
        "true",
        "single",
        "thing",
        "example",
        "arithmetic",
        "relation",
        "bz",
        "bz",
        "x",
        "hold",
        "x",
        "interest",
        "readability",
        "case",
        "would",
        "act",
        "constant",
        "symbol",
        "language",
        "interpreted",
        "informal",
        "simplification",
        "make",
        "formula",
        "reading",
        "bit",
        "easier",
        "nothing",
        "significant",
        "lost",
        "added",
        "usual",
        "firstorder",
        "machinery",
        "textsf",
        "construction",
        "give",
        "proper",
        "definition",
        "shortly",
        "first",
        "concrete",
        "example",
        "let",
        "u",
        "assume",
        "structure",
        "arithmetic",
        "langle",
        "ldots",
        "bs",
        "bzrangle",
        "bs",
        "twoplace",
        "successor",
        "relation",
        "domain",
        "bs",
        "bs",
        "also",
        "assume",
        "bz",
        "true",
        "uniquely",
        "accord",
        "said",
        "relation",
        "individual",
        "constant",
        "act",
        "constant",
        "symbol",
        "formal",
        "language",
        "consider",
        "following",
        "formula",
        "s",
        "twoplace",
        "relation",
        "symbol",
        "interpreted",
        "bs",
        "e",
        "o",
        "auxiliary",
        "oneplace",
        "relation",
        "symbol",
        "tag",
        "label",
        "evenone",
        "begin",
        "array",
        "rl",
        "even",
        "x",
        "equiv",
        "e",
        "x",
        "textsf",
        "e",
        "x",
        "simeq",
        "x",
        "lor",
        "exists",
        "x",
        "land",
        "x",
        "simeq",
        "exists",
        "x",
        "land",
        "e",
        "end",
        "array",
        "time",
        "think",
        "simeq",
        "something",
        "like",
        "defined",
        "discussed",
        "later",
        "think",
        "e",
        "x",
        "representing",
        "output",
        "relation",
        "defined",
        "term",
        "o",
        "o",
        "defined",
        "term",
        "e",
        "mutual",
        "recursion",
        "involved",
        "even",
        "informal",
        "stage",
        "hard",
        "see",
        "even",
        "defines",
        "set",
        "even",
        "number",
        "sense",
        "even",
        "x",
        "evaluates",
        "true",
        "even",
        "x",
        "false",
        "odd",
        "x",
        "informal",
        "calculation",
        "showing",
        "even",
        "evaluates",
        "true",
        "use",
        "leftarrow",
        "reverse",
        "implication",
        "also",
        "write",
        "member",
        "domain",
        "number",
        "directly",
        "formula",
        "rather",
        "using",
        "machinery",
        "valuation",
        "assigning",
        "number",
        "free",
        "variable",
        "begin",
        "aligned",
        "even",
        "equiv",
        "e",
        "simeq",
        "lor",
        "exists",
        "y",
        "land",
        "leftarrow",
        "lor",
        "land",
        "simeq",
        "lor",
        "land",
        "exists",
        "y",
        "land",
        "e",
        "leftarrow",
        "lor",
        "land",
        "land",
        "e",
        "simeq",
        "lor",
        "land",
        "land",
        "lor",
        "exists",
        "y",
        "land",
        "e",
        "end",
        "aligned",
        "used",
        "clause",
        "three",
        "time",
        "replacing",
        "e",
        "e",
        "final",
        "line",
        "true",
        "true",
        "example",
        "start",
        "misleadingly",
        "simple",
        "machinery",
        "rich",
        "enough",
        "allow",
        "formulation",
        "liar",
        "sentence",
        "following",
        "p",
        "auxiliary",
        "relation",
        "symbol",
        "arity",
        "propositional",
        "letter",
        "written",
        "p",
        "instead",
        "p",
        "tag",
        "label",
        "liar",
        "textit",
        "liar",
        "equiv",
        "p",
        "textsf",
        "p",
        "simeq",
        "lnot",
        "p",
        "clearly",
        "evaluation",
        "attempt",
        "sort",
        "shown",
        "terminate",
        "solution",
        "nontermination",
        "familiar",
        "classical",
        "recursion",
        "theory",
        "also",
        "work",
        "theory",
        "truth",
        "allow",
        "relation",
        "defined",
        "formal",
        "machinery",
        "partial",
        "instance",
        "relation",
        "receive",
        "truth",
        "value",
        "semantic",
        "issue",
        "getting",
        "need",
        "give",
        "proper",
        "syntactic",
        "definition",
        "language",
        "within",
        "formula",
        "written"
    ]
}