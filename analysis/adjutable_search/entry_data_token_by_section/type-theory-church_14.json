{
    "main_text": "Automation || (Counter-)Model Finding\n4.4 (Counter-)Model Finding\n\nSupport for finding finite models or countermodels for formulas of\nChurch\u2019s type theory was implemented already in the\ntableau-based prover HOT (Konrad 1998). Restricted (counter-)model\nfinding capabilities are also implemented in the provers Satallax,\nLEO-II and LEO-III. The most advanced (finite) model finding support\nis currently realized in the systems Nitpick, Nunchaku and Refute. These tools\nhave been integrated with the Isabelle proof assistant. Nitpick is\nalso available as a standalone tool that accepts TPTP THF syntax. The\nsystems are particularly valuable for exposing errors and\nmisconceptions in problem encodings, and for revealing bugs in the THF\ntheorem provers.\n",
    "section_title": "4.4 (Counter-)Model Finding",
    "entry_title": "Church\u2019s Type Theory",
    "hierarchy_title": "Church\u2019s Type Theory || Automation || (Counter-)Model Finding",
    "tokenized_text": [
        "automation",
        "counter",
        "model",
        "finding",
        "counter",
        "model",
        "finding",
        "support",
        "finding",
        "finite",
        "model",
        "countermodels",
        "formula",
        "church",
        "type",
        "theory",
        "implemented",
        "already",
        "tableaubased",
        "prover",
        "hot",
        "konrad",
        "restricted",
        "counter",
        "model",
        "finding",
        "capability",
        "also",
        "implemented",
        "provers",
        "satallax",
        "leoii",
        "leoiii",
        "advanced",
        "finite",
        "model",
        "finding",
        "support",
        "currently",
        "realized",
        "system",
        "nitpick",
        "nunchaku",
        "refute",
        "tool",
        "integrated",
        "isabelle",
        "proof",
        "assistant",
        "nitpick",
        "also",
        "available",
        "standalone",
        "tool",
        "accepts",
        "tptp",
        "thf",
        "syntax",
        "system",
        "particularly",
        "valuable",
        "exposing",
        "error",
        "misconception",
        "problem",
        "encoding",
        "revealing",
        "bug",
        "thf",
        "theorem",
        "provers"
    ]
}