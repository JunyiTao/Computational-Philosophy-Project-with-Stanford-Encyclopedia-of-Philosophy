{
    "main_text": "Proof Systems || Sequent calculus\n2.1 Sequent calculus\n\nA two-sided sequent calculus for linear logic is presented in the\nfigure below. Notice here that negation is treated as if it were any\nother logic connective: that is, its occurrences in formulas are not\nrestricted and there are introduction rules on the left and right for\nnegation. The left and right side of sequents are multiset of\nformulas: thus, the order of formulas in these contexts does not\nmatter but their multiplicity does matter. \n\nIdentity Rules \n\\[\n\\frac{}{B \\vdash B}\\ \\textit{init}\n  \\qquad\n\\frac\n {\\Delta_1 \\vdash B,\\Gamma_1 \\qquad \\Delta_2,B \\vdash \\Gamma_2}\n {\\Delta_1,\\Delta_2 \\vdash \\Gamma_1,\\Gamma_2}\\ \\textit{cut}\n\\]\n\n\n\nNegation Rules \n\\[\n\\frac{\\Delta \\vdash B,\\Gamma}{\\Delta,B^{\\perp} \\vdash \\Gamma}\\ (\\cdot)^{\\perp} L\n   \\qquad\n\\frac{\\Delta,B \\vdash \\Gamma}{\\Delta \\vdash B^{\\perp},\\Gamma}\\ (\\cdot)^{\\perp} R\n\\]\n\n\n\nMultiplicative Rules \n\\[\\frac{\\Delta \\vdash \\Gamma}{\\Delta,\\one \\vdash \\Gamma}\\ \\one L\n  \\qquad\n  \\frac{}{\\vdash \\one}\\ \\one R\n\\]\n \n\\[\\frac{}{\\bot \\vdash}\\ \\bot L\n  \\qquad\n  \\frac{\\Delta \\vdash \\Gamma}{\\Delta \\vdash \\bot,\\Gamma}\\ \\bot R\n\\]\n\n\\[\\frac{\\Delta, B_1,B_2 \\vdash \\Gamma}{\\Delta, B_1\\ot B_2 \\vdash \\Gamma}\\ \\ot L\n  \\qquad\n  \\frac{\\Delta_1 \\vdash B_1,\\Gamma_1 \\qquad \\Delta_2 \\vdash B_2,\\Gamma_2}\n       {\\Delta_1, \\Delta_2 \\vdash B_1\\ot B_2,\\Gamma_{1},\\Gamma_{2}}\\ \\ot R\n\\]\n \n\\[\\frac{\\Delta_1,B_1 \\vdash \\Gamma_1 \\qquad \\Delta_2, B_2 \\vdash \\Gamma_2}\n       {\\Delta_1,\\Delta_2, B_1\\lpar B_2 \\vdash \\Gamma_1,\\Gamma_2}\\ \n        \\lpar L\n  \\qquad\n  \\frac{\\Delta \\vdash B_1, B_2,\\Gamma}{\\Delta \\vdash B_1\\lpar B_2, \\Gamma}\\ \n  \\lpar R\n\\]\n\n\n\nAdditive Rules \n\\[\\frac{}{\\Delta,\\zero \\vdash \\Gamma}\\ \\zero L\n  \\qquad\n  \\frac{}{\\Delta \\vdash \\top,\\Gamma}\\ \\top R\n\\]\n \n\\[\\frac{\\Delta, B_i \\vdash \\Gamma}\n       {\\Delta, B_1\\amp  B_2 \\vdash \\Gamma}\\ {\\amp}L\\ (i=1,2)\n  \\qquad\n  \\frac{\\Delta \\vdash B_1,\\Gamma \\qquad \\Delta \\vdash B_2,\\Gamma}\n       {\\Delta \\vdash B_1\\amp B_2,\\Gamma}\\ {\\amp}R\n\\]\n \n\\[\\frac{\\Delta,B_1 \\vdash \\Gamma \\qquad \\Delta,B_2 \\vdash \\Gamma}\n       {\\Delta,B_1\\oplus B_2 \\vdash \\Gamma}\\ {\\oplus}L\n  \\qquad\n  \\frac{\\Delta \\vdash B_i,\\Gamma}\n       {\\Delta \\vdash B_1\\oplus B_2,\\Gamma}\\ {\\oplus}R\\ (i=1,2)\n\\]\n\n\n\nQuantifier Rules \n\\[\\frac{\\Delta, B[t/x] \\vdash \\Gamma}{\\Delta,\\forall x.B \\vdash \\Gamma}\\ \\forall L\n  \\qquad\n  \\frac{\\Delta \\vdash B[y/x],\\Gamma}{\\Delta \\vdash \\forall x.B,\\Gamma}\\ \\forall R\n\\]\n \n\\[\\frac{\\Delta \\vdash B[t/x],\\Gamma}{\\Delta \\vdash \\exists x.B,\\Gamma}\\ \\exists R\n  \\qquad\n  \\frac{\\Delta,B[y/x] \\vdash \\Gamma}{\\Delta,\\exists x.B \\vdash \\Gamma}\\ \\exists L,\n\\]\n\n\n\nExponential Rules \n\\[\\frac{\\Delta \\vdash \\Gamma}{\\Delta, \\bang B \\vdash \\Gamma}\\ \\bang W\n  \\quad\n  \\frac{\\Delta, \\bang B, \\bang B \\vdash \\Gamma}{\\Delta, \\bang B \\vdash \\Gamma}\\ \\bang C\n  \\quad\n  \\frac{\\Delta,B \\vdash \\Gamma}{\\Delta, \\bang B \\vdash \\Gamma}\\ \\bang D\n  \\quad\n  \\frac{\\bang\\Delta \\vdash B,\\quest\\Gamma}{\\bang\\Delta \\vdash \\bang B,\\quest\\Gamma}\\ \\bang R\n\\]\n \n\\[\\frac{\\Delta \\vdash \\Gamma}{\\Delta \\vdash \\quest B,\\Gamma}\\ \\quest W\n  \\quad\n  \\frac{\\Delta \\vdash \\quest B, \\quest B,\\Gamma}{\\Delta \\vdash \\quest B,\\Gamma}\\ \\quest C\n  \\quad\n  \\frac{\\Delta \\vdash B,\\Gamma}{\\Delta \\vdash \\quest B,\\Gamma}\\ \\quest D\n  \\quad\n  \\frac{\\bang\\Delta,B \\vdash \\quest\\Gamma}{\\bang\\Delta,\\quest B \\vdash \\quest\\Gamma}\\ \\quest L\n\\]\n\n\n\nNotice that the rules of weakening and contraction are available only\nfor formulas marked with the exponential \\(\\bang\\) on the left or\n\\(\\quest\\) on the right of the sequent. The \\(\\quest\\)R and \\(\\bang\\)L\nrules are often called \u201cdereliction\u201d rules. The \\(\\quest\\)L and \\(\\bang\\)R rules are often called\n\u201cpromotion\u201d rules and\nare similar to the sequent calculus rules used in the treatment of\nS4 modal logic (Ono 1998). The usual\nproviso for the \\(\\forall\\)-right and \\(\\exists\\)-left introduction\nrules is assumed; in particular, the variable \\(y\\) must not be free\nin the formulas of the lower sequent of those inference rules.\nQuantification here is assumed to be first-order.  Girard presented a higher-order version of linear logic in his 1987 paper.\n\nThe cut rule can be eliminated and completeness is still maintained.\nDually, the init rule can also be eliminated as well except\nfor the occurrences of init involving atomic formulas.\n2.2 Focused proofs\n\nAn important normal form theorem for the structure of cut-free proofs\nwas provided by Andreoli\n (1992).\n He classified a non-atomic formula as asynchronous if its\ntop-level logical connective is \\(\\top\\), &, \\(\\bot , \\lpar\\),\n\\(\\quest\\), or \\(\\forall\\) or synchronous if its top-level\nlogical connective is \\(0, \\oplus , 1, \\otimes\\), \\(\\bang\\), or\n\\(\\exists\\).\n\nWhen viewing proof search as a computational model, we consider how \ninference rules can transform a sequent as its conclusion into \npremises. As a result, we can see formulas in a sequent as being \u201cagents\u201d that may act\nindependently or in concert with others in their environment. \nHere, the actions of such agents are determined by reading the introduction\nrule for them bottom-up. If an asynchronous formula occurs on the\nright of a sequent, it can evolve without affecting provability and\nwithout interacting with its context, i.e., the corresponding\nintroduction rule is invertible. For example, the agent \\((B \\lpar\nC)\\) becomes (by applying the \\(\\lpar\\)-right introduction rule) the\ntwo agents \\(B\\) and \\(C\\) (now working in parallel). Similarly, the\nagent \\((B \\amp C)\\) yields (by applying the &-right introduction\nrule) two different identical worlds (sequents) except that \\(B\\) is\nin one of these worlds and \\(C\\) is in the other.\n\nOn the other hand, if we view a synchronous formula as an agent whose\nevolution is determined by reading the corresponding right-introduction \nrule from the bottom up,\nthen it is possible for a provable sequent to evolve to a non-provable\nsequent (for example, by applying the \\(\\oplus\\) right-introduction\nrule). Also, the instances of such inference rules depend on details\nof the context of the formula. For example, the success of the 1-right\nintroduction rule requires that the surrounding context is empty and\nthe success of the \\(\\otimes\\)-right introduction rule depends on how\nthe agent\u2019s surrounding context is divided into two contexts.\nThus, the evolution of such agents depends on\n\u201csynchronizing\u201d with other parts of the context.\n\nNow consider a one-sided sequent calculus presentation of linear logic\nwhere the only introduction rules are right-introduction rules. Given\nthe above classification of connectives, it is possible to show that\nproof search can be structured into the following phases without loss\nof completeness. The asynchronous phase occurs if there is an\nasynchronous formula present in the sequent. In this phase,\nright-introduction rules are applied (bottom-up) in any order until there are no\nfurther asynchronous formulas. In the synchronous phase some\nsynchronous formula is selected and becomes the \u201cfocus\u201d of\nthis phase: that is, right-introduction rules are applied (bottom-up) to it and to\nany synchronous subformula that it might generate.\n\nThe following figure presents the focusing proof system for linear\nlogic. Notice that the two phases are represented by different arrows:\nthe up-arrow denotes the asynchronous phase and the down-arrow denotes\nthe synchronous phase. Also, sequents are divided into three\nzones (where the zones are separated by either a semicolon or\nan up or down-arrow). In particular, to the left of the up-arrow and\ndown-arrow are the two zones. The zone written as \\(\\Psi\\) denotes a\nset of formulas that can be used any number of times in the proof of\nthat sequent. The zone written as \\(\\Delta\\) denotes a multiset of\nformulas. The zone to the right of an\nup-arrow is also a multiset of formulas while the zone to the right of\na down-arrow is a single formula. It is possible to impose an\narbitrary order on the formulas to the right of the up-arrow since the\nintroduction of asynchronous formulas can be done in any order. Atoms\nare given polarity and in the figure below, \\(A\\) stands for positive\natoms and the negation of \\(A\\) stands for negative atoms. Proofs\nbuilt by these inference rules are called focused proofs. The\ncompleteness of focused proofs for linear logic is proved in \n Andreoli 1992.\n\nAsynchronous Phase \n\\[\\frac{\\Up{\\Psi}{\\Delta}{L}}{\\Up{\\Psi}{\\Delta}{\\bot,L}}\\ [\\bot]\n     \\qquad\n\\frac{\\Up{\\Psi,F}{\\Delta}{L}}\n     {\\Up{\\Psi}{\\Delta}{\\quest F,L}}\\ [\\quest]\n\\]\n \n\\[\\frac{}\n       {\\Up{\\Psi}{\\Delta}{\\top,L}}\\ [\\top]\n  \\qquad\n\\frac{\\Up{\\Psi}{\\Delta}{F[y/x],L}} \n     {\\Up{\\Psi}{\\Delta}{\\forall x.F,L}}\\ [\\forall]\n\\]\n\n\\[\\frac{\\Up{\\Psi}{\\Delta}{F_1,F_2,L}}\n     {\\Up{\\Psi}{\\Delta}{F_1\\lpar F_2,L}}\\ [\\lpar]\n  \\qquad\n\\frac{\\Up{\\Psi}{\\Delta}{F_1,L}\\quad \\Up{\\Psi}{\\Delta}{F_2,L}}\n     {\\Up{\\Psi}{\\Delta}{F_1\\amp F_2,L}}\\ [\\amp]\n\\]\n \n\\[\\frac{\\Up{\\Psi}{\\Delta,F}{L}}{\\Up{\\Psi}{\\Delta}{F,L}}\n   \\ [R\\Uparrow]\\ \\text{provided that $F$ is not asynchronous}\n\\]\n\n\n\nSynchronous Phase \n\\[\\frac{}{\\Down{\\Psi}{\\cdot}{\\one}}\\ [\\one]\n  \\qquad\n  \\frac{\\Down{\\Psi}{\\Delta_1}{F_1}\\quad \\Down{\\Psi}{\\Delta_2}{F_2}}\n       {\\Down{\\Psi}{\\Delta_1,\\Delta_2}{F_1\\ot F_2}}\n   \\ [\\ot]\n\\qquad\n\\frac{\\Up{\\Psi}{\\cdot}{F}}{\\Down{\\Psi}{\\cdot}{\\bang F}}\n  \\ [\\bang]\n\\]\n \n\\[\\frac{\\Down{\\Psi}{\\Delta}{F_i}}{\\Down{\\Psi}{\\Delta}{F_1\\oplus F_2}}\n  \\ [\\oplus_i]\n  \\qquad\n\\frac{\\Down{\\Psi}{\\Delta}{F[t/x]}}\n  {\\Down{\\Psi}{\\Delta}{\\exists x.F}}\n   \\ [\\exists]\n\\]\n\n\\[\\frac{\\Up{\\Psi}{\\Delta}{F}}{\\Down{\\Psi}{\\Delta}{F}}\n   \\ [R\\Downarrow]\\ \\text{provided that $F$ is either asynchronous or an atom} \n\\]\n\n\n\nIdentity and Decide Rules \n\\[\\frac{}{\\Down{\\Psi}{A}{A^{\\perp}}}\n   \\ [I_1]\n\\qquad\n  \\frac{}{\\Down{\\Psi,A}{\\cdot}{A^{\\perp}}}\n     \\ [I_2]\\ \\text{where } A \\text{ is an atom}\n\\]\n \n\\[\\frac{\\Down{\\Psi}{\\Delta}{F}}{\\Up{\\Psi}{\\Delta,F}{\\cdot}}\n   \\ [D_1]\n\\qquad\n   \\frac{\\Down{\\Psi}{\\Delta}{F}}{\\Up{\\Psi,F}{\\Delta}{\\cdot}}\n   \\ [D_2]\\ \\text{where } F \\text{ is a positive formula}\n\\]\n\n\n\nFocused proof systems have also been designed for classical and\nintuitionistic logics\n (Danos et al. 1997;\n Laurent et al. 2005;\n Liang & Miller 2009).\n2.3 Proof nets\n\nProofs presented using a sequent calculus contain a lot of detail that\nsometimes is uninteresting: consider for example how many\nuninterestingly different ways there are to form a proof of \\(\\vdash\n\\Gamma , (A_1\\lpar A_2), \\ldots ,(A_{n-1}\\lpar A_n)\\) from a\nderivation of \\(\\vdash \\Gamma , A_1, A_2 , \\ldots ,A_n\\). This\nunpleasant fact derives from the sequential nature of proofs in a\nsequent calculus: if we want to apply a set \\(S\\) of \\(n\\) rules to\ndifferent parts of a sequent, we cannot apply them in one step, even\nif they do not interfere with each other! We must\nsequentialize them, i.e., choose a linear order on \\(S\\) and\napply the rules in \\(n\\) steps, according to this order.\n\nA natural question arises: \u201cIs there a representation of proofs\nthat abstracts from such uninteresting details?\u201d. A similar\nquestion is answered positively in the case of intuitionistic sequent\ncalculus by means of what is known as natural deduction, that\nhas, via the Curry-Howard correspondence (Howard 1980),\na strong connection with the\ncomputational device known as \\(\\lambda\\)-calculus.\n\nFor linear logic, this succinct representation of proofs is given by\nproof nets, graph-like structures that enjoy particularly\ngood properties for the MLL fragment of the logic. The first step\ntowards this representation is to convert all the sequent calculus\nsystem, using the involutivity of negation, into a one-sided system,\nwhere sequents are of the form \\(\\vdash \\Gamma\\). As a consequence,\nthe number of rules is reduced since we have no left-introduction\nrules, but we keep the same expressive power, as provability stays the\nsame.\n\nTo each sequent calculus proof in MLL, one can inductively associate a\nproof net with the same conclusions as follows:\n\nTo a proof reduced to the axiom rule, we associate an axiom\nlink.\n\n\n\n \nFor a proof obtained by applying the cut rule to two proofs, we\nfirst inductively build the proof nets associated to those two proofs,\nand then we combine them using a cut link.\n\n\n\n \nFor a proof obtained by applying the tensor rule to two proofs, we\nfirst inductively build the proof nets associated to those two proofs,\nand then we combine them using a tensor link.\n\n\n\n \nFor a proof obtained by applying the par rule to a proof, first\ninductively build the proof net associated to that proof, and then we\nadd a \u201cpar link\u201d.\n\n\n\n \n\n\nAll this can be properly formalized using hypergraphs (formulas are\nnodes and \u201clinks\u201d are oriented hyperedges with hypotheses\nand conclusions), and we can formally define as a proof net a\nhypergraph inductively built out of a sequent calculus derivation of\nMLL. Notice that there are quite a lot of hypergraphs that are not\nproof nets.\n\nNow if you look at the proof net built from the derivations of\n\\(\\vdash \\Gamma , (A_1\\lpar A_2), \\ldots ,(A_{n-1}\\lpar A_n)\\)\nobtained from \\(\\vdash \\Gamma , A_1, A_2 , \\ldots ,A_n\\), you will see\nthat all trace of the order of application of the rules has\ndisappeared. In a sense, the proof nets are an equivalence class of\nsequent calculus derivations with respect to the derivation order of\nrules whose application commute.\n\nSuppose that somebody now comes to you with a huge hypergraph built\nwith axiom, cut, par and tensor links, claiming that it is actually\na representation of a proof.\nHow can you verify that it is actually a representation of a\nproof, and not just a random structure?\n\nPerforming this correctness check is a challenge that amounts\nto rebuilding a sequential construction history for your structure,\ncorresponding to a derivation in sequent calculus, and seems at first\na very complex problem. The first correctness criterion for MLL proof\nnets, called the \u201clong trip criterion\u201d, and present in\nGirard\u2019s original paper, is exponential, as well as the ACC\n(Acyclic connected) criterion of Danos and Regnier\n (1989)\n found later on. Nevertheless, there exists a much more efficient\ncriterion, known as Contractibility, due to Danos and Regnier, that\nhas more recently been reformulated as the following elegant graph\nparsing criterion by Guerrini, Martini and Masini: a hypergraph is a\nproof net if and only if it reduces to the singleton node\n\u201cnet\u201d via the following graph reduction rules\n\n\n\n\nPerforming this check naively can take quadratic time (each\napplication of a rule may require an entire lookup of the graph to\nfind the redex, and we need to perform as many steps as there are\nhyperlinks in the graph). Linear time algorithms have been give by\nGuerrini\n (2011)\n and by Murawski and Ong\n (2006).\n\nAnother style of correctness criterion for MLL proof nets is given by\nRetor\u00e9\n (2003)\n in which a quadratic algorithm is given for MLL. \n\nOn proof nets, one can perform cut elimination in a particularly clean\nway, because of their parallel nature, cuts can be eliminated locally via\ntwo simplification rules:\n\nAxiom move:\n\n\n\n \nMultiplicative move:\n\n\n\n \n\n\nThese are actually computation rules over proof nets, and the\ncorrectness criteria allow to verify easily that any such rule\npreserves correctness, and as a consequence, the reduction of a proof\nnet still comes from a sequent calculus proof of the same sequent.\n\nHence, cut elimination in MLL proof nets can be performed in linear\ntime and gives a simple, elegant cut-elimination result for all of\nMLL.\n\nThe proof nets approach can be extended to larger subsets of linear\nlogic, but then it is less clear how to obtain the same elegant\nresults as for MLL: the original system proposed in\n Girard 1987\n works for MELL, for example, by associating to the four exponential\nrules the following hypergraph constructions:\n\nContraction\n\n\n\n \nWeakening\n\n\n\n \nDereliction\n\n\n\n \nPromotion, that introduces the notion of \u201cbox\u201d, a\nsequentialization mark around a piece of a proof net materialized in\nthe pictures of the graphs by the rectangle drawn around the proof net\nof conclusions \\(A\\) and \\(\\quest\\Gamma\\).\n\n\n\n \n\n\nWhile these constructions and the associated graph reductions bear\nstriking similarity with \\(\\lambda\\)-calculus with explicit\nsubstitutions, as first remarked by Di Cosmo & Kesner\n (1997),\n they are too similar to the corresponding sequent calculus rules. The\nparallelization effect so elegant for MLL does not properly carry on\nhere, and the graph reduction rules involve boxes and are not\nlocal.\n\nTo recover a satisfactory system, many proposals have been made,\nstarting from the one by Danos & Regnier\n (1995)\n but we want to mention here the very elegant approach by Guerrini,\nMartini and Masini\n (Guerrini et al. 2003),\n that neatly shows the connection between two level proof systems for\nmodal logic, proper proof nets for MELL, and optimal reduction in the\n\\(\\lambda\\)-calculus.\n\nA recent paper by Heijltjes and Houston\n (2016)\n has shown that there can be no satisfactory notion of proof nets for\nMLL if units are also allowed. \n\nIt is possible to provide a canonical treatment of additive\nconnectives, even with first-order quantification\n (Heijltjes et al. 2019).\n Proof nets for formulas containing both multiplicative and additive\nconnectives have various technical presentations, none of which\nappears canonical and satisfactory. Their treatment in proof-net-like\nproof systems is currently a topic of active research. In particular,\nsee\n (Hughes and van Glabbeek 2005)\n and\n (Hughes and Heijltjes 2016).\n \n3. Semantics\n\nApproaching the semantics of linear logic is usually done along two\ndifferent paths. First, there are various semantic structures\navailable that can be used to map formulas to denotations in such\nstructures. That approach can be used to establish soundness and\ncompleteness for various fragments of linear logic. A more novel\nsemantic approach to linear logic involves giving semantics to proofs\ndirectly. We describe briefly these two approaches and provide some\nlinks to the literature.\n3.1 Semantics of provability\n\nOne approach to attempting a sound and complete semantics for\nfragments of linear logic associates to a formula the set of all\ncontexts that can be used to prove that formula. Of course, such a\ncollection may need to be more abstract and to be given various\nclosure properties. The phase semantics of Girard\n (1987)\n provides one such semantics: some uses of such semantics have been\nmade in computer science to provide counterexamples and as a tool that\ncan help establish that a given concurrent system cannot evolve into\nanother with certain properties\n (Fages et al. 2001).\nPhase semantics have also been used to give semantic proofs of cut elimination\nfor both first-order and higher-order versions of linear logic \n(Okada 1999).\n Similarly, Kripke-style semantics have been provided in\n Allwein & Dunn 1993\n and\n Hodas & Miller 1994.\n Quantales, which are certain kind of partially ordered algebraic structures,\nhave also been used to provide semantic models for parts of\nlinear logic early on\n (Yetter 1990).\n3.2 Semantics of proofs\n\nIn the formulas-as-types analogy which is so popular and fruitful in\ntheoretical computer science, a logical system is put in\ncorrespondence with a typed computational device (like typed\n\\(\\lambda\\)-calculus), by associating to each proof of that formula a\nprogram having that formula as a type. For example, a proof of the\ntautology \\(A \\Rightarrow A\\) corresponds to the program\nfun\\((x:A).x:A\\rightarrow A\\), the identity function on\nobjects of type \\(A\\). This is why, in constructive logical systems\n(such as intuitionistic logic and arithmetic), and in linear logic, so\nmuch importance is attached to proofs, to the point that building and\nstudying models of proofs gets so much more attention than building\nand studying models of provability: we are not satisfied to know that\na formula is provable, we really want to know the computational\ncontent of its proof.\n\nMany models of linear logic proofs have been proposed; we consider\nthat, to date, the simplest and most intuitive construction is the one\nbased on the so-called \u201crelational semantics\u201d or\n\u201cKripke-style semantics\u201d, where formulas are interpreted\nas multisets, one-sided sequents are interpreted as tuples of\nmultisets, and proofs are interpreted as relations over the\ninterpretation of sequents \n(Tortora de Falco 2003,\nEhrhard 2012,\nMelli\u00e8s 2018). \nIf one wants to give a purely\nset-theoretic semantics, without resorting to multisets, it is\npossible to do it by means of coherence spaces, sets equipped with a\nspecial coherence relation, as originally shown by in\n Girard 1987.\n There are interesting category theoretical models of linear logic,\nsuch as the *-autonomous categories\n (Barr 1991)\n and hypercoherences\n (Ehrhard 1993).\n\nAnother approach to the semantics of proofs is given by Girard\u2019s\nGeometry of Interaction, that allows us to obtain a fully\nalgebraic characterization of proofs. To each proof net, one can\nassociate a partial permutation matrix \\(\\sigma\\) corresponding to the\ncut links, and a proper matrix \\(M\\) corresponding expressions built\nout of a certain dynamic algebra, that describe the possible paths\ninside the proof net. It is then possible to fully describe the proof\nnet via the execution formula \n\\[\n\\mathrm{EX}(\\sigma ,M) = (1-\\sigma^2) \\left(\\sum_i M(\\sigma M)\\right) (1-\\sigma^2)\n\\]\n\n\nwhich, in the MLL case, is an invariant of the normalization process.\nSome nice connection to results coming from data-flow theory has been\nshown in some early work of Abramsky & Jagadeesan\n (1994).\n\nThe area of semantics that has developed around so-called game\nsemantics deserves special attention. The strong connection\nbetween games and linear logic was pointed out quite early by A. Blass\n (1992).\n In fact, there are two different traditions to connecting logic to\ngames. In the tradition of dialog games dating back to\nLorenzen, one player attempts to prove a formula while a second player\nattempts to refute it. It is possible to provide MALL with such a\ndialog game that is completely symmetric for both the prover and the\nrefuter\n (Delande et al. 2010).\n In another tradition, formulas are interpreted as games, logical\nconnectives as game constructors, and proofs as strategies that\ndescribe how a player reacts to opponent moves. By imposing different\nrestrictions on the rules of the game, one can actually provide a\nprecise semantics (technically, a fully abstract model) for various\nfeatures of actual programming languages, hence the huge interest in\nthis area over the past years. See, for example,\n Abramsky & Jagadeesan 1994,\n Abramsky & Melli\u00e8s 1999, and\n Hyland & Ong 2000.\n \n4. Complexity\n\nFor any given logic, it is useful to know whether or not there is an\neffective procedure to determine, for each sentence in the logic, if\nit is provable or not. A decidable logic\u2014i.e., one for\nwhich there is an effective procedure for provability\u2014is often\ndescribed by its complexity class, which characterizes how\ndifficult it is to perform the decision procedure. Extensive research\nwork has been dedicated to the study of the complexity and\ndecidability issues for several fragments of propositional linear\nlogic. It is known that\n\nMLL provability is NP-complete\n (Kanovich 1992) and \nMALL provability is PSPACE-complete\n (Lincoln et al. 1992).\n\nHere, \nNP and PSPACE are complexity classes such that NP\n\\(\\subseteq\\) PSPACE.  Surprisingly, for those\nthat may forget that the novelty in linear logic lies in the way\nformulas are managed without the structural rules of contraction and\nweakening, these results stay the same even if we focus on the\nfragments of the logics where only the constants, and no propositional\nvariables, are allowed\n (Lincoln & Winkler 1994). Indeed, it is possible to encode arbitrary formulas\ninto constant-only formulas preserving provability.\n\nMELL is a surprisingly expressive logic. For example, the reachability\nproblem in Petri nets can be encoded into MELL\n (Gunter & Gehlot 1989)\n and that problem is equivalent to the reachability problem of vector\naddition systems with states (VASS)\n (Reutenauer 1989).\n Furthermore, the decidability problem of MELL is equivalent to the\nreachability problem for branching VASS\n (de Groote et al. 2004)\n and the latter is known to have a non-elementary lower bound\n (Lazic and Schmitz 2015).\n Thus, if MELL turns out to be decidable, it will be at least TOWER-hard\n (Lazic and Schmitz 2015).\n A proof of the decidability of MELL has been given by Bimb\u00f3\n (2015)\n but a gap in that proof has been reported by Stra\u00dfburger\n (2019).\n \n\nProofs of the undecidability of propositional linear logic were\npublished in the early 1990s (Lincoln et\nal. 1992, Lincoln 1995).\nKanovich (2016) showed that this\nundecidability result holds for a greatly reduced fragment of\npropositional linear logic.  and a machine checked proof of undecidability\nhas been published in (Forster\n& Larchey-Wendling, 2019).  However, a proof\nof decidability of propositional linear logic has also been published\nby Bimb\u00f3 & Dunn in (2022), who also\nclaim to have found mistakes in the above-mentioned papers.\n\n\nLinear logic with the unrestricted weakening rule added (also known as\nlinear affine logic) is decidable\n (Kopylov 1995)\n and exponential space hard\n (Urquhart 2000).\n \n\nA good overview of complexity results surrounding linear logic can be\nfound in\n Lincoln 1995.\n5. Computer science impact\n\nWhen intuitionistic logic was first proposed early in the last\ncentury, it was presented as a challenge to the way traditional\nmathematicians were supposed to do business. Uses of the excluded\nmiddle and of proof-by-contradiction were considered suspect and\nproblematic, particularly in the presence of infinity. As\nintuitionistic logic concerns were developed into constructive\nmathematics, new constructive approaches have arisen to topics such as\ntopology, algebra, and analysis. Given that linear logic encompasses\nthe dynamics of proof (algorithm) and resources, its primary impact\nhas been not in traditional mathematics but in computer science.\nBefore overviewing the nature of that impact, we outline the various\nways in which logic more generally is used in computer science.\n\nLogic plays different roles in the specification of computations. We\ncan identify the following broad different approaches and note which\nroles have felt influences from linear logic.\n\nIn the computation-as-model approach, computations are\nencoded as mathematical structures and consist of such items as nodes,\ntransitions, and states. Logic is used externally to make\nstatements about those structures. That is, computations are\nused as models for logical expressions. Intensional operators, such as\nthe modals of temporal and dynamic logics or the triples of Hoare\nlogic, are often employed to express propositions about the change in\nstate. This use of logic to represent and reason about computation is\nprobably the most broadly successful use of logic for\nrepresenting computation. This role for logic has felt little\ninfluence from linear logic.\n\nIn the computation-as-deduction approach, pieces of\nlogic\u2019s syntax (such as formulas, terms, types, and proofs) are\nused directly as elements of the specified computation. In this more\nrarefied setting, there are two rather different approaches to how\ncomputation is modeled, called the proof normalization\napproach and the proof search approach.\n\nWe outline below the significant impacts that linear logic has had on\nboth of these different settings.\n5.1 Proof normalization\n\nThe proof normalization approach views the state of a\ncomputation as a proof term and the process of computing as\nnormalization (known alternatively as \\(\\beta\\)-reduction or\ncut-elimination). Functional programming can be explained using\nproof-normalization as its theoretical basis\n (Martin-L\u00f6f 1982)\n and has been used to justify the design of new functional programming\nlanguages, e.g.,\n Abramsky 1993.\n Linear logic provides this approach to computational specification\nwith new types, new declarative means for statically understanding how\nresources may be used in a computation, and provided an appealing\nmeans for formalizing the duality between a function and the\nenvironment that supplies it with arguments.\n\nAnother area where linear logic has been a powerful theoretical\ninstrument is that of optimal reduction. The problem of\nbuilding efficient (optimal) interpreters for the\n\\(\\lambda\\)-calculus, that stayed open for quite a long time after its\noriginal definition by J.J. L\u00e9vy, was solved for the first time\nin\n Lamping 1990,\n via a sophisticated sharing graph implementation involving a quite\nimpressive amount of rules. Using ideas and intuition from linear\nlogic, many authors reconstructed Lamping\u2019s solution,\nsimplifying it and leading to a rich theory connected to that of the\nGeometry of Interaction. For further reading, a good reference is\n Asperti & Guerrini 1998.\n \n\nThe refinement of intuitionistic logic provided by linear logic and\nthe dualities of linear logic provided a setting in which one could\nview a function and its environment as similar entities that interact\ndually. For example, a function with the type \\(A \\limp B\\) can be\nmodeled as a process that consumes a value of type \\(A\\) from its\nenvironment and transforms it into a value of type \\(B\\). In linear\nlogic, this implication is equivalent to its contrapositive form: the\ntype \\(B^{\\bot} \\limp A^{\\bot}\\) can lead to interpreting the same\nfunction as a process that transforms a demand for a value of type\n\\(B\\) into a demand for a value of type \\(A\\) (notice that this does\nnot happen with functions of intuitionistic type since, for example,\ninput argument may be vacuous)\n (Curien 2003).\n The recent successes of using game semantics to model functional\ncomputation are similarly related to the dual treatment of function\nand environment\n (Abramsky and Jagadeesan 1994,\n Hyland & Ong 2000).\n\nFinally, we mention that in the area of encoding computation as proof\nnormalization, linear logic has been used to provide a type-based\ndescription of polytime recursive functions. For example, M. Hofmann\n (2003)\n introduced a \\(\\lambda\\)-calculus with modal and linear types that\nextended the function algebra of\n Bellantoni & Cook 1992\n to higher types. Types based on linear logic have also been used\nwithin functional programs: see\n Guzman & Hudak 1990\n and\n Wadler 1991.\n5.2 Proof search\n\nThe proof search approach views the state of a computation as\na sequent (a structured collection of formulas) and the process of\ncomputing as the process of searching for a proof of a sequent: the\nchanges that take place in sequents capture the dynamics of\ncomputation. With this view of computation, we generally read\ninference rules bottom up, i.e., as a transformation of their\nconclusion into their premise(s). Logic programming can be explained\nusing proof search as its theoretical basis, and linear logic provides\nthis approach to computational specification with new combinators for\nbuilding logic programs, new means to capture rich dynamics, and new\ndeclarative approaches to specifying concurrent computations. (See\n Miller 2004\n for an overview of linear logic programming languages.)\n\nThe completeness of focusing proof system can be used to provide a\ndeclarative explanation of part of the operational semantics of logic\nprogramming within linear logic. Consider, for example, the subset\n\\(L\\) of formulas of linear logic that are built from only the\nconnectives \\(\\top\\), &, \\(\\limp , \\Rightarrow\\), and \\(\\forall\\).\n(Notice that if one adds \\(\\bot\\) to this list, it is possible to\nencode all connectives of linear logic.) It is possible to see that\ncut-free proof search in \\(L\\) can be defined into to phases. Given a\nsequent \\(\\Gamma\\); \\(\\Delta \\vdash G\\), where \\(\\Gamma\\) is a\nset of formulas (which can be contracted and weakened), \\(\\Delta\\) is\nmultiset of formulas (which cannot be contracted nor weakened), and\n\\(G\\) (the \u201cgoal\u201d formula) is a single formula (all from\n\\(L)\\), then proof search proceeds as follows.\n\nIf \\(G\\) is non-atomic, then only a right introduction rule can be\nused to conclude this sequent. Given this set of connectives, the\nright rules are invertible and this goal-reduction phase\ncorresponds exactly to the asynchronous phase of focused proofs.\nIf \\(G\\) is atomic, then proof search proceeds by\ndeciding on a single formula from a left-hand context.\nOnce a formula is chosen for the focus, all\nleft-introduction rules are applied to only that formula and any\npositive subformulas that arise. This backchaining phase\ncorresponds to the asynchronous phase of focused proof\nconstruction.\n\n\nFormally, these various phases can be described using the following\ninference rules. Here, a new sequent arrow is introduced: this arrow\nis labeled with the formula that is the result of a left-introduction\nrule. Notice that the rule for left-introduction of \\(\\limp\\) requires\nsplitting the \\(\\Delta\\) context into two parts \\(\\Delta_1,\\Delta_2\\)\n(when reading the rule bottom up). There are, of course, \\(2^n\\) such\nsplittings if that context has \\(n \\ge 0\\) distinct formulas. The\nsyntactic variable \\(A\\) in these inference rules ranges over atomic\nformulas.\n\nGoal Reduction Phase \n\\[\n\\frac{}  \n     {\\Gamma;\\Delta \\vdash \\top}\\ \\top R\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\vdash B \\qquad \\Gamma;\\Delta \\vdash C}\n     {\\Gamma;\\Delta \\vdash B \\amp C}\\ {\\amp}R\n\\]\n \n\\[\\frac{\\Gamma;\\Delta, B \\vdash C}\n       {\\Gamma;\\Delta \\vdash B \\limp C}\\ \\limp R\n  \\qquad\n\n\\frac{\\Gamma,B ;\\Delta \\vdash C}\n     {\\Gamma;\\Delta \\vdash B \\Rightarrow C}\\ {\\Rightarrow}R\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\vdash B[y/x]}\n     {\\Gamma;\\Delta \\vdash \\forall x. B}\\ \\forall R\n\\]\n\n\n\nBackchaining Phase \n\\[\n\\frac{\\Gamma;\\Delta \\lvdash{D_1} A}\n     {\\Gamma;\\Delta \\lvdash{D_1\\amp D_2}\\, A} \\ {\\amp}L\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D_2} A}\n     {\\Gamma;\\Delta \\lvdash{D_1\\amp D_2} A}\\ {\\amp}L\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D[t/x]} A}\n     {\\Gamma;\\Delta \\lvdash{\\forall_{\\tau}x.D} A}\\ \\forall L\n\\]\n \n\\[\\frac{\\Gamma;\\Delta_1 \\vdash G \\quad \\Gamma;\\Delta_2 \\lvdash{D} A}\n       {\\Gamma;\\Delta_1,\\Delta_2 \\lvdash{G\\limp D} A} \\ {\\limp}L\n  \\qquad\n\n\\frac{\\Gamma;\\cdot \\vdash G \\quad \\Gamma;\\Delta \\lvdash{D} A}\n     {\\Gamma;\\Delta \\lvdash{G\\Rightarrow D} A}\\ {\\Rightarrow}L\n\\]\n\n\n\nIdentity and Decide Rules \n\\[\n\\frac{\\Gamma,D;\\Delta \\lvdash{D} A}\n     {\\Gamma,D;\\Delta \\vdash A}\\ \\textit{decide}{!}\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D} A}\n     {\\Gamma;\\Delta,D \\vdash A}\\ \\textit{decide}\n  \\qquad\n\n\\frac{}\n     {\\Gamma;\\cdot \\lvdash{A} A}\\ \\textit{init}\n\\]\n\n\n\nLinear logic restricted to \\(L\\) can be viewed as a linear logic\nprogramming language. As a consequence, it can serve as a\nspecification language for computational systems, a role that is also\noccupied by, say, Petri nets, process calculi, \\(\\lambda\\)-calculus,\netc. Given that linear logic has a proof theory and various kinds of\nsemantics, broad avenues of reasoning about computations specified in\n\\(L\\) are provided by the meta-theory of linear logic.\n\nGiven that the sequent calculus for linear logic uses multisets of\nformulas, proof search can directly encode multiset\nrewriting. Since many computations can naturally be seen as\nmultiset rewriting, it has been possible to make numerous connections\nbetween linear logic and Petri nets\n (Gunter & Gehlot 1989),\n process calculi\n (Andreoli & Pareschi 1991,\n Kobayashi et al. 1999,\n Miller 1996),\n and security protocols\n (Cervesato et al. 1999,\n Miller 2003).\n6. Variations\n6.1 Different treatments of modality\n\nIf one uses traditional sequent calculus presentations, the exponentials are not\ncanonical in the following sense: if you introduce another copy of\nexponentials, say \\(\\bang'\\) and \\(\\quest'\\), with the same rules as\nthe original ones, there is no way to prove that \\(\\bang\\) is\nequivalent to \\(\\bang'\\), and \\(\\quest\\) to \\(\\quest'\\), while for the\nother connectives this is easily established. Various applications of\nnon-canonical exponentials can be found in\n (Danos et. al., 1993;\n Nigam & Miller, 2009). Although the decidability of MELL is currently being\ndebated\n (Bimb\u00f3 2015,\n Stra\u00dfburger 2019), extending MLL with three pairs of \\(\\bang\\) and\n\\(\\quest\\) yields a logic that is undecidable\n (Chaudhuri 2018).\n Martini and Masini\n 1995\n describe a \u201c2-sequent\u201d proof system in which the\nexponentials are canonical.\n\nThe fact that cut-elimination can make proofs in classical and\nintuitionistic logic grow to enormous size can be analyzed in terms of\nthe application of the contraction rule in those proof systems. If\nproof systems introduce restrictions on contraction, it is possible to\ndesign new logics and proof systems for which cut-elimination has a\nmuch-reduced complexity. For example, elementary linear logic\n(ELL) is obtained by replacing the \\(\\bang\\) and \\(\\quest\\)\nintroduction by a single rule introducing \\(\\bang\\) and \\(\\quest\\) at\nthe same time. As a consequence, ELL can encode all and only the\nKalmar elementary functions (computable in time bounded by a tower of\nexponentials of fixed height)\n (Girard 1998,\n Baillot 2015). Still, other variations on the inference rules for the\nexponentials have been studied. For example, light linear\nlogic\n (Girard 1998)\n and soft linear logic\n (Lafont 2004)\n both characterize functions computable in polynomial time: see also\n (Baillot & Terui 2004).\n \n6.2 Non-commutative linear logic\n\nWhile linear logic rejects the universal application of the two\nstructural rules of weakening and contraction, it allows the\nunrestricted use of the structural rule called exchange. A\nsequent calculus that does not universally employ the exchange rule\nhas sequents whose left and right contexts are lists: the order of\nformulas within context becomes an expressive element of the logic. In\nthis case, the multiplicative disjunction and conjunction can become\nnon-commutative.\n\nOne of the first logics that rejects all three structural rules of the\nsequent calculus was given in\n Lambek 1958.\n While this logic contains two implications, it \ncontains neither a negation nor any exponentials. Various papers have\nproposed extending linear logic to include non-commutative features\nand, at present, no proposal seems canonical. For a sampling of\nnon-commutative linear logics, see\n Yetter 1990,\n Abrusci 1991,\n Retor\u00e9 1997,\n Abrusci & Ruet 1999, and\n Guglielmi & Stra\u00dfburger 2001.\n6.3 Treatment of unbounded behavior\n\nWhile the MALL logic is an expressive and novel logic, it is also\ndecidable and, thus, not capable of capturing the unbounded behaviors\nfound in, say, iteration and recursion. As described above,\nthe addition of the exponentials ! and ? enriches MALL to full linear\nlogic and to a setting where unbounded behaviors can be captured. A\nsecond approach to extending MALL to capture unbounded behaviors\ninvolves the addition of the least and greatest fixed point operators\nas logical connectives directly into MALL. In order to properly\ncharacterize fixed points as being either the least or the greatest,\nit is necessary for the inference rules for fixed points to be\n\u201chigher-order\u201d in the sense that they involve invariants.\nSuch an extension to MALL (also with first-order quantification and\nterm equality) has been developed by Baelde\n (Baelde & Miller, 2007;\n Baelde 2012) and has been used to provide a proof-theoretic\nfoundation for model checking\n (Heath & Miller 2018).\n ",
    "section_title": "2.1 Sequent calculus",
    "entry_title": "Linear Logic",
    "hierarchy_title": "Linear Logic || Proof Systems || Sequent calculus",
    "tokenized_text": [
        "proof",
        "system",
        "sequent",
        "calculus",
        "sequent",
        "calculus",
        "twosided",
        "sequent",
        "calculus",
        "linear",
        "logic",
        "presented",
        "figure",
        "notice",
        "negation",
        "treated",
        "logic",
        "connective",
        "occurrence",
        "formula",
        "restricted",
        "introduction",
        "rule",
        "left",
        "right",
        "negation",
        "left",
        "right",
        "side",
        "sequents",
        "multiset",
        "formula",
        "thus",
        "order",
        "formula",
        "context",
        "matter",
        "multiplicity",
        "matter",
        "identity",
        "rule",
        "frac",
        "b",
        "vdash",
        "b",
        "textit",
        "init",
        "qquad",
        "frac",
        "delta_",
        "vdash",
        "b",
        "gamma_",
        "qquad",
        "delta_",
        "b",
        "vdash",
        "gamma_",
        "delta_",
        "delta_",
        "vdash",
        "gamma_",
        "gamma_",
        "textit",
        "cut",
        "negation",
        "rule",
        "frac",
        "delta",
        "vdash",
        "b",
        "gamma",
        "delta",
        "b",
        "perp",
        "vdash",
        "gamma",
        "cdot",
        "perp",
        "l",
        "qquad",
        "frac",
        "delta",
        "b",
        "vdash",
        "gamma",
        "delta",
        "vdash",
        "b",
        "perp",
        "gamma",
        "cdot",
        "perp",
        "r",
        "multiplicative",
        "rule",
        "frac",
        "delta",
        "vdash",
        "gamma",
        "delta",
        "one",
        "vdash",
        "gamma",
        "one",
        "l",
        "qquad",
        "frac",
        "vdash",
        "one",
        "one",
        "r",
        "frac",
        "bot",
        "vdash",
        "bot",
        "l",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "gamma",
        "delta",
        "vdash",
        "bot",
        "gamma",
        "bot",
        "r",
        "frac",
        "delta",
        "b_",
        "b_",
        "vdash",
        "gamma",
        "delta",
        "b_ot",
        "b_",
        "vdash",
        "gamma",
        "ot",
        "l",
        "qquad",
        "frac",
        "delta_",
        "vdash",
        "b_",
        "gamma_",
        "qquad",
        "delta_",
        "vdash",
        "b_",
        "gamma_",
        "delta_",
        "delta_",
        "vdash",
        "b_ot",
        "b_",
        "gamma_",
        "gamma_",
        "ot",
        "r",
        "frac",
        "delta_",
        "b_",
        "vdash",
        "gamma_",
        "qquad",
        "delta_",
        "b_",
        "vdash",
        "gamma_",
        "delta_",
        "delta_",
        "b_lpar",
        "b_",
        "vdash",
        "gamma_",
        "gamma_",
        "lpar",
        "l",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "b_",
        "b_",
        "gamma",
        "delta",
        "vdash",
        "b_lpar",
        "b_",
        "gamma",
        "lpar",
        "r",
        "additive",
        "rule",
        "frac",
        "delta",
        "zero",
        "vdash",
        "gamma",
        "zero",
        "l",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "top",
        "gamma",
        "top",
        "r",
        "frac",
        "delta",
        "b_i",
        "vdash",
        "gamma",
        "delta",
        "b_amp",
        "b_",
        "vdash",
        "gamma",
        "amp",
        "l",
        "i",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "b_",
        "gamma",
        "qquad",
        "delta",
        "vdash",
        "b_",
        "gamma",
        "delta",
        "vdash",
        "b_amp",
        "b_",
        "gamma",
        "amp",
        "r",
        "frac",
        "delta",
        "b_",
        "vdash",
        "gamma",
        "qquad",
        "delta",
        "b_",
        "vdash",
        "gamma",
        "delta",
        "b_oplus",
        "b_",
        "vdash",
        "gamma",
        "oplus",
        "l",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "b_i",
        "gamma",
        "delta",
        "vdash",
        "b_oplus",
        "b_",
        "gamma",
        "oplus",
        "r",
        "i",
        "quantifier",
        "rule",
        "frac",
        "delta",
        "b",
        "tx",
        "vdash",
        "gamma",
        "delta",
        "forall",
        "xb",
        "vdash",
        "gamma",
        "forall",
        "l",
        "qquad",
        "frac",
        "delta",
        "vdash",
        "b",
        "yx",
        "gamma",
        "delta",
        "vdash",
        "forall",
        "xb",
        "gamma",
        "forall",
        "r",
        "frac",
        "delta",
        "vdash",
        "b",
        "tx",
        "gamma",
        "delta",
        "vdash",
        "exists",
        "xb",
        "gamma",
        "exists",
        "r",
        "qquad",
        "frac",
        "delta",
        "b",
        "yx",
        "vdash",
        "gamma",
        "delta",
        "exists",
        "xb",
        "vdash",
        "gamma",
        "exists",
        "l",
        "exponential",
        "rule",
        "frac",
        "delta",
        "vdash",
        "gamma",
        "delta",
        "bang",
        "b",
        "vdash",
        "gamma",
        "bang",
        "w",
        "quad",
        "frac",
        "delta",
        "bang",
        "b",
        "bang",
        "b",
        "vdash",
        "gamma",
        "delta",
        "bang",
        "b",
        "vdash",
        "gamma",
        "bang",
        "c",
        "quad",
        "frac",
        "delta",
        "b",
        "vdash",
        "gamma",
        "delta",
        "bang",
        "b",
        "vdash",
        "gamma",
        "bang",
        "quad",
        "frac",
        "bangdelta",
        "vdash",
        "b",
        "questgamma",
        "bangdelta",
        "vdash",
        "bang",
        "b",
        "questgamma",
        "bang",
        "r",
        "frac",
        "delta",
        "vdash",
        "gamma",
        "delta",
        "vdash",
        "quest",
        "b",
        "gamma",
        "quest",
        "w",
        "quad",
        "frac",
        "delta",
        "vdash",
        "quest",
        "b",
        "quest",
        "b",
        "gamma",
        "delta",
        "vdash",
        "quest",
        "b",
        "gamma",
        "quest",
        "c",
        "quad",
        "frac",
        "delta",
        "vdash",
        "b",
        "gamma",
        "delta",
        "vdash",
        "quest",
        "b",
        "gamma",
        "quest",
        "quad",
        "frac",
        "bangdelta",
        "b",
        "vdash",
        "questgamma",
        "bangdelta",
        "quest",
        "b",
        "vdash",
        "questgamma",
        "quest",
        "l",
        "notice",
        "rule",
        "weakening",
        "contraction",
        "available",
        "formula",
        "marked",
        "exponential",
        "bang",
        "left",
        "quest",
        "right",
        "sequent",
        "quest",
        "r",
        "bang",
        "l",
        "rule",
        "often",
        "called",
        "dereliction",
        "rule",
        "quest",
        "l",
        "bang",
        "r",
        "rule",
        "often",
        "called",
        "promotion",
        "rule",
        "similar",
        "sequent",
        "calculus",
        "rule",
        "used",
        "treatment",
        "s",
        "modal",
        "logic",
        "ono",
        "usual",
        "proviso",
        "forall",
        "right",
        "exists",
        "left",
        "introduction",
        "rule",
        "assumed",
        "particular",
        "variable",
        "y",
        "must",
        "free",
        "formula",
        "lower",
        "sequent",
        "inference",
        "rule",
        "quantification",
        "assumed",
        "firstorder",
        "girard",
        "presented",
        "higherorder",
        "version",
        "linear",
        "logic",
        "paper",
        "cut",
        "rule",
        "eliminated",
        "completeness",
        "still",
        "maintained",
        "dually",
        "init",
        "rule",
        "also",
        "eliminated",
        "well",
        "except",
        "occurrence",
        "init",
        "involving",
        "atomic",
        "formula",
        "focused",
        "proof",
        "important",
        "normal",
        "form",
        "theorem",
        "structure",
        "cutfree",
        "proof",
        "provided",
        "andreoli",
        "classified",
        "nonatomic",
        "formula",
        "asynchronous",
        "toplevel",
        "logical",
        "connective",
        "top",
        "bot",
        "lpar",
        "quest",
        "forall",
        "synchronous",
        "toplevel",
        "logical",
        "connective",
        "oplus",
        "otimes",
        "bang",
        "exists",
        "viewing",
        "proof",
        "search",
        "computational",
        "model",
        "consider",
        "inference",
        "rule",
        "transform",
        "sequent",
        "conclusion",
        "premise",
        "result",
        "see",
        "formula",
        "sequent",
        "agent",
        "may",
        "act",
        "independently",
        "concert",
        "others",
        "environment",
        "action",
        "agent",
        "determined",
        "reading",
        "introduction",
        "rule",
        "bottomup",
        "asynchronous",
        "formula",
        "occurs",
        "right",
        "sequent",
        "evolve",
        "without",
        "affecting",
        "provability",
        "without",
        "interacting",
        "context",
        "ie",
        "corresponding",
        "introduction",
        "rule",
        "invertible",
        "example",
        "agent",
        "b",
        "lpar",
        "c",
        "becomes",
        "applying",
        "lpar",
        "right",
        "introduction",
        "rule",
        "two",
        "agent",
        "b",
        "c",
        "working",
        "parallel",
        "similarly",
        "agent",
        "b",
        "amp",
        "c",
        "yield",
        "applying",
        "right",
        "introduction",
        "rule",
        "two",
        "different",
        "identical",
        "world",
        "sequents",
        "except",
        "b",
        "one",
        "world",
        "c",
        "hand",
        "view",
        "synchronous",
        "formula",
        "agent",
        "whose",
        "evolution",
        "determined",
        "reading",
        "corresponding",
        "rightintroduction",
        "rule",
        "bottom",
        "possible",
        "provable",
        "sequent",
        "evolve",
        "nonprovable",
        "sequent",
        "example",
        "applying",
        "oplus",
        "rightintroduction",
        "rule",
        "also",
        "instance",
        "inference",
        "rule",
        "depend",
        "detail",
        "context",
        "formula",
        "example",
        "success",
        "right",
        "introduction",
        "rule",
        "requires",
        "surrounding",
        "context",
        "empty",
        "success",
        "otimes",
        "right",
        "introduction",
        "rule",
        "depends",
        "agent",
        "surrounding",
        "context",
        "divided",
        "two",
        "context",
        "thus",
        "evolution",
        "agent",
        "depends",
        "synchronizing",
        "part",
        "context",
        "consider",
        "onesided",
        "sequent",
        "calculus",
        "presentation",
        "linear",
        "logic",
        "introduction",
        "rule",
        "rightintroduction",
        "rule",
        "given",
        "classification",
        "connective",
        "possible",
        "show",
        "proof",
        "search",
        "structured",
        "following",
        "phase",
        "without",
        "loss",
        "completeness",
        "asynchronous",
        "phase",
        "occurs",
        "asynchronous",
        "formula",
        "present",
        "sequent",
        "phase",
        "rightintroduction",
        "rule",
        "applied",
        "bottomup",
        "order",
        "asynchronous",
        "formula",
        "synchronous",
        "phase",
        "synchronous",
        "formula",
        "selected",
        "becomes",
        "focus",
        "phase",
        "rightintroduction",
        "rule",
        "applied",
        "bottomup",
        "synchronous",
        "subformula",
        "might",
        "generate",
        "following",
        "figure",
        "present",
        "focusing",
        "proof",
        "system",
        "linear",
        "logic",
        "notice",
        "two",
        "phase",
        "represented",
        "different",
        "arrow",
        "uparrow",
        "denotes",
        "asynchronous",
        "phase",
        "downarrow",
        "denotes",
        "synchronous",
        "phase",
        "also",
        "sequents",
        "divided",
        "three",
        "zone",
        "zone",
        "separated",
        "either",
        "semicolon",
        "downarrow",
        "particular",
        "left",
        "uparrow",
        "downarrow",
        "two",
        "zone",
        "zone",
        "written",
        "psi",
        "denotes",
        "set",
        "formula",
        "used",
        "number",
        "time",
        "proof",
        "sequent",
        "zone",
        "written",
        "delta",
        "denotes",
        "multiset",
        "formula",
        "zone",
        "right",
        "uparrow",
        "also",
        "multiset",
        "formula",
        "zone",
        "right",
        "downarrow",
        "single",
        "formula",
        "possible",
        "impose",
        "arbitrary",
        "order",
        "formula",
        "right",
        "uparrow",
        "since",
        "introduction",
        "asynchronous",
        "formula",
        "done",
        "order",
        "atom",
        "given",
        "polarity",
        "figure",
        "a",
        "stand",
        "positive",
        "atom",
        "negation",
        "a",
        "stand",
        "negative",
        "atom",
        "proof",
        "built",
        "inference",
        "rule",
        "called",
        "focused",
        "proof",
        "completeness",
        "focused",
        "proof",
        "linear",
        "logic",
        "proved",
        "andreoli",
        "asynchronous",
        "phase",
        "frac",
        "up",
        "psi",
        "delta",
        "l",
        "up",
        "psi",
        "delta",
        "bot",
        "l",
        "bot",
        "qquad",
        "frac",
        "up",
        "psi",
        "f",
        "delta",
        "l",
        "up",
        "psi",
        "delta",
        "quest",
        "f",
        "l",
        "quest",
        "frac",
        "up",
        "psi",
        "delta",
        "top",
        "l",
        "top",
        "qquad",
        "frac",
        "up",
        "psi",
        "delta",
        "f",
        "yx",
        "l",
        "up",
        "psi",
        "delta",
        "forall",
        "xf",
        "l",
        "forall",
        "frac",
        "up",
        "psi",
        "delta",
        "f_",
        "f_",
        "l",
        "up",
        "psi",
        "delta",
        "f_lpar",
        "f_",
        "l",
        "lpar",
        "qquad",
        "frac",
        "up",
        "psi",
        "delta",
        "f_",
        "l",
        "quad",
        "up",
        "psi",
        "delta",
        "f_",
        "l",
        "up",
        "psi",
        "delta",
        "f_amp",
        "f_",
        "l",
        "amp",
        "frac",
        "up",
        "psi",
        "delta",
        "f",
        "l",
        "up",
        "psi",
        "delta",
        "f",
        "l",
        "ruparrow",
        "text",
        "provided",
        "f",
        "asynchronous",
        "synchronous",
        "phase",
        "frac",
        "down",
        "psi",
        "cdot",
        "one",
        "one",
        "qquad",
        "frac",
        "down",
        "psi",
        "delta_",
        "f_",
        "quad",
        "down",
        "psi",
        "delta_",
        "f_",
        "down",
        "psi",
        "delta_",
        "delta_",
        "f_ot",
        "f_",
        "ot",
        "qquad",
        "frac",
        "up",
        "psi",
        "cdot",
        "f",
        "down",
        "psi",
        "cdot",
        "bang",
        "f",
        "bang",
        "frac",
        "down",
        "psi",
        "delta",
        "f_i",
        "down",
        "psi",
        "delta",
        "f_oplus",
        "f_",
        "oplus_i",
        "qquad",
        "frac",
        "down",
        "psi",
        "delta",
        "f",
        "tx",
        "down",
        "psi",
        "delta",
        "exists",
        "xf",
        "exists",
        "frac",
        "up",
        "psi",
        "delta",
        "f",
        "down",
        "psi",
        "delta",
        "f",
        "rdownarrow",
        "text",
        "provided",
        "f",
        "either",
        "asynchronous",
        "atom",
        "identity",
        "decide",
        "rule",
        "frac",
        "down",
        "psi",
        "a",
        "perp",
        "i_",
        "qquad",
        "frac",
        "down",
        "psi",
        "cdot",
        "a",
        "perp",
        "i_",
        "text",
        "text",
        "atom",
        "frac",
        "down",
        "psi",
        "delta",
        "f",
        "up",
        "psi",
        "delta",
        "f",
        "cdot",
        "d_",
        "qquad",
        "frac",
        "down",
        "psi",
        "delta",
        "f",
        "up",
        "psi",
        "f",
        "delta",
        "cdot",
        "d_",
        "text",
        "f",
        "text",
        "positive",
        "formula",
        "focused",
        "proof",
        "system",
        "also",
        "designed",
        "classical",
        "intuitionistic",
        "logic",
        "danos",
        "et",
        "al",
        "laurent",
        "et",
        "al",
        "liang",
        "miller",
        "proof",
        "net",
        "proof",
        "presented",
        "using",
        "sequent",
        "calculus",
        "contain",
        "lot",
        "detail",
        "sometimes",
        "uninteresting",
        "consider",
        "example",
        "many",
        "uninterestingly",
        "different",
        "way",
        "form",
        "proof",
        "vdash",
        "gamma",
        "a_lpar",
        "a_",
        "ldots",
        "a_",
        "n",
        "lpar",
        "a_n",
        "derivation",
        "vdash",
        "gamma",
        "a_",
        "a_",
        "ldots",
        "a_n",
        "unpleasant",
        "fact",
        "derives",
        "sequential",
        "nature",
        "proof",
        "sequent",
        "calculus",
        "want",
        "apply",
        "set",
        "s",
        "n",
        "rule",
        "different",
        "part",
        "sequent",
        "apply",
        "one",
        "step",
        "even",
        "interfere",
        "must",
        "sequentialize",
        "ie",
        "choose",
        "linear",
        "order",
        "s",
        "apply",
        "rule",
        "n",
        "step",
        "according",
        "order",
        "natural",
        "question",
        "arises",
        "representation",
        "proof",
        "abstract",
        "uninteresting",
        "detail",
        "similar",
        "question",
        "answered",
        "positively",
        "case",
        "intuitionistic",
        "sequent",
        "calculus",
        "mean",
        "known",
        "natural",
        "deduction",
        "via",
        "curryhoward",
        "correspondence",
        "howard",
        "strong",
        "connection",
        "computational",
        "device",
        "known",
        "lambda",
        "calculus",
        "linear",
        "logic",
        "succinct",
        "representation",
        "proof",
        "given",
        "proof",
        "net",
        "graphlike",
        "structure",
        "enjoy",
        "particularly",
        "good",
        "property",
        "mll",
        "fragment",
        "logic",
        "first",
        "step",
        "towards",
        "representation",
        "convert",
        "sequent",
        "calculus",
        "system",
        "using",
        "involutivity",
        "negation",
        "onesided",
        "system",
        "sequents",
        "form",
        "vdash",
        "gamma",
        "consequence",
        "number",
        "rule",
        "reduced",
        "since",
        "leftintroduction",
        "rule",
        "keep",
        "expressive",
        "power",
        "provability",
        "stay",
        "sequent",
        "calculus",
        "proof",
        "mll",
        "one",
        "inductively",
        "associate",
        "proof",
        "net",
        "conclusion",
        "follows",
        "proof",
        "reduced",
        "axiom",
        "rule",
        "associate",
        "axiom",
        "link",
        "proof",
        "obtained",
        "applying",
        "cut",
        "rule",
        "two",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "two",
        "proof",
        "combine",
        "using",
        "cut",
        "link",
        "proof",
        "obtained",
        "applying",
        "tensor",
        "rule",
        "two",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "two",
        "proof",
        "combine",
        "using",
        "tensor",
        "link",
        "proof",
        "obtained",
        "applying",
        "par",
        "rule",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "proof",
        "add",
        "par",
        "link",
        "properly",
        "formalized",
        "using",
        "hypergraphs",
        "formula",
        "node",
        "link",
        "oriented",
        "hyperedges",
        "hypothesis",
        "conclusion",
        "formally",
        "define",
        "proof",
        "net",
        "hypergraph",
        "inductively",
        "built",
        "sequent",
        "calculus",
        "derivation",
        "mll",
        "notice",
        "quite",
        "lot",
        "hypergraphs",
        "proof",
        "net",
        "look",
        "proof",
        "net",
        "built",
        "derivation",
        "vdash",
        "gamma",
        "a_lpar",
        "a_",
        "ldots",
        "a_",
        "n",
        "lpar",
        "a_n",
        "obtained",
        "vdash",
        "gamma",
        "a_",
        "a_",
        "ldots",
        "a_n",
        "see",
        "trace",
        "order",
        "application",
        "rule",
        "disappeared",
        "sense",
        "proof",
        "net",
        "equivalence",
        "class",
        "sequent",
        "calculus",
        "derivation",
        "respect",
        "derivation",
        "order",
        "rule",
        "whose",
        "application",
        "commute",
        "suppose",
        "somebody",
        "come",
        "huge",
        "hypergraph",
        "built",
        "axiom",
        "cut",
        "par",
        "tensor",
        "link",
        "claiming",
        "actually",
        "representation",
        "proof",
        "verify",
        "actually",
        "representation",
        "proof",
        "random",
        "structure",
        "performing",
        "correctness",
        "check",
        "challenge",
        "amount",
        "rebuilding",
        "sequential",
        "construction",
        "history",
        "structure",
        "corresponding",
        "derivation",
        "sequent",
        "calculus",
        "seems",
        "first",
        "complex",
        "problem",
        "first",
        "correctness",
        "criterion",
        "mll",
        "proof",
        "net",
        "called",
        "long",
        "trip",
        "criterion",
        "present",
        "girard",
        "original",
        "paper",
        "exponential",
        "well",
        "acc",
        "acyclic",
        "connected",
        "criterion",
        "danos",
        "regnier",
        "found",
        "later",
        "nevertheless",
        "exists",
        "much",
        "efficient",
        "criterion",
        "known",
        "contractibility",
        "due",
        "danos",
        "regnier",
        "recently",
        "reformulated",
        "following",
        "elegant",
        "graph",
        "parsing",
        "criterion",
        "guerrini",
        "martini",
        "masini",
        "hypergraph",
        "proof",
        "net",
        "reduces",
        "singleton",
        "node",
        "net",
        "via",
        "following",
        "graph",
        "reduction",
        "rule",
        "performing",
        "check",
        "naively",
        "take",
        "quadratic",
        "time",
        "application",
        "rule",
        "may",
        "require",
        "entire",
        "lookup",
        "graph",
        "find",
        "redex",
        "need",
        "perform",
        "many",
        "step",
        "hyperlink",
        "graph",
        "linear",
        "time",
        "algorithm",
        "give",
        "guerrini",
        "murawski",
        "ong",
        "another",
        "style",
        "correctness",
        "criterion",
        "mll",
        "proof",
        "net",
        "given",
        "retor\u00e9",
        "quadratic",
        "algorithm",
        "given",
        "mll",
        "proof",
        "net",
        "one",
        "perform",
        "cut",
        "elimination",
        "particularly",
        "clean",
        "way",
        "parallel",
        "nature",
        "cut",
        "eliminated",
        "locally",
        "via",
        "two",
        "simplification",
        "rule",
        "axiom",
        "move",
        "multiplicative",
        "move",
        "actually",
        "computation",
        "rule",
        "proof",
        "net",
        "correctness",
        "criterion",
        "allow",
        "verify",
        "easily",
        "rule",
        "preserve",
        "correctness",
        "consequence",
        "reduction",
        "proof",
        "net",
        "still",
        "come",
        "sequent",
        "calculus",
        "proof",
        "sequent",
        "hence",
        "cut",
        "elimination",
        "mll",
        "proof",
        "net",
        "performed",
        "linear",
        "time",
        "give",
        "simple",
        "elegant",
        "cutelimination",
        "result",
        "mll",
        "proof",
        "net",
        "approach",
        "extended",
        "larger",
        "subset",
        "linear",
        "logic",
        "le",
        "clear",
        "obtain",
        "elegant",
        "result",
        "mll",
        "original",
        "system",
        "proposed",
        "girard",
        "work",
        "mell",
        "example",
        "associating",
        "four",
        "exponential",
        "rule",
        "following",
        "hypergraph",
        "construction",
        "contraction",
        "weakening",
        "dereliction",
        "promotion",
        "introduces",
        "notion",
        "box",
        "sequentialization",
        "mark",
        "around",
        "piece",
        "proof",
        "net",
        "materialized",
        "picture",
        "graph",
        "rectangle",
        "drawn",
        "around",
        "proof",
        "net",
        "conclusion",
        "a",
        "questgamma",
        "construction",
        "associated",
        "graph",
        "reduction",
        "bear",
        "striking",
        "similarity",
        "lambda",
        "calculus",
        "explicit",
        "substitution",
        "first",
        "remarked",
        "di",
        "cosmo",
        "kesner",
        "similar",
        "corresponding",
        "sequent",
        "calculus",
        "rule",
        "parallelization",
        "effect",
        "elegant",
        "mll",
        "properly",
        "carry",
        "graph",
        "reduction",
        "rule",
        "involve",
        "box",
        "local",
        "recover",
        "satisfactory",
        "system",
        "many",
        "proposal",
        "made",
        "starting",
        "one",
        "danos",
        "regnier",
        "want",
        "mention",
        "elegant",
        "approach",
        "guerrini",
        "martini",
        "masini",
        "guerrini",
        "et",
        "al",
        "neatly",
        "show",
        "connection",
        "two",
        "level",
        "proof",
        "system",
        "modal",
        "logic",
        "proper",
        "proof",
        "net",
        "mell",
        "optimal",
        "reduction",
        "lambda",
        "calculus",
        "recent",
        "paper",
        "heijltjes",
        "houston",
        "shown",
        "satisfactory",
        "notion",
        "proof",
        "net",
        "mll",
        "unit",
        "also",
        "allowed",
        "possible",
        "provide",
        "canonical",
        "treatment",
        "additive",
        "connective",
        "even",
        "firstorder",
        "quantification",
        "heijltjes",
        "et",
        "al",
        "proof",
        "net",
        "formula",
        "containing",
        "multiplicative",
        "additive",
        "connective",
        "various",
        "technical",
        "presentation",
        "none",
        "appears",
        "canonical",
        "satisfactory",
        "treatment",
        "proofnetlike",
        "proof",
        "system",
        "currently",
        "topic",
        "active",
        "research",
        "particular",
        "see",
        "hughes",
        "van",
        "glabbeek",
        "hughes",
        "heijltjes",
        "semantics",
        "approaching",
        "semantics",
        "linear",
        "logic",
        "usually",
        "done",
        "along",
        "two",
        "different",
        "path",
        "first",
        "various",
        "semantic",
        "structure",
        "available",
        "used",
        "map",
        "formula",
        "denotation",
        "structure",
        "approach",
        "used",
        "establish",
        "soundness",
        "completeness",
        "various",
        "fragment",
        "linear",
        "logic",
        "novel",
        "semantic",
        "approach",
        "linear",
        "logic",
        "involves",
        "giving",
        "semantics",
        "proof",
        "directly",
        "describe",
        "briefly",
        "two",
        "approach",
        "provide",
        "link",
        "literature",
        "semantics",
        "provability",
        "one",
        "approach",
        "attempting",
        "sound",
        "complete",
        "semantics",
        "fragment",
        "linear",
        "logic",
        "associate",
        "formula",
        "set",
        "context",
        "used",
        "prove",
        "formula",
        "course",
        "collection",
        "may",
        "need",
        "abstract",
        "given",
        "various",
        "closure",
        "property",
        "phase",
        "semantics",
        "girard",
        "provides",
        "one",
        "semantics",
        "us",
        "semantics",
        "made",
        "computer",
        "science",
        "provide",
        "counterexample",
        "tool",
        "help",
        "establish",
        "given",
        "concurrent",
        "system",
        "evolve",
        "another",
        "certain",
        "property",
        "fages",
        "et",
        "al",
        "phase",
        "semantics",
        "also",
        "used",
        "give",
        "semantic",
        "proof",
        "cut",
        "elimination",
        "firstorder",
        "higherorder",
        "version",
        "linear",
        "logic",
        "okada",
        "similarly",
        "kripkestyle",
        "semantics",
        "provided",
        "allwein",
        "dunn",
        "hodas",
        "miller",
        "quantales",
        "certain",
        "kind",
        "partially",
        "ordered",
        "algebraic",
        "structure",
        "also",
        "used",
        "provide",
        "semantic",
        "model",
        "part",
        "linear",
        "logic",
        "early",
        "yetter",
        "semantics",
        "proof",
        "formulasastypes",
        "analogy",
        "popular",
        "fruitful",
        "theoretical",
        "computer",
        "science",
        "logical",
        "system",
        "put",
        "correspondence",
        "typed",
        "computational",
        "device",
        "like",
        "typed",
        "lambda",
        "calculus",
        "associating",
        "proof",
        "formula",
        "program",
        "formula",
        "type",
        "example",
        "proof",
        "tautology",
        "rightarrow",
        "a",
        "corresponds",
        "program",
        "fun",
        "x",
        "x",
        "arightarrow",
        "a",
        "identity",
        "function",
        "object",
        "type",
        "a",
        "constructive",
        "logical",
        "system",
        "intuitionistic",
        "logic",
        "arithmetic",
        "linear",
        "logic",
        "much",
        "importance",
        "attached",
        "proof",
        "point",
        "building",
        "studying",
        "model",
        "proof",
        "get",
        "much",
        "attention",
        "building",
        "studying",
        "model",
        "provability",
        "satisfied",
        "know",
        "formula",
        "provable",
        "really",
        "want",
        "know",
        "computational",
        "content",
        "proof",
        "many",
        "model",
        "linear",
        "logic",
        "proof",
        "proposed",
        "consider",
        "date",
        "simplest",
        "intuitive",
        "construction",
        "one",
        "based",
        "socalled",
        "relational",
        "semantics",
        "kripkestyle",
        "semantics",
        "formula",
        "interpreted",
        "multisets",
        "onesided",
        "sequents",
        "interpreted",
        "tuples",
        "multisets",
        "proof",
        "interpreted",
        "relation",
        "interpretation",
        "sequents",
        "tortora",
        "de",
        "falco",
        "ehrhard",
        "melli\u00e8s",
        "one",
        "want",
        "give",
        "purely",
        "settheoretic",
        "semantics",
        "without",
        "resorting",
        "multisets",
        "possible",
        "mean",
        "coherence",
        "space",
        "set",
        "equipped",
        "special",
        "coherence",
        "relation",
        "originally",
        "shown",
        "girard",
        "interesting",
        "category",
        "theoretical",
        "model",
        "linear",
        "logic",
        "autonomous",
        "category",
        "barr",
        "hypercoherences",
        "ehrhard",
        "another",
        "approach",
        "semantics",
        "proof",
        "given",
        "girard",
        "geometry",
        "interaction",
        "allows",
        "u",
        "obtain",
        "fully",
        "algebraic",
        "characterization",
        "proof",
        "proof",
        "net",
        "one",
        "associate",
        "partial",
        "permutation",
        "matrix",
        "sigma",
        "corresponding",
        "cut",
        "link",
        "proper",
        "matrix",
        "m",
        "corresponding",
        "expression",
        "built",
        "certain",
        "dynamic",
        "algebra",
        "describe",
        "possible",
        "path",
        "inside",
        "proof",
        "net",
        "possible",
        "fully",
        "describe",
        "proof",
        "net",
        "via",
        "execution",
        "formula",
        "mathrm",
        "ex",
        "sigma",
        "sigma",
        "left",
        "sum_i",
        "sigma",
        "right",
        "sigma",
        "mll",
        "case",
        "invariant",
        "normalization",
        "process",
        "nice",
        "connection",
        "result",
        "coming",
        "dataflow",
        "theory",
        "shown",
        "early",
        "work",
        "abramsky",
        "jagadeesan",
        "area",
        "semantics",
        "developed",
        "around",
        "socalled",
        "game",
        "semantics",
        "deserves",
        "special",
        "attention",
        "strong",
        "connection",
        "game",
        "linear",
        "logic",
        "pointed",
        "quite",
        "early",
        "a",
        "blass",
        "fact",
        "two",
        "different",
        "tradition",
        "connecting",
        "logic",
        "game",
        "tradition",
        "dialog",
        "game",
        "dating",
        "back",
        "lorenzen",
        "one",
        "player",
        "attempt",
        "prove",
        "formula",
        "second",
        "player",
        "attempt",
        "refute",
        "possible",
        "provide",
        "mall",
        "dialog",
        "game",
        "completely",
        "symmetric",
        "prover",
        "refuter",
        "delande",
        "et",
        "al",
        "another",
        "tradition",
        "formula",
        "interpreted",
        "game",
        "logical",
        "connective",
        "game",
        "constructor",
        "proof",
        "strategy",
        "describe",
        "player",
        "reacts",
        "opponent",
        "move",
        "imposing",
        "different",
        "restriction",
        "rule",
        "game",
        "one",
        "actually",
        "provide",
        "precise",
        "semantics",
        "technically",
        "fully",
        "abstract",
        "model",
        "various",
        "feature",
        "actual",
        "programming",
        "language",
        "hence",
        "huge",
        "interest",
        "area",
        "past",
        "year",
        "see",
        "example",
        "abramsky",
        "jagadeesan",
        "abramsky",
        "melli\u00e8s",
        "hyland",
        "ong",
        "complexity",
        "given",
        "logic",
        "useful",
        "know",
        "whether",
        "effective",
        "procedure",
        "determine",
        "sentence",
        "logic",
        "provable",
        "decidable",
        "logicie",
        "one",
        "effective",
        "procedure",
        "provabilityis",
        "often",
        "described",
        "complexity",
        "class",
        "characterizes",
        "difficult",
        "perform",
        "decision",
        "procedure",
        "extensive",
        "research",
        "work",
        "dedicated",
        "study",
        "complexity",
        "decidability",
        "issue",
        "several",
        "fragment",
        "propositional",
        "linear",
        "logic",
        "known",
        "mll",
        "provability",
        "npcomplete",
        "kanovich",
        "mall",
        "provability",
        "pspacecomplete",
        "lincoln",
        "et",
        "al",
        "np",
        "pspace",
        "complexity",
        "class",
        "np",
        "subseteq",
        "pspace",
        "surprisingly",
        "may",
        "forget",
        "novelty",
        "linear",
        "logic",
        "lie",
        "way",
        "formula",
        "managed",
        "without",
        "structural",
        "rule",
        "contraction",
        "weakening",
        "result",
        "stay",
        "even",
        "focus",
        "fragment",
        "logic",
        "constant",
        "propositional",
        "variable",
        "allowed",
        "lincoln",
        "winkler",
        "indeed",
        "possible",
        "encode",
        "arbitrary",
        "formula",
        "constantonly",
        "formula",
        "preserving",
        "provability",
        "mell",
        "surprisingly",
        "expressive",
        "logic",
        "example",
        "reachability",
        "problem",
        "petri",
        "net",
        "encoded",
        "mell",
        "gunter",
        "gehlot",
        "problem",
        "equivalent",
        "reachability",
        "problem",
        "vector",
        "addition",
        "system",
        "state",
        "vas",
        "reutenauer",
        "furthermore",
        "decidability",
        "problem",
        "mell",
        "equivalent",
        "reachability",
        "problem",
        "branching",
        "vas",
        "de",
        "groote",
        "et",
        "al",
        "latter",
        "known",
        "nonelementary",
        "lower",
        "bound",
        "lazic",
        "schmitz",
        "thus",
        "mell",
        "turn",
        "decidable",
        "least",
        "towerhard",
        "lazic",
        "schmitz",
        "proof",
        "decidability",
        "mell",
        "given",
        "bimb\u00f3",
        "gap",
        "proof",
        "reported",
        "stra\u00dfburger",
        "proof",
        "undecidability",
        "propositional",
        "linear",
        "logic",
        "published",
        "early",
        "s",
        "lincoln",
        "et",
        "al",
        "lincoln",
        "kanovich",
        "showed",
        "undecidability",
        "result",
        "hold",
        "greatly",
        "reduced",
        "fragment",
        "propositional",
        "linear",
        "logic",
        "machine",
        "checked",
        "proof",
        "undecidability",
        "published",
        "forster",
        "larcheywendling",
        "however",
        "proof",
        "decidability",
        "propositional",
        "linear",
        "logic",
        "also",
        "published",
        "bimb\u00f3",
        "dunn",
        "also",
        "claim",
        "found",
        "mistake",
        "abovementioned",
        "paper",
        "linear",
        "logic",
        "unrestricted",
        "weakening",
        "rule",
        "added",
        "also",
        "known",
        "linear",
        "affine",
        "logic",
        "decidable",
        "kopylov",
        "exponential",
        "space",
        "hard",
        "urquhart",
        "good",
        "overview",
        "complexity",
        "result",
        "surrounding",
        "linear",
        "logic",
        "found",
        "lincoln",
        "computer",
        "science",
        "impact",
        "intuitionistic",
        "logic",
        "first",
        "proposed",
        "early",
        "last",
        "century",
        "presented",
        "challenge",
        "way",
        "traditional",
        "mathematician",
        "supposed",
        "business",
        "us",
        "excluded",
        "middle",
        "proofbycontradiction",
        "considered",
        "suspect",
        "problematic",
        "particularly",
        "presence",
        "infinity",
        "intuitionistic",
        "logic",
        "concern",
        "developed",
        "constructive",
        "mathematics",
        "new",
        "constructive",
        "approach",
        "arisen",
        "topic",
        "topology",
        "algebra",
        "analysis",
        "given",
        "linear",
        "logic",
        "encompasses",
        "dynamic",
        "proof",
        "algorithm",
        "resource",
        "primary",
        "impact",
        "traditional",
        "mathematics",
        "computer",
        "science",
        "overviewing",
        "nature",
        "impact",
        "outline",
        "various",
        "way",
        "logic",
        "generally",
        "used",
        "computer",
        "science",
        "logic",
        "play",
        "different",
        "role",
        "specification",
        "computation",
        "identify",
        "following",
        "broad",
        "different",
        "approach",
        "note",
        "role",
        "felt",
        "influence",
        "linear",
        "logic",
        "computationasmodel",
        "approach",
        "computation",
        "encoded",
        "mathematical",
        "structure",
        "consist",
        "item",
        "node",
        "transition",
        "state",
        "logic",
        "used",
        "externally",
        "make",
        "statement",
        "structure",
        "computation",
        "used",
        "model",
        "logical",
        "expression",
        "intensional",
        "operator",
        "modal",
        "temporal",
        "dynamic",
        "logic",
        "triple",
        "hoare",
        "logic",
        "often",
        "employed",
        "express",
        "proposition",
        "change",
        "state",
        "use",
        "logic",
        "represent",
        "reason",
        "computation",
        "probably",
        "broadly",
        "successful",
        "use",
        "logic",
        "representing",
        "computation",
        "role",
        "logic",
        "felt",
        "little",
        "influence",
        "linear",
        "logic",
        "computationasdeduction",
        "approach",
        "piece",
        "logic",
        "syntax",
        "formula",
        "term",
        "type",
        "proof",
        "used",
        "directly",
        "element",
        "specified",
        "computation",
        "rarefied",
        "setting",
        "two",
        "rather",
        "different",
        "approach",
        "computation",
        "modeled",
        "called",
        "proof",
        "normalization",
        "approach",
        "proof",
        "search",
        "approach",
        "outline",
        "significant",
        "impact",
        "linear",
        "logic",
        "different",
        "setting",
        "proof",
        "normalization",
        "proof",
        "normalization",
        "approach",
        "view",
        "state",
        "computation",
        "proof",
        "term",
        "process",
        "computing",
        "normalization",
        "known",
        "alternatively",
        "beta",
        "reduction",
        "cutelimination",
        "functional",
        "programming",
        "explained",
        "using",
        "proofnormalization",
        "theoretical",
        "basis",
        "martinl\u00f6f",
        "used",
        "justify",
        "design",
        "new",
        "functional",
        "programming",
        "language",
        "eg",
        "abramsky",
        "linear",
        "logic",
        "provides",
        "approach",
        "computational",
        "specification",
        "new",
        "type",
        "new",
        "declarative",
        "mean",
        "statically",
        "understanding",
        "resource",
        "may",
        "used",
        "computation",
        "provided",
        "appealing",
        "mean",
        "formalizing",
        "duality",
        "function",
        "environment",
        "supply",
        "argument",
        "another",
        "area",
        "linear",
        "logic",
        "powerful",
        "theoretical",
        "instrument",
        "optimal",
        "reduction",
        "problem",
        "building",
        "efficient",
        "optimal",
        "interpreter",
        "lambda",
        "calculus",
        "stayed",
        "open",
        "quite",
        "long",
        "time",
        "original",
        "definition",
        "jj",
        "l\u00e9vy",
        "solved",
        "first",
        "time",
        "lamping",
        "via",
        "sophisticated",
        "sharing",
        "graph",
        "implementation",
        "involving",
        "quite",
        "impressive",
        "amount",
        "rule",
        "using",
        "idea",
        "intuition",
        "linear",
        "logic",
        "many",
        "author",
        "reconstructed",
        "lamping",
        "solution",
        "simplifying",
        "leading",
        "rich",
        "theory",
        "connected",
        "geometry",
        "interaction",
        "reading",
        "good",
        "reference",
        "asperti",
        "guerrini",
        "refinement",
        "intuitionistic",
        "logic",
        "provided",
        "linear",
        "logic",
        "duality",
        "linear",
        "logic",
        "provided",
        "setting",
        "one",
        "could",
        "view",
        "function",
        "environment",
        "similar",
        "entity",
        "interact",
        "dually",
        "example",
        "function",
        "type",
        "limp",
        "b",
        "modeled",
        "process",
        "consumes",
        "value",
        "type",
        "a",
        "environment",
        "transforms",
        "value",
        "type",
        "b",
        "linear",
        "logic",
        "implication",
        "equivalent",
        "contrapositive",
        "form",
        "type",
        "b",
        "bot",
        "limp",
        "a",
        "bot",
        "lead",
        "interpreting",
        "function",
        "process",
        "transforms",
        "demand",
        "value",
        "type",
        "b",
        "demand",
        "value",
        "type",
        "a",
        "notice",
        "happen",
        "function",
        "intuitionistic",
        "type",
        "since",
        "example",
        "input",
        "argument",
        "may",
        "vacuous",
        "curien",
        "recent",
        "success",
        "using",
        "game",
        "semantics",
        "model",
        "functional",
        "computation",
        "similarly",
        "related",
        "dual",
        "treatment",
        "function",
        "environment",
        "abramsky",
        "jagadeesan",
        "hyland",
        "ong",
        "finally",
        "mention",
        "area",
        "encoding",
        "computation",
        "proof",
        "normalization",
        "linear",
        "logic",
        "used",
        "provide",
        "typebased",
        "description",
        "polytime",
        "recursive",
        "function",
        "example",
        "m",
        "hofmann",
        "introduced",
        "lambda",
        "calculus",
        "modal",
        "linear",
        "type",
        "extended",
        "function",
        "algebra",
        "bellantoni",
        "cook",
        "higher",
        "type",
        "type",
        "based",
        "linear",
        "logic",
        "also",
        "used",
        "within",
        "functional",
        "program",
        "see",
        "guzman",
        "hudak",
        "wadler",
        "proof",
        "search",
        "proof",
        "search",
        "approach",
        "view",
        "state",
        "computation",
        "sequent",
        "structured",
        "collection",
        "formula",
        "process",
        "computing",
        "process",
        "searching",
        "proof",
        "sequent",
        "change",
        "take",
        "place",
        "sequents",
        "capture",
        "dynamic",
        "computation",
        "view",
        "computation",
        "generally",
        "read",
        "inference",
        "rule",
        "bottom",
        "ie",
        "transformation",
        "conclusion",
        "premise",
        "logic",
        "programming",
        "explained",
        "using",
        "proof",
        "search",
        "theoretical",
        "basis",
        "linear",
        "logic",
        "provides",
        "approach",
        "computational",
        "specification",
        "new",
        "combinators",
        "building",
        "logic",
        "program",
        "new",
        "mean",
        "capture",
        "rich",
        "dynamic",
        "new",
        "declarative",
        "approach",
        "specifying",
        "concurrent",
        "computation",
        "see",
        "miller",
        "overview",
        "linear",
        "logic",
        "programming",
        "language",
        "completeness",
        "focusing",
        "proof",
        "system",
        "used",
        "provide",
        "declarative",
        "explanation",
        "part",
        "operational",
        "semantics",
        "logic",
        "programming",
        "within",
        "linear",
        "logic",
        "consider",
        "example",
        "subset",
        "l",
        "formula",
        "linear",
        "logic",
        "built",
        "connective",
        "top",
        "limp",
        "rightarrow",
        "forall",
        "notice",
        "one",
        "add",
        "bot",
        "list",
        "possible",
        "encode",
        "connective",
        "linear",
        "logic",
        "possible",
        "see",
        "cutfree",
        "proof",
        "search",
        "l",
        "defined",
        "phase",
        "given",
        "sequent",
        "gamma",
        "delta",
        "vdash",
        "g",
        "gamma",
        "set",
        "formula",
        "contracted",
        "weakened",
        "delta",
        "multiset",
        "formula",
        "contracted",
        "weakened",
        "g",
        "goal",
        "formula",
        "single",
        "formula",
        "l",
        "proof",
        "search",
        "proceeds",
        "follows",
        "g",
        "nonatomic",
        "right",
        "introduction",
        "rule",
        "used",
        "conclude",
        "sequent",
        "given",
        "set",
        "connective",
        "right",
        "rule",
        "invertible",
        "goalreduction",
        "phase",
        "corresponds",
        "exactly",
        "asynchronous",
        "phase",
        "focused",
        "proof",
        "g",
        "atomic",
        "proof",
        "search",
        "proceeds",
        "deciding",
        "single",
        "formula",
        "lefthand",
        "context",
        "formula",
        "chosen",
        "focus",
        "leftintroduction",
        "rule",
        "applied",
        "formula",
        "positive",
        "subformulas",
        "arise",
        "backchaining",
        "phase",
        "corresponds",
        "asynchronous",
        "phase",
        "focused",
        "proof",
        "construction",
        "formally",
        "various",
        "phase",
        "described",
        "using",
        "following",
        "inference",
        "rule",
        "new",
        "sequent",
        "arrow",
        "introduced",
        "arrow",
        "labeled",
        "formula",
        "result",
        "leftintroduction",
        "rule",
        "notice",
        "rule",
        "leftintroduction",
        "limp",
        "requires",
        "splitting",
        "delta",
        "context",
        "two",
        "part",
        "delta_",
        "delta_",
        "reading",
        "rule",
        "bottom",
        "course",
        "n",
        "splittings",
        "context",
        "n",
        "ge",
        "distinct",
        "formula",
        "syntactic",
        "variable",
        "a",
        "inference",
        "rule",
        "range",
        "atomic",
        "formula",
        "goal",
        "reduction",
        "phase",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "top",
        "top",
        "r",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "b",
        "qquad",
        "gamma",
        "delta",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "amp",
        "c",
        "amp",
        "r",
        "frac",
        "gamma",
        "delta",
        "b",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "limp",
        "c",
        "limp",
        "r",
        "qquad",
        "frac",
        "gamma",
        "b",
        "delta",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "rightarrow",
        "c",
        "rightarrow",
        "r",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "b",
        "yx",
        "gamma",
        "delta",
        "vdash",
        "forall",
        "x",
        "b",
        "forall",
        "r",
        "backchaining",
        "phase",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "d_",
        "gamma",
        "delta",
        "lvdash",
        "d_amp",
        "d_",
        "amp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "d_",
        "gamma",
        "delta",
        "lvdash",
        "d_amp",
        "d_",
        "amp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "tx",
        "gamma",
        "delta",
        "lvdash",
        "forall_",
        "tau",
        "xd",
        "forall",
        "l",
        "frac",
        "gamma",
        "delta_",
        "vdash",
        "g",
        "quad",
        "gamma",
        "delta_",
        "lvdash",
        "gamma",
        "delta_",
        "delta_",
        "lvdash",
        "glimp",
        "limp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "cdot",
        "vdash",
        "g",
        "quad",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "lvdash",
        "grightarrow",
        "rightarrow",
        "l",
        "identity",
        "decide",
        "rule",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "vdash",
        "textit",
        "decide",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "vdash",
        "textit",
        "decide",
        "qquad",
        "frac",
        "gamma",
        "cdot",
        "lvdash",
        "textit",
        "init",
        "linear",
        "logic",
        "restricted",
        "l",
        "viewed",
        "linear",
        "logic",
        "programming",
        "language",
        "consequence",
        "serve",
        "specification",
        "language",
        "computational",
        "system",
        "role",
        "also",
        "occupied",
        "say",
        "petri",
        "net",
        "process",
        "calculus",
        "lambda",
        "calculus",
        "etc",
        "given",
        "linear",
        "logic",
        "proof",
        "theory",
        "various",
        "kind",
        "semantics",
        "broad",
        "avenue",
        "reasoning",
        "computation",
        "specified",
        "l",
        "provided",
        "metatheory",
        "linear",
        "logic",
        "given",
        "sequent",
        "calculus",
        "linear",
        "logic",
        "us",
        "multisets",
        "formula",
        "proof",
        "search",
        "directly",
        "encode",
        "multiset",
        "rewriting",
        "since",
        "many",
        "computation",
        "naturally",
        "seen",
        "multiset",
        "rewriting",
        "possible",
        "make",
        "numerous",
        "connection",
        "linear",
        "logic",
        "petri",
        "net",
        "gunter",
        "gehlot",
        "process",
        "calculus",
        "andreoli",
        "pareschi",
        "kobayashi",
        "et",
        "al",
        "miller",
        "security",
        "protocol",
        "cervesato",
        "et",
        "al",
        "miller",
        "variation",
        "different",
        "treatment",
        "modality",
        "one",
        "us",
        "traditional",
        "sequent",
        "calculus",
        "presentation",
        "exponential",
        "canonical",
        "following",
        "sense",
        "introduce",
        "another",
        "copy",
        "exponential",
        "say",
        "bang",
        "quest",
        "rule",
        "original",
        "one",
        "way",
        "prove",
        "bang",
        "equivalent",
        "bang",
        "quest",
        "quest",
        "connective",
        "easily",
        "established",
        "various",
        "application",
        "noncanonical",
        "exponential",
        "found",
        "danos",
        "et",
        "al",
        "nigam",
        "miller",
        "although",
        "decidability",
        "mell",
        "currently",
        "debated",
        "bimb\u00f3",
        "stra\u00dfburger",
        "extending",
        "mll",
        "three",
        "pair",
        "bang",
        "quest",
        "yield",
        "logic",
        "undecidable",
        "chaudhuri",
        "martini",
        "masini",
        "describe",
        "sequent",
        "proof",
        "system",
        "exponential",
        "canonical",
        "fact",
        "cutelimination",
        "make",
        "proof",
        "classical",
        "intuitionistic",
        "logic",
        "grow",
        "enormous",
        "size",
        "analyzed",
        "term",
        "application",
        "contraction",
        "rule",
        "proof",
        "system",
        "proof",
        "system",
        "introduce",
        "restriction",
        "contraction",
        "possible",
        "design",
        "new",
        "logic",
        "proof",
        "system",
        "cutelimination",
        "muchreduced",
        "complexity",
        "example",
        "elementary",
        "linear",
        "logic",
        "ell",
        "obtained",
        "replacing",
        "bang",
        "quest",
        "introduction",
        "single",
        "rule",
        "introducing",
        "bang",
        "quest",
        "time",
        "consequence",
        "ell",
        "encode",
        "kalmar",
        "elementary",
        "function",
        "computable",
        "time",
        "bounded",
        "tower",
        "exponential",
        "fixed",
        "height",
        "girard",
        "baillot",
        "still",
        "variation",
        "inference",
        "rule",
        "exponential",
        "studied",
        "example",
        "light",
        "linear",
        "logic",
        "girard",
        "soft",
        "linear",
        "logic",
        "lafont",
        "characterize",
        "function",
        "computable",
        "polynomial",
        "time",
        "see",
        "also",
        "baillot",
        "terui",
        "noncommutative",
        "linear",
        "logic",
        "linear",
        "logic",
        "reject",
        "universal",
        "application",
        "two",
        "structural",
        "rule",
        "weakening",
        "contraction",
        "allows",
        "unrestricted",
        "use",
        "structural",
        "rule",
        "called",
        "exchange",
        "sequent",
        "calculus",
        "universally",
        "employ",
        "exchange",
        "rule",
        "sequents",
        "whose",
        "left",
        "right",
        "context",
        "list",
        "order",
        "formula",
        "within",
        "context",
        "becomes",
        "expressive",
        "element",
        "logic",
        "case",
        "multiplicative",
        "disjunction",
        "conjunction",
        "become",
        "noncommutative",
        "one",
        "first",
        "logic",
        "reject",
        "three",
        "structural",
        "rule",
        "sequent",
        "calculus",
        "given",
        "lambek",
        "logic",
        "contains",
        "two",
        "implication",
        "contains",
        "neither",
        "negation",
        "exponential",
        "various",
        "paper",
        "proposed",
        "extending",
        "linear",
        "logic",
        "include",
        "noncommutative",
        "feature",
        "present",
        "proposal",
        "seems",
        "canonical",
        "sampling",
        "noncommutative",
        "linear",
        "logic",
        "see",
        "yetter",
        "abrusci",
        "retor\u00e9",
        "abrusci",
        "ruet",
        "guglielmi",
        "stra\u00dfburger",
        "treatment",
        "unbounded",
        "behavior",
        "mall",
        "logic",
        "expressive",
        "novel",
        "logic",
        "also",
        "decidable",
        "thus",
        "capable",
        "capturing",
        "unbounded",
        "behavior",
        "found",
        "say",
        "iteration",
        "recursion",
        "described",
        "addition",
        "exponential",
        "enriches",
        "mall",
        "full",
        "linear",
        "logic",
        "setting",
        "unbounded",
        "behavior",
        "captured",
        "second",
        "approach",
        "extending",
        "mall",
        "capture",
        "unbounded",
        "behavior",
        "involves",
        "addition",
        "least",
        "greatest",
        "fixed",
        "point",
        "operator",
        "logical",
        "connective",
        "directly",
        "mall",
        "order",
        "properly",
        "characterize",
        "fixed",
        "point",
        "either",
        "least",
        "greatest",
        "necessary",
        "inference",
        "rule",
        "fixed",
        "point",
        "higherorder",
        "sense",
        "involve",
        "invariant",
        "extension",
        "mall",
        "also",
        "firstorder",
        "quantification",
        "term",
        "equality",
        "developed",
        "baelde",
        "baelde",
        "miller",
        "baelde",
        "used",
        "provide",
        "prooftheoretic",
        "foundation",
        "model",
        "checking",
        "heath",
        "miller"
    ]
}