{
    "main_text": "Mathematical Models || Realizability Models\n6.3 Realizability Models\nThe set-theoretic model can be criticized on the grounds that it\nmodels the type of functions as the set of all set-theoretic\nfunctions, in spite of the fact that a function in type theory is\nalways computable, whereas a set-theoretic function may not be.\nTo remedy this problem one can instead construct\na realizability model whereby one starts with a set\nof realizers. One can here follow Kleene\u2019s numerical\nrealizability closely where functions are realized by codes for Turing\nmachines. Or alternatively, one can let realizers be terms in a lambda\ncalculus or combinatory logic possibly extended with appropriate\nconstants. Types are then represented by sets of realizers, or often\nas partial equivalence relations on the set of realizers. A partial\nequivalence relation is a convenient way to represent a type with a\nnotion of \u201cequality\u201d on it.\nThere are many variations on the theme of realizability model. Some\nsuch models tacitly\nassume set theory as the metatheory (Aczel 1980, Beeson 1985), whereas others explictly assume a\nconstructive metatheory (Smith 1984).\nRealizability models are also models of the extensional version of\nintuitionistic type theory (Martin-L\u00f6f 1982) which will be presented\nin section 7.1 below.\n",
    "section_title": "6.3 Realizability Models",
    "entry_title": "Intuitionistic Type Theory",
    "hierarchy_title": "Intuitionistic Type Theory || Mathematical Models || Realizability Models",
    "tokenized_text": [
        "mathematical",
        "model",
        "realizability",
        "model",
        "realizability",
        "model",
        "settheoretic",
        "model",
        "criticized",
        "ground",
        "model",
        "type",
        "function",
        "set",
        "settheoretic",
        "function",
        "spite",
        "fact",
        "function",
        "type",
        "theory",
        "always",
        "computable",
        "whereas",
        "settheoretic",
        "function",
        "may",
        "remedy",
        "problem",
        "one",
        "instead",
        "construct",
        "realizability",
        "model",
        "whereby",
        "one",
        "start",
        "set",
        "realizers",
        "one",
        "follow",
        "kleene",
        "numerical",
        "realizability",
        "closely",
        "function",
        "realized",
        "code",
        "turing",
        "machine",
        "alternatively",
        "one",
        "let",
        "realizers",
        "term",
        "lambda",
        "calculus",
        "combinatory",
        "logic",
        "possibly",
        "extended",
        "appropriate",
        "constant",
        "type",
        "represented",
        "set",
        "realizers",
        "often",
        "partial",
        "equivalence",
        "relation",
        "set",
        "realizers",
        "partial",
        "equivalence",
        "relation",
        "convenient",
        "way",
        "represent",
        "type",
        "notion",
        "equality",
        "many",
        "variation",
        "theme",
        "realizability",
        "model",
        "model",
        "tacitly",
        "assume",
        "set",
        "theory",
        "metatheory",
        "aczel",
        "beeson",
        "whereas",
        "others",
        "explictly",
        "assume",
        "constructive",
        "metatheory",
        "smith",
        "realizability",
        "model",
        "also",
        "model",
        "extensional",
        "version",
        "intuitionistic",
        "type",
        "theory",
        "martinl\u00f6f",
        "presented",
        "section"
    ]
}