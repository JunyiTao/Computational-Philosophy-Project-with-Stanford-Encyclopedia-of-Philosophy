{
    "main_text": "Computability Theory || Indexation, the s-m-n Theorem, and Universality\n3.1 Indexation, the s-m-n Theorem, and Universality\n\nThe first significant result in computability theory was\nKleene\u2019s (1936a) proof of the Normal Form Theorem which was\npresented in\n Section 2.2.2.\n As discussed there, the Normal Form Theorem can be understood as\nillustrating how it is possible to associate each \\(k\\)-ary partial\ncomputable function \\(f(\\vec{x})\\) with a natural number \\(e\\) known\nas its index such that \\(f(\\vec{x}) \\simeq \\mu\ns(T_k(e,\\vec{x},s))\\). Such an \\(e\\) can be thought of as a name for a\ncomputer program built up from the basis functions, composition,\nprimitive recursion, and minimization by which the values\n\\(f(\\vec{x})\\) can be computed. This also leads to what is known as an\nindexation of \\(k\\)-ary partial computable functions \n\n\\[\\phi^k_0(\\vec{x}), \\phi^k_1(\\vec{x}), \\phi^k_2(\\vec{x}), \\ldots, \\phi^k_i(\\vec{x}), \\ldots\\]\n\n\nwhere \\(\\phi^k_i(\\vec{x}) \\simeq \\mu s T_k(i,\\vec{x},s)\\). Such an\nenumeration provides a uniform means of listing off all partial\ncomputable functions in the order of their indices. It should be\nnoted, however, that each partial computable function has infinitely\nmany indices. For instance, given a function \\(f:\\mathbb{N}^k\n\\rightarrow \\mathbb{N}\\) computed by \\(\\phi_e(\\vec{x})\\), it is\npossible to define infinitely many extensionally coincident functions\nwith distinct indices \\(\\phi_{e'}(\\vec{x}), \\phi_{e''}(\\vec{x}),\n\\ldots\\)\u2014e.g., by \u201cpadding\u201d the definition encoded\nby \\(e\\) with terms that successively add and then subtract \\(m\\) for\neach \\(m \\in \\mathbb{N}\\). As this yields a definition of an\nextensionally equivalent function, it thus follows that infinitely\nmany of the \\(\\phi^k_i(\\vec{x})\\) will correspond to the same function\nin extension.\n\nA result closely related to the Normal Form Theorem is the following\nwhich is conventionally known as the s-m-n Theorem:\n\n\nTheorem 3.1: For all \\(n,m \\in \\mathbb{N}\\), there is\na primitive recursive function \\(s^m_n(i,x_0,\\ldots,x_{m-1})\\) such\nthat  \n\\[\\phi^n_{s^m_n(i,x_0,\\ldots,x_{m-1})}(y_0,\\ldots,y_{n-1}) \\simeq \\phi^{n+m}_i(x_0,\\ldots,x_{m-1},y_0,\\ldots,y_{n-1})\\]\n\n\n\nHere the function \\(s^m_n(i,\\vec{x})\\) should be thought of as acting\non an index \\(i\\) for an \\(n+m\\)-ary partial computable function\ntogether with values \\(\\vec{x}\\) for the first \\(m\\) of its arguments.\nThis function returns an index for another partial computable function\nwhich computes the \\(n\\)-ary function determined by carrying out\n\\(\\phi^{n+m}_i\\) with the first \\(m\\) of its arguments \\(\\vec{x}\\)\nfixed but retaining the next \\(n\\) variables \\(\\vec{y}\\) as inputs.\nAlthough the formulation of the s-m-n Theorem may at first\nappear technical, its use will be illustrated in the proof of\n Rice\u2019s Theorem (3.4)\n and the\n Recursion Theorem (3.5)\n below.\n\nAnother consequence of the Normal Form Theorem is the following:\n\n\nTheorem 3.2: For every \\(k \\in \\mathbb{N}\\), there is\na \\(k+1\\)-ary partial computable function \\(\\upsilon^k\\) which is\nuniversal in the sense that for all \\(k\\)-ary partial computable\nfunctions \\(f(\\vec{x})\\), there is an \\(i \\in \\mathbb{N}\\) such that\n\\(\\upsilon_k(i,\\vec{x}) \\simeq f(\\vec{x})\\).\n\n\nThis follows immediately from\n Theorem 2.3\n by taking \\(\\upsilon_k(i,\\vec{x}) = u(\\mu s T_k(i,\\vec{x},s))\\) where\n\\(i\\) is such that \\(f(\\vec{x}) \\simeq \\phi^k_i(\\vec{x})\\) in the\nenumeration of \\(k\\)-ary partial computable functions. As\n\\(\\upsilon^k(i,\\vec{x})\\) can be used to compute the values of all\n\\(k\\)-ary partial computable functions uniformly in their index, it is\nconventionally referred to as the \\(k\\)-ary universal partial\ncomputable function.\n\nIt is useful to observe that while we have just defined such a\nfunction for each \\(k\\), it is also possible to define a binary\nfunction \\(\\upsilon(i,x)\\) which treats its second argument as a code\nfor a finite sequence \\(x_0,\\ldots,x_{k-1}\\) and then computes in the\nsame manner as the \\(k\\)-ary universal function so that we have\n\\(\\upsilon(i,\\langle x_0,\\ldots, x_{k-1} \\rangle) \\simeq\n\\upsilon^k(i,x_0,\\ldots,k_{k-1})\\). This provides a means of replacing\nthe prior enumerations of \\(k\\)-ary partial computable functions with\na single enumeration of unary functions  \n\\[\\phi_0(x), \\phi_1(x), \\phi_2(x), \\ldots, \\phi_i(x), \\ldots\\]\n\n\nwhere \\(\\phi_i(\\langle x_0,\\ldots, x_{k-1} \\rangle) \\simeq\n\\upsilon(i,\\langle x_0,\\ldots, x_{k-1} \\rangle) \\simeq\n\\phi^k_i(x_0,\\ldots, x_{k-1})\\).\n\nTogether with\n Theorem 2.3,\n Theorem 3.1 and\n Theorem 3.2\n codify the basic properties of a model of computation which make it\nsuitable for the development of a general theory of computability. In\n Section 2\n such a model has been defined in the form of the partial recursive\nfunctions. But as was discussed briefly at the end of\n Section 2.2.2,\n versions of these results may also be obtained for the other models\nof computation discussed in\n Section 1.6.\n This licenses the freer usage of computer-based analogies and other\nappeals to Church\u2019s Thesis employed in most contemporary\ntreatments of computability theory which will also be judiciously\nemployed in the remainder of this entry.\n",
    "section_title": "3.1 Indexation, the s-m-n Theorem, and Universality",
    "entry_title": "Recursive Functions",
    "hierarchy_title": "Recursive Functions || Computability Theory || Indexation, the s-m-n Theorem, and Universality",
    "tokenized_text": [
        "computability",
        "theory",
        "indexation",
        "smn",
        "theorem",
        "universality",
        "indexation",
        "smn",
        "theorem",
        "universality",
        "first",
        "significant",
        "result",
        "computability",
        "theory",
        "kleene",
        "a",
        "proof",
        "normal",
        "form",
        "theorem",
        "presented",
        "section",
        "discussed",
        "normal",
        "form",
        "theorem",
        "understood",
        "illustrating",
        "possible",
        "associate",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "f",
        "vec",
        "x",
        "natural",
        "number",
        "e",
        "known",
        "index",
        "f",
        "vec",
        "x",
        "simeq",
        "mu",
        "t_k",
        "e",
        "vec",
        "x",
        "e",
        "thought",
        "name",
        "computer",
        "program",
        "built",
        "basis",
        "function",
        "composition",
        "primitive",
        "recursion",
        "minimization",
        "value",
        "f",
        "vec",
        "x",
        "computed",
        "also",
        "lead",
        "known",
        "indexation",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "phik_",
        "vec",
        "x",
        "phik_",
        "vec",
        "x",
        "phik_",
        "vec",
        "x",
        "ldots",
        "phik_i",
        "vec",
        "x",
        "ldots",
        "phik_i",
        "vec",
        "x",
        "simeq",
        "mu",
        "t_k",
        "vec",
        "x",
        "enumeration",
        "provides",
        "uniform",
        "mean",
        "listing",
        "partial",
        "computable",
        "function",
        "order",
        "index",
        "noted",
        "however",
        "partial",
        "computable",
        "function",
        "infinitely",
        "many",
        "index",
        "instance",
        "given",
        "function",
        "f",
        "mathbb",
        "n",
        "k",
        "rightarrow",
        "mathbb",
        "n",
        "computed",
        "phi_e",
        "vec",
        "x",
        "possible",
        "define",
        "infinitely",
        "many",
        "extensionally",
        "coincident",
        "function",
        "distinct",
        "index",
        "phi_",
        "e",
        "vec",
        "x",
        "phi_",
        "e",
        "vec",
        "x",
        "ldots",
        "eg",
        "padding",
        "definition",
        "encoded",
        "e",
        "term",
        "successively",
        "add",
        "subtract",
        "m",
        "in",
        "mathbb",
        "n",
        "yield",
        "definition",
        "extensionally",
        "equivalent",
        "function",
        "thus",
        "follows",
        "infinitely",
        "many",
        "phik_i",
        "vec",
        "x",
        "correspond",
        "function",
        "extension",
        "result",
        "closely",
        "related",
        "normal",
        "form",
        "theorem",
        "following",
        "conventionally",
        "known",
        "smn",
        "theorem",
        "theorem",
        "n",
        "in",
        "mathbb",
        "n",
        "primitive",
        "recursive",
        "function",
        "sm_n",
        "x_",
        "ldots",
        "x_",
        "m",
        "phin_",
        "sm_n",
        "x_",
        "ldots",
        "x_",
        "m",
        "y_",
        "ldots",
        "y_",
        "n",
        "simeq",
        "phi",
        "nm",
        "_i",
        "x_",
        "ldots",
        "x_",
        "m",
        "y_",
        "ldots",
        "y_",
        "n",
        "function",
        "sm_n",
        "vec",
        "x",
        "thought",
        "acting",
        "index",
        "i",
        "nm",
        "ary",
        "partial",
        "computable",
        "function",
        "together",
        "value",
        "vec",
        "x",
        "first",
        "m",
        "argument",
        "function",
        "return",
        "index",
        "another",
        "partial",
        "computable",
        "function",
        "computes",
        "n",
        "ary",
        "function",
        "determined",
        "carrying",
        "phi",
        "nm",
        "_i",
        "first",
        "m",
        "argument",
        "vec",
        "x",
        "fixed",
        "retaining",
        "next",
        "n",
        "variable",
        "vec",
        "input",
        "although",
        "formulation",
        "smn",
        "theorem",
        "may",
        "first",
        "appear",
        "technical",
        "use",
        "illustrated",
        "proof",
        "rice",
        "theorem",
        "recursion",
        "theorem",
        "another",
        "consequence",
        "normal",
        "form",
        "theorem",
        "following",
        "theorem",
        "every",
        "k",
        "in",
        "mathbb",
        "n",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "upsilonk",
        "universal",
        "sense",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "f",
        "vec",
        "x",
        "in",
        "mathbb",
        "n",
        "upsilon_k",
        "vec",
        "x",
        "simeq",
        "f",
        "vec",
        "x",
        "follows",
        "immediately",
        "theorem",
        "taking",
        "upsilon_k",
        "vec",
        "x",
        "u",
        "mu",
        "t_k",
        "vec",
        "x",
        "i",
        "f",
        "vec",
        "x",
        "simeq",
        "phik_i",
        "vec",
        "x",
        "enumeration",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "upsilonk",
        "vec",
        "x",
        "used",
        "compute",
        "value",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "uniformly",
        "index",
        "conventionally",
        "referred",
        "k",
        "ary",
        "universal",
        "partial",
        "computable",
        "function",
        "useful",
        "observe",
        "defined",
        "function",
        "k",
        "also",
        "possible",
        "define",
        "binary",
        "function",
        "upsilon",
        "x",
        "treat",
        "second",
        "argument",
        "code",
        "finite",
        "sequence",
        "x_",
        "ldots",
        "x_",
        "k",
        "computes",
        "manner",
        "k",
        "ary",
        "universal",
        "function",
        "upsilon",
        "langle",
        "x_",
        "ldots",
        "x_",
        "k",
        "rangle",
        "simeq",
        "upsilonk",
        "x_",
        "ldots",
        "k_",
        "k",
        "provides",
        "mean",
        "replacing",
        "prior",
        "enumeration",
        "k",
        "ary",
        "partial",
        "computable",
        "function",
        "single",
        "enumeration",
        "unary",
        "function",
        "phi_",
        "x",
        "phi_",
        "x",
        "phi_",
        "x",
        "ldots",
        "phi_i",
        "x",
        "ldots",
        "phi_i",
        "langle",
        "x_",
        "ldots",
        "x_",
        "k",
        "rangle",
        "simeq",
        "upsilon",
        "langle",
        "x_",
        "ldots",
        "x_",
        "k",
        "rangle",
        "simeq",
        "phik_i",
        "x_",
        "ldots",
        "x_",
        "k",
        "together",
        "theorem",
        "theorem",
        "theorem",
        "codify",
        "basic",
        "property",
        "model",
        "computation",
        "make",
        "suitable",
        "development",
        "general",
        "theory",
        "computability",
        "section",
        "model",
        "defined",
        "form",
        "partial",
        "recursive",
        "function",
        "discussed",
        "briefly",
        "end",
        "section",
        "version",
        "result",
        "may",
        "also",
        "obtained",
        "model",
        "computation",
        "discussed",
        "section",
        "license",
        "freer",
        "usage",
        "computerbased",
        "analogy",
        "appeal",
        "church",
        "thesis",
        "employed",
        "contemporary",
        "treatment",
        "computability",
        "theory",
        "also",
        "judiciously",
        "employed",
        "remainder",
        "entry"
    ]
}