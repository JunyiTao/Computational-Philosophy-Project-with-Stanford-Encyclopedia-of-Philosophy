{
    "main_text": "Abstract Computation and Concrete Computation\n1. Abstract Computation and Concrete Computation\n\nComputation may be studied mathematically by formally defining\ncomputational objects, such as algorithms and Turing machines, and\nproving theorems about their properties. The mathematical theory of\ncomputation is a well-established branch of mathematics. It deals with\ncomputation in the abstract, without regard to physical\nimplementation.\n\nBy contrast, most uses of computation in science and ordinary practice\ndeal with concrete computation: computation in physical systems such\nas computers and brains. Concrete computation is closely related to\nabstract computation: we speak of physical systems as running an\nalgorithm or as implementing a Turing machine, for example. But the\nrelationship between concrete computation and abstract computation is\nnot part of the mathematical theory of computation and requires\nfurther investigation (cf. Curtis-Trudel forthcoming-a, for an argument\nthat abstract and concrete computation cannot be given a unified\naccount).  Questions about concrete computation are the main subject\nof this entry. Nevertheless, it is important to bear in mind some\nbasic mathematical results.\n\nThe most important notion of computation is that of digital\ncomputation, which Alan Turing, Kurt G\u00f6del, Alonzo Church,\nEmil Post, and Stephen Kleene formalized in the 1930s. Their work\ninvestigated the foundations of mathematics. One crucial question was\nwhether first order logic is decidable\u2014whether there is\nan algorithm that determines whether any given first order logical\nformula is a theorem.\n\nTuring (1936\u20137) and, separately, Church (1936) proved that the\nanswer is negative: there is no such algorithm. To show this, they\noffered precise characterizations of the informal notion of an\neffectively computable function. Turing did so in terms of so-called\nTuring machines (TMs)\u2014devices that manipulate discrete symbols\nwritten on a tape in accordance with finitely many instructions. Other\nlogicians did the same thing\u2014they formalized the notion of\neffectively computable function\u2014in terms of other notions, such\nas \u03bb-definable functions and general recursive functions.\n\nTo their surprise, all such notions turned out to be extensionally\nequivalent: any function computable within any of these formalisms is\ncomputable within any of the others. They took this as evidence that\ntheir quest for a precise definition of \u201calgorithm\u201d or\n\u201ceffectively computable function\u201d had been successful. The\nresulting view\u2014that TMs and other equivalent formalisms capture\nthe informal notion of algorithm\u2014is now known as the\nChurch-Turing thesis (more on this in Section 4). The study of\ncomputable functions, made possible by the work of Turing et\nal., is part of the mathematical theory of computation.\n\nThe theoretical significance of Turing et al.\u2019s notion of\ncomputation can hardly be overstated. As G\u00f6del pointed out (in a\nlecture following one by Tarski):\n\nTarski has stressed in his lecture (and I think justly) the great\nimportance of the concept of general recursiveness (or Turing\u2019s\ncomputability). It seems to me that this importance is largely due to\nthe fact that with this concept one has for the first time succeeded\nin giving an absolute definition of an interesting epistemological\nnotion, i.e., one not depending on the formalism chosen. (G\u00f6del\n1946, 84)\n\nTuring also showed that there are universal TMs\u2014machines that\ncan compute any function computable by any other TM. Universal\nmachines do this by executing instructions that encode the behavior of\nthe machine they simulate. Assuming the Church-Turing thesis,\nuniversal TMs can compute any function computable by algorithm. This\nresult is significant for computer science: you don\u2019t need to build\ndifferent computers for different functions; one universal computer\nwill suffice to compute any computable function. Modern digital\ncomputers are universal in this sense: digital computers can compute\nany function computable by algorithm for as long as they have time and\nmemory. (Strictly speaking, a universal machine has an unbounded\nmemory, whereas digital computer memories can be extended but not\nindefinitely, so they are not unbounded.)\n\nThe above result should not be confused with the common claim that\ncomputers can compute anything. This claim is false: another\nimportant result of computability theory is that most functions are\nnot computable by TMs (and hence, by digital computers). TMs\ncompute functions defined over denumerable domains, such as strings of\nletters from a finite alphabet. There are uncountably many such\nfunctions. But there are only countably many TMs; you can enumerate\nTMs by listing each TM specification (which is some finite string).\nSince an uncountable infinity is much larger than a countable one, it\nfollows that TMs (and hence digital computers) can compute only a tiny\nportion of all functions (over denumerable domains, such as natural\nnumbers or strings of letters).\n\nTMs and most modern computers are known as (classical) digital\ncomputers, that is, computers that manipulate strings of discrete,\nunambiguously distinguishable states. Digital computers are sometimes\ncontrasted with analog computers, which manipulate\nvariables that can be continuous. Continuous variables are variables\nthat can change their value continuously over time while taking any\nvalue within a certain interval. Analog computers are used primarily\nto solve certain systems of differential equations (Pour-El 1974,\nRubel 1993).\n\nClassical digital computers may also be contrasted with quantum\ncomputers. Quantum computers manipulate quantum states called\nqudits (usually binary qudits, known as qubits). Unlike the\ncomputational states of digital computers, qudits are not\nunambiguously distinguishable from one another in certain important\nrespects. This entry will focus primarily on classical digital\ncomputation. For more on quantum computation, see the entry on quantum\ncomputing.\n\nThe same objects studied in the mathematical theory of\ncomputation\u2014TMs, algorithms, and so on\u2014are typically said\nto be implemented by concrete physical systems. This poses a problem:\nhow can a concrete, physical system perform a computation when\ncomputation is defined by an abstract mathematical formalism? This may\nbe called the problem of computational implementation.\n\nThe problem of computational implementation may be formulated in a\ncouple of different ways. Platonists interpret the formalisms of\ncomputability theory as defining abstract objects. According to\nthis interpretation, TMs, algorithms, and the like are abstract\nobjects. But how can a concrete physical system implement an\nabstract object, and what precisely is this implementation relation?\nAnti-platonists treat the formalisms of computability theory simply as\nabstract computational descriptions. But how can a concrete\nphysical system satisfy an abstract computational description?\nRegardless of how the problem of computational implementation is\nformulated, solving it requires an account of concrete\ncomputation\u2014an account of what it takes for a physical system to\nperform a given computation.\n\nA closely related problem is that of distinguishing between physical\nsystems such as digital computers, which do compute (if anything\ndoes), and physical systems such as rocks, which do not (or so it\nseems). Unlike computers, ordinary rocks are not sold in computer\nstores and are usually not considered computers. Why? What do\ncomputers have that rocks lack such that computers compute but rocks\ndon\u2019t? (If indeed they don\u2019t?) In other words, what kinds of concrete\nsystems can compute at all? Different answers to these questions give\nrise to different accounts of concrete computation.\n\nQuestions about the nature of concrete computation should not be\nconfused with questions about computational modeling. The dynamical\nevolution of many physical systems may be approximated by\ncomputational models\u2014computer programs that simulate or predict\nthe dynamics or kinematics of some system of interest. The behavior of\nrocks\u2014as well as rivers, ecosystems, and planetary systems,\namong many others\u2014may well be modeled computationally. It does\nnot follow that the modeled systems are computing devices\u2014that\nthey themselves perform computations. Prima facie, only relatively few\nand quite special systems compute. Explaining what makes them\nspecial\u2014or explaining away our feeling that they are\nspecial\u2014is the job of an account of concrete computation.\n",
    "section_title": "1. Abstract Computation and Concrete Computation",
    "entry_title": "Computation in Physical Systems",
    "hierarchy_title": "Computation in Physical Systems || Abstract Computation and Concrete Computation",
    "tokenized_text": [
        "abstract",
        "computation",
        "concrete",
        "computation",
        "abstract",
        "computation",
        "concrete",
        "computation",
        "computation",
        "may",
        "studied",
        "mathematically",
        "formally",
        "defining",
        "computational",
        "object",
        "algorithm",
        "turing",
        "machine",
        "proving",
        "theorem",
        "property",
        "mathematical",
        "theory",
        "computation",
        "wellestablished",
        "branch",
        "mathematics",
        "deal",
        "computation",
        "abstract",
        "without",
        "regard",
        "physical",
        "implementation",
        "contrast",
        "us",
        "computation",
        "science",
        "ordinary",
        "practice",
        "deal",
        "concrete",
        "computation",
        "computation",
        "physical",
        "system",
        "computer",
        "brain",
        "concrete",
        "computation",
        "closely",
        "related",
        "abstract",
        "computation",
        "speak",
        "physical",
        "system",
        "running",
        "algorithm",
        "implementing",
        "turing",
        "machine",
        "example",
        "relationship",
        "concrete",
        "computation",
        "abstract",
        "computation",
        "part",
        "mathematical",
        "theory",
        "computation",
        "requires",
        "investigation",
        "cf",
        "curtistrudel",
        "forthcominga",
        "argument",
        "abstract",
        "concrete",
        "computation",
        "given",
        "unified",
        "account",
        "question",
        "concrete",
        "computation",
        "main",
        "subject",
        "entry",
        "nevertheless",
        "important",
        "bear",
        "mind",
        "basic",
        "mathematical",
        "result",
        "important",
        "notion",
        "computation",
        "digital",
        "computation",
        "alan",
        "turing",
        "kurt",
        "g\u00f6del",
        "alonzo",
        "church",
        "emil",
        "post",
        "stephen",
        "kleene",
        "formalized",
        "s",
        "work",
        "investigated",
        "foundation",
        "mathematics",
        "one",
        "crucial",
        "question",
        "whether",
        "first",
        "order",
        "logic",
        "decidablewhether",
        "algorithm",
        "determines",
        "whether",
        "given",
        "first",
        "order",
        "logical",
        "formula",
        "theorem",
        "turing",
        "separately",
        "church",
        "proved",
        "answer",
        "negative",
        "algorithm",
        "show",
        "offered",
        "precise",
        "characterization",
        "informal",
        "notion",
        "effectively",
        "computable",
        "function",
        "turing",
        "term",
        "socalled",
        "turing",
        "machine",
        "tm",
        "devices",
        "manipulate",
        "discrete",
        "symbol",
        "written",
        "tape",
        "accordance",
        "finitely",
        "many",
        "instruction",
        "logician",
        "thingthey",
        "formalized",
        "notion",
        "effectively",
        "computable",
        "functionin",
        "term",
        "notion",
        "\u03bbdefinable",
        "function",
        "general",
        "recursive",
        "function",
        "surprise",
        "notion",
        "turned",
        "extensionally",
        "equivalent",
        "function",
        "computable",
        "within",
        "formalism",
        "computable",
        "within",
        "others",
        "took",
        "evidence",
        "quest",
        "precise",
        "definition",
        "algorithm",
        "effectively",
        "computable",
        "function",
        "successful",
        "resulting",
        "viewthat",
        "tm",
        "equivalent",
        "formalism",
        "capture",
        "informal",
        "notion",
        "algorithmis",
        "known",
        "churchturing",
        "thesis",
        "section",
        "study",
        "computable",
        "function",
        "made",
        "possible",
        "work",
        "turing",
        "et",
        "al",
        "part",
        "mathematical",
        "theory",
        "computation",
        "theoretical",
        "significance",
        "turing",
        "et",
        "al",
        "notion",
        "computation",
        "hardly",
        "overstated",
        "g\u00f6del",
        "pointed",
        "lecture",
        "following",
        "one",
        "tarski",
        "tarski",
        "stressed",
        "lecture",
        "think",
        "justly",
        "great",
        "importance",
        "concept",
        "general",
        "recursiveness",
        "turing",
        "computability",
        "seems",
        "importance",
        "largely",
        "due",
        "fact",
        "concept",
        "one",
        "first",
        "time",
        "succeeded",
        "giving",
        "absolute",
        "definition",
        "interesting",
        "epistemological",
        "notion",
        "ie",
        "one",
        "depending",
        "formalism",
        "chosen",
        "g\u00f6del",
        "turing",
        "also",
        "showed",
        "universal",
        "tmsmachines",
        "compute",
        "function",
        "computable",
        "tm",
        "universal",
        "machine",
        "executing",
        "instruction",
        "encode",
        "behavior",
        "machine",
        "simulate",
        "assuming",
        "churchturing",
        "thesis",
        "universal",
        "tm",
        "compute",
        "function",
        "computable",
        "algorithm",
        "result",
        "significant",
        "computer",
        "science",
        "need",
        "build",
        "different",
        "computer",
        "different",
        "function",
        "one",
        "universal",
        "computer",
        "suffice",
        "compute",
        "computable",
        "function",
        "modern",
        "digital",
        "computer",
        "universal",
        "sense",
        "digital",
        "computer",
        "compute",
        "function",
        "computable",
        "algorithm",
        "long",
        "time",
        "memory",
        "strictly",
        "speaking",
        "universal",
        "machine",
        "unbounded",
        "memory",
        "whereas",
        "digital",
        "computer",
        "memory",
        "extended",
        "indefinitely",
        "unbounded",
        "result",
        "confused",
        "common",
        "claim",
        "computer",
        "compute",
        "anything",
        "claim",
        "false",
        "another",
        "important",
        "result",
        "computability",
        "theory",
        "function",
        "computable",
        "tm",
        "hence",
        "digital",
        "computer",
        "tm",
        "compute",
        "function",
        "defined",
        "denumerable",
        "domain",
        "string",
        "letter",
        "finite",
        "alphabet",
        "uncountably",
        "many",
        "function",
        "countably",
        "many",
        "tm",
        "enumerate",
        "tm",
        "listing",
        "tm",
        "specification",
        "finite",
        "string",
        "since",
        "uncountable",
        "infinity",
        "much",
        "larger",
        "countable",
        "one",
        "follows",
        "tm",
        "hence",
        "digital",
        "computer",
        "compute",
        "tiny",
        "portion",
        "function",
        "denumerable",
        "domain",
        "natural",
        "number",
        "string",
        "letter",
        "tm",
        "modern",
        "computer",
        "known",
        "classical",
        "digital",
        "computer",
        "computer",
        "manipulate",
        "string",
        "discrete",
        "unambiguously",
        "distinguishable",
        "state",
        "digital",
        "computer",
        "sometimes",
        "contrasted",
        "analog",
        "computer",
        "manipulate",
        "variable",
        "continuous",
        "continuous",
        "variable",
        "variable",
        "change",
        "value",
        "continuously",
        "time",
        "taking",
        "value",
        "within",
        "certain",
        "interval",
        "analog",
        "computer",
        "used",
        "primarily",
        "solve",
        "certain",
        "system",
        "differential",
        "equation",
        "pourel",
        "rubel",
        "classical",
        "digital",
        "computer",
        "may",
        "also",
        "contrasted",
        "quantum",
        "computer",
        "quantum",
        "computer",
        "manipulate",
        "quantum",
        "state",
        "called",
        "qudits",
        "usually",
        "binary",
        "qudits",
        "known",
        "qubits",
        "unlike",
        "computational",
        "state",
        "digital",
        "computer",
        "qudits",
        "unambiguously",
        "distinguishable",
        "one",
        "another",
        "certain",
        "important",
        "respect",
        "entry",
        "focus",
        "primarily",
        "classical",
        "digital",
        "computation",
        "quantum",
        "computation",
        "see",
        "entry",
        "quantum",
        "computing",
        "object",
        "studied",
        "mathematical",
        "theory",
        "computationtms",
        "algorithm",
        "onare",
        "typically",
        "said",
        "implemented",
        "concrete",
        "physical",
        "system",
        "pose",
        "problem",
        "concrete",
        "physical",
        "system",
        "perform",
        "computation",
        "computation",
        "defined",
        "abstract",
        "mathematical",
        "formalism",
        "may",
        "called",
        "problem",
        "computational",
        "implementation",
        "problem",
        "computational",
        "implementation",
        "may",
        "formulated",
        "couple",
        "different",
        "way",
        "platonist",
        "interpret",
        "formalism",
        "computability",
        "theory",
        "defining",
        "abstract",
        "object",
        "according",
        "interpretation",
        "tm",
        "algorithm",
        "like",
        "abstract",
        "object",
        "concrete",
        "physical",
        "system",
        "implement",
        "abstract",
        "object",
        "precisely",
        "implementation",
        "relation",
        "antiplatonists",
        "treat",
        "formalism",
        "computability",
        "theory",
        "simply",
        "abstract",
        "computational",
        "description",
        "concrete",
        "physical",
        "system",
        "satisfy",
        "abstract",
        "computational",
        "description",
        "regardless",
        "problem",
        "computational",
        "implementation",
        "formulated",
        "solving",
        "requires",
        "account",
        "concrete",
        "computationan",
        "account",
        "take",
        "physical",
        "system",
        "perform",
        "given",
        "computation",
        "closely",
        "related",
        "problem",
        "distinguishing",
        "physical",
        "system",
        "digital",
        "computer",
        "compute",
        "anything",
        "physical",
        "system",
        "rock",
        "seems",
        "unlike",
        "computer",
        "ordinary",
        "rock",
        "sold",
        "computer",
        "store",
        "usually",
        "considered",
        "computer",
        "computer",
        "rock",
        "lack",
        "computer",
        "compute",
        "rock",
        "indeed",
        "word",
        "kind",
        "concrete",
        "system",
        "compute",
        "different",
        "answer",
        "question",
        "give",
        "rise",
        "different",
        "account",
        "concrete",
        "computation",
        "question",
        "nature",
        "concrete",
        "computation",
        "confused",
        "question",
        "computational",
        "modeling",
        "dynamical",
        "evolution",
        "many",
        "physical",
        "system",
        "may",
        "approximated",
        "computational",
        "modelscomputer",
        "program",
        "simulate",
        "predict",
        "dynamic",
        "kinematics",
        "system",
        "interest",
        "behavior",
        "rocksas",
        "well",
        "river",
        "ecosystem",
        "planetary",
        "system",
        "among",
        "many",
        "othersmay",
        "well",
        "modeled",
        "computationally",
        "follow",
        "modeled",
        "system",
        "computing",
        "devicesthat",
        "perform",
        "computation",
        "prima",
        "facie",
        "relatively",
        "quite",
        "special",
        "system",
        "compute",
        "explaining",
        "make",
        "specialor",
        "explaining",
        "away",
        "feeling",
        "specialis",
        "job",
        "account",
        "concrete",
        "computation"
    ]
}