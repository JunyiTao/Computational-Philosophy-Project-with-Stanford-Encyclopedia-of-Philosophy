{
    "main_text": "Extensions of TL over linear time || Adding the Next Time operator\n4.1 Adding the Next Time operator\n\nIn linear, unbounded, forward-discrete temporal models \\(\\mathcal{M}=\n\\left\\langle T,\\prec, V \\right\\rangle,\\) where every instant \\(t\\) has\na unique immediate successor \\(s(t),\\) it is natural to add a new\ntemporal operator \\(X\\) (\u201cNeXt Time\u201d or\n\u201cTomorrow\u201d) with\n semantics:[2]\n \n\n\\[\n \\mathcal{M},t \\models X\\varphi \\text{ iff } \\mathcal{M},s(t) \\models \\varphi.\n\\]\n\n\nThat is, \\(X\\varphi\\) is true at a time instant \\(t\\) iff \\(\\varphi\\)\nis true at the immediate successor \\(s(t)\\) of \\(t\\). The Next\nTime operator was already mentioned by Prior (1967, Chapter\nIV.3), but its importance was first fully appreciated in the context\nof LTL.\n\nThe operator \\(X\\) satisfies the K-axiom\n\n(K\\(_{X}\\)) \\(X(\\varphi\n\\to \\psi) \\to (X\\varphi \\to X\\psi);\\) \n\n\nand the functionality axiom\n\n(FUNC) \\(X\\lnot \\varphi\n\\leftrightarrow \\lnot X\\varphi.\\) \n\n\nIt also enables a recursive, fixed point definition of \\(G\\)\n(FP\\(_G\\)), and, on the ordering of the natural numbers, the operators\n\\(X\\) and \\(G\\) satisfy an induction principle (IND). Assuming that\nthe temporal precedence relation \\(\\prec\\) is reflexive, which is a\nstandard assumption in computer science, we get the following\ndefinitions:\n\n(FP\\(_G\\)) \\(G\\varphi\n\\leftrightarrow (\\varphi \\wedge XG\\varphi);\\) \n(IND) \\(\\varphi \\wedge\nG(\\varphi \\rightarrow X\\varphi )\\rightarrow G\\varphi.\\) \n\n\nIn the language with \\(G,H,\\) and \\(X\\):\n\n\\(\\mathbf{L}_{t}(X) = \\mathbf{L}_{t}\\) + K\\(_{X}\\) + FUNC + FP\\(_{G}\\)\n\naxiomatizes completely the temporal logic of linear, unbounded,\nforward-discrete orderings, while \n\n\\(\\mathbf{N}_{t}(X) = \\mathbf{N}_{t}\\) + K\\(_{X}\\) + FUNC + FP\\(_{G}\n\\) + IND\n\naxiomatizes completely the temporal logic of \\(\\left\\langle\n\\mathbf{N},s,\\leq \\right\\rangle,\\) where \\(s(n) = n+1.\\)\n\nA past analogue of \\(X\\), usually denoted \\(Y\\)\n(\u201cYesterday\u201d), can be defined and axiomatized\nlikewise. For more detail, see Goldblatt (1992) and Andr\u00e9ka et\nal. (1995).\n",
    "section_title": "4.1 Adding the Next Time operator",
    "entry_title": "Temporal Logic",
    "hierarchy_title": "Temporal Logic || Extensions of TL over linear time || Adding the Next Time operator",
    "tokenized_text": [
        "extension",
        "tl",
        "linear",
        "time",
        "adding",
        "next",
        "time",
        "operator",
        "adding",
        "next",
        "time",
        "operator",
        "linear",
        "unbounded",
        "forwarddiscrete",
        "temporal",
        "model",
        "mathcal",
        "leftlangle",
        "prec",
        "v",
        "rightrangle",
        "every",
        "instant",
        "t",
        "unique",
        "immediate",
        "successor",
        "natural",
        "add",
        "new",
        "temporal",
        "operator",
        "x",
        "next",
        "time",
        "tomorrow",
        "semantics",
        "mathcal",
        "models",
        "xvarphi",
        "text",
        "iff",
        "mathcal",
        "models",
        "varphi",
        "xvarphi",
        "true",
        "time",
        "instant",
        "t",
        "iff",
        "varphi",
        "true",
        "immediate",
        "successor",
        "t",
        "next",
        "time",
        "operator",
        "already",
        "mentioned",
        "prior",
        "chapter",
        "iv",
        "importance",
        "first",
        "fully",
        "appreciated",
        "context",
        "ltl",
        "operator",
        "x",
        "satisfies",
        "kaxiom",
        "k",
        "_",
        "x",
        "x",
        "varphi",
        "to",
        "psi",
        "to",
        "xvarphi",
        "to",
        "xpsi",
        "functionality",
        "axiom",
        "func",
        "xlnot",
        "varphi",
        "leftrightarrow",
        "lnot",
        "xvarphi",
        "also",
        "enables",
        "recursive",
        "fixed",
        "point",
        "definition",
        "g",
        "fp",
        "_g",
        "ordering",
        "natural",
        "number",
        "operator",
        "x",
        "g",
        "satisfy",
        "induction",
        "principle",
        "ind",
        "assuming",
        "temporal",
        "precedence",
        "relation",
        "prec",
        "reflexive",
        "standard",
        "assumption",
        "computer",
        "science",
        "get",
        "following",
        "definition",
        "fp",
        "_g",
        "gvarphi",
        "leftrightarrow",
        "varphi",
        "wedge",
        "xgvarphi",
        "ind",
        "varphi",
        "wedge",
        "g",
        "varphi",
        "rightarrow",
        "xvarphi",
        "rightarrow",
        "gvarphi",
        "language",
        "g",
        "h",
        "x",
        "mathbf",
        "l",
        "_",
        "x",
        "mathbf",
        "l",
        "_",
        "k",
        "_",
        "x",
        "func",
        "fp",
        "_",
        "g",
        "axiomatizes",
        "completely",
        "temporal",
        "logic",
        "linear",
        "unbounded",
        "forwarddiscrete",
        "ordering",
        "mathbf",
        "n",
        "_",
        "x",
        "mathbf",
        "n",
        "_",
        "k",
        "_",
        "x",
        "func",
        "fp",
        "_",
        "g",
        "ind",
        "axiomatizes",
        "completely",
        "temporal",
        "logic",
        "leftlangle",
        "mathbf",
        "n",
        "leq",
        "rightrangle",
        "n",
        "n",
        "past",
        "analogue",
        "x",
        "usually",
        "denoted",
        "y",
        "yesterday",
        "defined",
        "axiomatized",
        "likewise",
        "detail",
        "see",
        "goldblatt",
        "andr\u00e9ka",
        "et",
        "al"
    ]
}