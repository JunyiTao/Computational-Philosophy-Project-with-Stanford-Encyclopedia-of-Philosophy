{
    "main_text": "Discrete geometries as generators of classical geometry || A prototypical example, using graphs\n3.2 A prototypical example, using graphs\n\nThe starting point is a discrete graph \\(G = \\langle N, C\\rangle\\)\nconsisting of a set \\(N\\) of nodes, \\(n_{i}\\), and a set \\(C\\) of\nconnections, \\(c_{ij}\\), such that no node is connected to itself and\nnodes \\(n_{i}\\) and \\(n_{j}\\) have one connection at most. What seems\nmost obvious is how to define a distance function and in nearly all\nproposals, this is indeed the strategy followed (similar to the\ndefinitions proposed in\n section 2.5):\n\n\n\\(D(n_{i}, n_{j}\\)) = the smallest number of connections that lead\nfrom \\(n_{i}\\) to \\(n_{j}\\). \n\n\nIt is easy to see that the classical properties of a distance function\nare satisfied:\n\n\\(D(n_i, n_i) = 0,\\)\n\\(D(n_i, n_j) = D(n_j, n_i),\\)\n\\(D(n_i, n_j) + D(n_j, n_k) \\ge D(n_i, n_k).\\)\n\n\nAt first sight it is not obvious at all how one should proceed\nfurther, but, if one reads the \\(n_{i}\\) and the \\(c_{ij}\\) as a kind\nof vector, then linear combinations can be formed, where \\(f_{i}\\) and\n\\(g_{ij}\\) are, e.g., natural or rational numbers: \n\\[\nf=\\sum_i f_i n_i \\quad\\mbox{ and }\\quad g=\\sum_{ik} g_{ik}c_{ik}.\n\\]\n\n\nThese two expressions can be read as functions over \\(n_{i}\\) and\n\\(c_{ij}\\). What one needs now is a relation between nodes and\nconnections, so introduce a special function \\(d\\): \n\\[\nd: n_i \\rightarrow \\sum_k c_{ik}.\n\\]\n\n\nIt is quite interesting to see what happens if we extend the function\n\\(d\\) in a linear way so that it can be applied to arbitrary functions\n\\(f\\): \n\\[\ndf = \\sum_i f_i \\sum_k c_{ik}.\n\\]\n\n\nIf we now stipulate that \\(c_{ik} = -c_{ki}\\) (as a kind of vector\nequation, stating that the connections have a direction) then the\nabove expression can be rewritten as follows (take into account that,\nsince no loops are allowed, \\(c_{ii} = 0)\\): \n\\[\ndf = \\frac{1}{2} \\sum_{ik} (f_k-f_i)c_{ik}\n\\]\n\n\nAlthough it is still a long way off, this expression \\(df\\) already\nhas some nice properties that reminds one of a derivative of a\nfunction \\(f\\):\n\nIt is linear: \\(d(f + g) = df + dg\\),\nIf \\(f\\) is a constant function in the sense that at every node\n\\(f_{i}\\) has the same value, then it is immediate that \\(df\\), for\n\\(f\\) constant, is 0,\nIf \\(f\\) is such that at two directly related nodes \\(n_{i}\\) and\n\\(n_{i+1}\\), \\(f_{i+1}\\) = \\(f_{i} + 1\\), in other words, this\nexpresses that \\(f(i) = i\\), then \\(df\\) is 1, where 1 is the function\nrepresented by \\(\\sum_i n_i\\). So the derivative of the identity\nfunction is the constant function 1.\n\n\nHowever, as is easy to check with the above definitions, the product\nrule fails, i.e., \\(d(f\\cdot g)\\) is not equal to \\(df\\cdot g + f\\cdot\ndg\\).\n\nSo, to a certain extent, it is possible to construct a basic form of\ncalculus on discrete graphs. It does require some ingenuity and\ncreative thought to find the \u201cright\u201d counterparts, but\nthis simple example shows that quite a lot of structure can be derived\nfrom a discrete graph. There is actually more. Discrete graphs allow\nfor a nice solution to the dimension problem, that was mentioned in\n section 2.5.\n This is the rough outline of the idea:\n\nConsider a node \\(n_{i}\\), then \\(U_{1}\\) is the set of nodes\n\\(n_{j}\\) such that \\(D(n_{i}, n_{j}) = 1\\), i.e., \\(U_{1}\\) brings\ntogether the closest neighbours of \\(n_{i}\\). Likewise, we can define\n\\(U_{2}\\) as the set of nodes \\(n_{k}\\) such that \\(D(n_{i}, n_{k})\\)\nis at most 2. It follows that \\(U_{n} \\subseteq U_{n+1}\\) and so we\nobtain a nested series of neighbourhoods of \\(n_{i}\\). If one\nunderstands dimension as a measure of the \u201cgrowth\u201d of the\nneighbourhoods, then dimension can be defined as: \n\\[\n\\mbox{Dim} = \\lim_{m\\rightarrow \\infty} \\frac{\\ln \\lvert U_m \\rvert}{\\ln m}\n\\]\n\n\nOne of the interesting features of this definition is that it need not\nbe uniform over the whole graph, for all depends on the choice of the\ninitial node \\(n_{i}\\). But in the case where the graph is\nsufficiently uniform, the dimension will be a constant. Furthermore if\nwe take a classical case, such as 3-dimensional Euclidean space, then\nthe dimensions match. Suppose we have a regular lattice as the\nunderlying graph, then a particular node has a cube as the set of\nnearest neighbours \\(U_{1}\\) consisting of \\(3^{3} = 27\\) points, and\na neighbourhood \\(U_{m}\\) will count \\((m+2)^{3}\\) nodes.\nTherefore \n\\[\n\\mbox{Dim} = \\lim_{m\\rightarrow \\infty} \\frac{\\ln (m+2)^3}{\\ln m} \\quad\\mbox{ or }\\quad\n\\mbox{Dim} = \\lim_{m\\rightarrow \\infty}  3\\cdot\\frac{\\ln (m+2)}{\\ln m}\n\\]\n\n\nSince for \\(m\\) sufficiently large, \\(\\frac{\\ln (m+2)}{\\ln m}\\)\napproximates 1, it follows that \\(\\mbox{Dim} = 3\\). What this shows is\nthat, starting from discrete graphs, we have obtained an extension of\nthe concept of dimension. One may have noticed that this type of\ndefinition is quite similar to some of the definitions used to define\nthe dimension of fractal images.\n\nIn addition, discrete graphs make it possible to handle the anisotropy\nproblem as well. It is sufficient to introduce an element of\nrandomness in the network by, e.g., taking averages over a connected\nset of nodes, to avoid any privileged directions. There are clearly\nsimilarities here with the irregular tiling scheme or the introduction\nof vagueness, but the important distinction is that statistical and\nprobabilistic concepts are (fairly) well understood, whereas the\ntiling problem is, as mentioned, an open problem, and vagueness\nremains a notoriously difficult concept to grasp (see the entry on\n vagueness\n in this encyclopedia).\n",
    "section_title": "3.2 A prototypical example, using graphs",
    "entry_title": "Finitism in Geometry",
    "hierarchy_title": "Finitism in Geometry || Discrete geometries as generators of classical geometry || A prototypical example, using graphs",
    "tokenized_text": [
        "discrete",
        "geometry",
        "generator",
        "classical",
        "geometry",
        "prototypical",
        "example",
        "using",
        "graph",
        "prototypical",
        "example",
        "using",
        "graph",
        "starting",
        "point",
        "discrete",
        "graph",
        "g",
        "langle",
        "n",
        "crangle",
        "consisting",
        "set",
        "n",
        "node",
        "n_",
        "set",
        "c",
        "connection",
        "c_",
        "ij",
        "node",
        "connected",
        "node",
        "n_",
        "n_",
        "j",
        "one",
        "connection",
        "seems",
        "obvious",
        "define",
        "distance",
        "function",
        "nearly",
        "proposal",
        "indeed",
        "strategy",
        "followed",
        "similar",
        "definition",
        "proposed",
        "section",
        "n_",
        "n_",
        "j",
        "smallest",
        "number",
        "connection",
        "lead",
        "n_",
        "n_",
        "j",
        "easy",
        "see",
        "classical",
        "property",
        "distance",
        "function",
        "satisfied",
        "n_i",
        "n_i",
        "n_i",
        "n_j",
        "n_j",
        "n_i",
        "n_i",
        "n_j",
        "n_j",
        "n_k",
        "ge",
        "n_i",
        "n_k",
        "first",
        "sight",
        "obvious",
        "one",
        "proceed",
        "one",
        "read",
        "n_",
        "c_",
        "ij",
        "kind",
        "vector",
        "linear",
        "combination",
        "formed",
        "f_",
        "g_",
        "ij",
        "eg",
        "natural",
        "rational",
        "number",
        "fsum_i",
        "f_i",
        "n_i",
        "quadmbox",
        "quad",
        "gsum_",
        "ik",
        "g_",
        "ik",
        "c_",
        "ik",
        "two",
        "expression",
        "read",
        "function",
        "n_",
        "c_",
        "ij",
        "one",
        "need",
        "relation",
        "node",
        "connection",
        "introduce",
        "special",
        "function",
        "d",
        "n_i",
        "rightarrow",
        "sum_k",
        "c_",
        "ik",
        "quite",
        "interesting",
        "see",
        "happens",
        "extend",
        "function",
        "d",
        "linear",
        "way",
        "applied",
        "arbitrary",
        "function",
        "f",
        "df",
        "sum_i",
        "f_i",
        "sum_k",
        "c_",
        "ik",
        "stipulate",
        "c_",
        "ik",
        "c_",
        "ki",
        "kind",
        "vector",
        "equation",
        "stating",
        "connection",
        "direction",
        "expression",
        "rewritten",
        "follows",
        "take",
        "account",
        "since",
        "loop",
        "allowed",
        "c_",
        "ii",
        "df",
        "frac",
        "sum_",
        "ik",
        "f_kf_i",
        "c_",
        "ik",
        "although",
        "still",
        "long",
        "way",
        "expression",
        "df",
        "already",
        "nice",
        "property",
        "reminds",
        "one",
        "derivative",
        "function",
        "f",
        "linear",
        "f",
        "g",
        "df",
        "dg",
        "f",
        "constant",
        "function",
        "sense",
        "every",
        "node",
        "f_",
        "value",
        "immediate",
        "df",
        "f",
        "constant",
        "f",
        "two",
        "directly",
        "related",
        "node",
        "n_",
        "n_",
        "i",
        "f_",
        "i",
        "f_",
        "word",
        "express",
        "f",
        "i",
        "df",
        "function",
        "represented",
        "sum_i",
        "n_i",
        "derivative",
        "identity",
        "function",
        "constant",
        "function",
        "however",
        "easy",
        "check",
        "definition",
        "product",
        "rule",
        "fails",
        "ie",
        "fcdot",
        "g",
        "equal",
        "dfcdot",
        "g",
        "fcdot",
        "dg",
        "certain",
        "extent",
        "possible",
        "construct",
        "basic",
        "form",
        "calculus",
        "discrete",
        "graph",
        "require",
        "ingenuity",
        "creative",
        "thought",
        "find",
        "right",
        "counterpart",
        "simple",
        "example",
        "show",
        "quite",
        "lot",
        "structure",
        "derived",
        "discrete",
        "graph",
        "actually",
        "discrete",
        "graph",
        "allow",
        "nice",
        "solution",
        "dimension",
        "problem",
        "mentioned",
        "section",
        "rough",
        "outline",
        "idea",
        "consider",
        "node",
        "n_",
        "u_",
        "set",
        "node",
        "n_",
        "j",
        "n_",
        "n_",
        "j",
        "ie",
        "u_",
        "brings",
        "together",
        "closest",
        "neighbour",
        "n_",
        "likewise",
        "define",
        "u_",
        "set",
        "node",
        "n_",
        "k",
        "n_",
        "n_",
        "k",
        "follows",
        "u_",
        "n",
        "subseteq",
        "u_",
        "n",
        "obtain",
        "nested",
        "series",
        "neighbourhood",
        "n_",
        "one",
        "understands",
        "dimension",
        "measure",
        "growth",
        "neighbourhood",
        "dimension",
        "defined",
        "mbox",
        "dim",
        "lim_",
        "mrightarrow",
        "infty",
        "frac",
        "ln",
        "lvert",
        "u_m",
        "rvert",
        "ln",
        "one",
        "interesting",
        "feature",
        "definition",
        "need",
        "uniform",
        "whole",
        "graph",
        "depends",
        "choice",
        "initial",
        "node",
        "n_",
        "case",
        "graph",
        "sufficiently",
        "uniform",
        "dimension",
        "constant",
        "furthermore",
        "take",
        "classical",
        "case",
        "dimensional",
        "euclidean",
        "space",
        "dimension",
        "match",
        "suppose",
        "regular",
        "lattice",
        "underlying",
        "graph",
        "particular",
        "node",
        "cube",
        "set",
        "nearest",
        "neighbour",
        "u_",
        "consisting",
        "point",
        "neighbourhood",
        "u_",
        "count",
        "m",
        "node",
        "therefore",
        "mbox",
        "dim",
        "lim_",
        "mrightarrow",
        "infty",
        "frac",
        "ln",
        "m",
        "ln",
        "quadmbox",
        "quad",
        "mbox",
        "dim",
        "lim_",
        "mrightarrow",
        "infty",
        "cdotfrac",
        "ln",
        "m",
        "ln",
        "since",
        "m",
        "sufficiently",
        "large",
        "frac",
        "ln",
        "m",
        "ln",
        "approximates",
        "follows",
        "mbox",
        "dim",
        "show",
        "starting",
        "discrete",
        "graph",
        "obtained",
        "extension",
        "concept",
        "dimension",
        "one",
        "may",
        "noticed",
        "type",
        "definition",
        "quite",
        "similar",
        "definition",
        "used",
        "define",
        "dimension",
        "fractal",
        "image",
        "addition",
        "discrete",
        "graph",
        "make",
        "possible",
        "handle",
        "anisotropy",
        "problem",
        "well",
        "sufficient",
        "introduce",
        "element",
        "randomness",
        "network",
        "eg",
        "taking",
        "average",
        "connected",
        "set",
        "node",
        "avoid",
        "privileged",
        "direction",
        "clearly",
        "similarity",
        "irregular",
        "tiling",
        "scheme",
        "introduction",
        "vagueness",
        "important",
        "distinction",
        "statistical",
        "probabilistic",
        "concept",
        "fairly",
        "well",
        "understood",
        "whereas",
        "tiling",
        "problem",
        "mentioned",
        "open",
        "problem",
        "vagueness",
        "remains",
        "notoriously",
        "difficult",
        "concept",
        "grasp",
        "see",
        "entry",
        "vagueness",
        "encyclopedia"
    ]
}