{
    "main_text": "Frege\u2019s Analysis of Cardinal Numbers || Equinumerosity\n3.1 Equinumerosity\n\nIn order to state the definition of equinumerosity, we shall employ\nthe well-known logical notion \u2018there exists a unique \\(x\\) such\nthat \\(\\phi\\)\u2019. To say that there exists a unique \\(x\\) such\nthat \\(\\phi\\) is to say: there is some \\(x\\) such that \\(\\phi\\), and\nanything \\(y\\) which is such that \\(\\phi\\) is identical to \\(x\\). In\nwhat follows, we use the notation \u2018\\(\\exists!x\\phi\\)\u2019 to\nabbreviate this notion of a formula being uniquely satisfied, and we\ndefine it formally as follows (where again, \\(\\phi^y_x\\) is the result\nof substituting \\(y\\) for the free occurrences of \\(x\\) in \\(\\phi\\):\n\n\n\\(\\exists!x\\phi \\eqdef \\exists x[\\phi \\amp\\forall y(\\phi^y_x \\to y =\nx)]\\) \n\nNow, in terms of this logical notion of unique existence, we can state\na definition of equinumerosity that is weaker than the one Frege gives\nin Gl (\u00a7\u00a771, 72) but which nevertheless does the\njob:[5]\n\n\\(F\\) and \\(G\\) are equinumerous just in case there is a\nrelation \\(R\\) such that: (1) every object falling under \\(F\\) is\n\\(R\\)-related to a unique object falling under \\(G\\), and (2) every\nobject falling under \\(G\\) is such that there is a unique object\nfalling under \\(F\\) which is \\(R\\)-related to it.\n\n\nIn other words, \\(F\\) and \\(G\\) are equinumerous just in case there is\na relation that establishes a one-to-one correspondence between the\n\\(F\\)s and the \\(G\\)s. If we let \u2018\\(F \\approx G\\)\u2019 stand\nfor equinumerosity, then the definition of this notion can be rendered\nformally as follows: \n\n\n\\[\\begin{align*} &F \\approx G \\eqdef \\\\ &\\quad \\exists\nR[\\forall x(Fx \\to \\exists !y(Gy \\amp Rxy)) \\;\\amp\\; \\forall x(Gx \\to\n\\exists!y (Fy \\amp Ryx))] \\end{align*}\\]\n\n\n\nTo see that Frege\u2019s definition of equinumerosity works\ncorrectly, consider the following two examples. In the first example,\nwe have two concepts, \\(F\\) and \\(G\\), that are equinumerous:\n\n\n\nFigure 1\n\n\nAlthough there are several different relations \\(R\\) which demonstrate\nthe equinumerosity of \\(F\\) and \\(G\\), the particular relation used in\nFigure 1 is:\n\n\\(R_{1} = [\\lambda xy \\, (x\\eqclose a\\amp y\\eqclose f) \\lor (x\\eqclose\nb \\amp y\\eqclose g) \\lor (x\\eqclose c\\amp y\\eqclose e)]\\) \n\nIt is a simple exercise to show that \\(R_{1}\\), as defined, is a\n\u2018witness\u2019 to the equinumerosity of \\(F\\) and \\(G\\)\n(according to the definition).\n\nIn Figure 2, we have two concepts that are not equinumerous:\n\n\n\nFigure 2\n\n\nIn this example, no relation \\(R\\) can satisfy the definition of\nequinumerosity.\n\nGiven the discussion so far, it seems reasonable to suggest that\nconcepts \\(F\\) and \\(G\\) will be equinumerous whenever the number of\nobjects falling under \\(F\\) is identical to the number of objects\nfalling under \\(G\\). This suggestion will be codified by Hume\u2019s\nPrinciple. However, before discussing this principle, the reader\nshould convince him- or herself of the following four facts: (1) that\nthe material equivalence of two concepts implies their equinumerosity,\n(2) that equinumerosity is reflexive, (3) that equinumerosity is\nsymmetric, and (4) that equinumerosity is transitive. In formal terms,\nthe following facts are provable:\n\nFacts About Equinumerosity:\n\n1. \\(\\forall x(Fx \\equiv Gx) \\to F\\apprxclose G \\)\n\n2. \\(F \\approx F\\)\n\n3. \\(F\\apprxclose G \\to G\\apprxclose F\\)\n\n4. \\(F\\apprxclose G \\amp G\\apprxclose H \\to F\\apprxclose H\\) \n\nThe proofs of these facts, in each case, require the identification of\na relation that is a witness to the relevant equinumerosity claim. In\nsome cases, it is easy to identify the relation in question. In other\ncases, the reader should be able to \u2018construct\u2019 such\nrelations (using \\(\\lambda\\)-notation) by considering the examples\ndescribed above. Facts (2) \u2013 (4) establish that equinumerosity\nis an \u2018equivalence relation\u2019 which divides up the domain\nof concepts into \u2018equivalence classes\u2019 of equinumerous\nconcepts.\n",
    "section_title": "3.1 Equinumerosity",
    "entry_title": "Frege\u2019s Theorem and Foundations for Arithmetic",
    "hierarchy_title": "Frege\u2019s Theorem and Foundations for Arithmetic || Frege\u2019s Analysis of Cardinal Numbers || Equinumerosity",
    "tokenized_text": [
        "frege",
        "analysis",
        "cardinal",
        "number",
        "equinumerosity",
        "equinumerosity",
        "order",
        "state",
        "definition",
        "equinumerosity",
        "shall",
        "employ",
        "wellknown",
        "logical",
        "notion",
        "exists",
        "unique",
        "x",
        "phi",
        "say",
        "exists",
        "unique",
        "x",
        "phi",
        "say",
        "x",
        "phi",
        "anything",
        "y",
        "phi",
        "identical",
        "x",
        "follows",
        "use",
        "notation",
        "exists",
        "xphi",
        "abbreviate",
        "notion",
        "formula",
        "uniquely",
        "satisfied",
        "define",
        "formally",
        "follows",
        "phiy_x",
        "result",
        "substituting",
        "y",
        "free",
        "occurrence",
        "x",
        "phi",
        "exists",
        "xphi",
        "eqdef",
        "exists",
        "x",
        "phi",
        "ampforall",
        "phiy_x",
        "to",
        "x",
        "term",
        "logical",
        "notion",
        "unique",
        "existence",
        "state",
        "definition",
        "equinumerosity",
        "weaker",
        "one",
        "frege",
        "give",
        "gl",
        "nevertheless",
        "job",
        "f",
        "g",
        "equinumerous",
        "case",
        "relation",
        "r",
        "every",
        "object",
        "falling",
        "f",
        "r",
        "related",
        "unique",
        "object",
        "falling",
        "g",
        "every",
        "object",
        "falling",
        "g",
        "unique",
        "object",
        "falling",
        "f",
        "r",
        "related",
        "word",
        "f",
        "g",
        "equinumerous",
        "case",
        "relation",
        "establishes",
        "onetoone",
        "correspondence",
        "f",
        "g",
        "s",
        "let",
        "f",
        "approx",
        "g",
        "stand",
        "equinumerosity",
        "definition",
        "notion",
        "rendered",
        "formally",
        "follows",
        "begin",
        "align",
        "f",
        "approx",
        "g",
        "eqdef",
        "quad",
        "exists",
        "r",
        "forall",
        "x",
        "fx",
        "to",
        "exists",
        "gy",
        "amp",
        "rxy",
        "amp",
        "forall",
        "x",
        "gx",
        "to",
        "exists",
        "fy",
        "amp",
        "ryx",
        "end",
        "align",
        "see",
        "frege",
        "definition",
        "equinumerosity",
        "work",
        "correctly",
        "consider",
        "following",
        "two",
        "example",
        "first",
        "example",
        "two",
        "concept",
        "f",
        "g",
        "equinumerous",
        "figure",
        "although",
        "several",
        "different",
        "relation",
        "r",
        "demonstrate",
        "equinumerosity",
        "f",
        "g",
        "particular",
        "relation",
        "used",
        "figure",
        "r_",
        "lambda",
        "xy",
        "xeqclose",
        "aamp",
        "yeqclose",
        "f",
        "lor",
        "xeqclose",
        "b",
        "amp",
        "yeqclose",
        "g",
        "lor",
        "xeqclose",
        "camp",
        "yeqclose",
        "e",
        "simple",
        "exercise",
        "show",
        "r_",
        "defined",
        "witness",
        "equinumerosity",
        "f",
        "g",
        "according",
        "definition",
        "figure",
        "two",
        "concept",
        "equinumerous",
        "figure",
        "example",
        "relation",
        "r",
        "satisfy",
        "definition",
        "equinumerosity",
        "given",
        "discussion",
        "far",
        "seems",
        "reasonable",
        "suggest",
        "concept",
        "f",
        "g",
        "equinumerous",
        "whenever",
        "number",
        "object",
        "falling",
        "f",
        "identical",
        "number",
        "object",
        "falling",
        "g",
        "suggestion",
        "codified",
        "hume",
        "principle",
        "however",
        "discussing",
        "principle",
        "reader",
        "convince",
        "him",
        "following",
        "four",
        "fact",
        "material",
        "equivalence",
        "two",
        "concept",
        "implies",
        "equinumerosity",
        "equinumerosity",
        "reflexive",
        "equinumerosity",
        "symmetric",
        "equinumerosity",
        "transitive",
        "formal",
        "term",
        "following",
        "fact",
        "provable",
        "fact",
        "equinumerosity",
        "forall",
        "x",
        "fx",
        "equiv",
        "gx",
        "to",
        "fapprxclose",
        "g",
        "f",
        "approx",
        "f",
        "fapprxclose",
        "g",
        "to",
        "gapprxclose",
        "f",
        "fapprxclose",
        "g",
        "amp",
        "gapprxclose",
        "h",
        "to",
        "fapprxclose",
        "h",
        "proof",
        "fact",
        "case",
        "require",
        "identification",
        "relation",
        "witness",
        "relevant",
        "equinumerosity",
        "claim",
        "case",
        "easy",
        "identify",
        "relation",
        "question",
        "case",
        "reader",
        "able",
        "construct",
        "relation",
        "using",
        "lambda",
        "notation",
        "considering",
        "example",
        "described",
        "fact",
        "establish",
        "equinumerosity",
        "equivalence",
        "relation",
        "divide",
        "domain",
        "concept",
        "equivalence",
        "class",
        "equinumerous",
        "concept"
    ]
}