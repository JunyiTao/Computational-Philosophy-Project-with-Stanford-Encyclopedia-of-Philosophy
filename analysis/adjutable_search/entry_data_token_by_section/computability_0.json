{
    "main_text": "What can be computed in principle? Introduction and History\n1. What can be computed in principle? Introduction and History\n\n\nIn the 1930\u2019s, well before there were computers, various\nmathematicians from around the world invented precise, independent\ndefinitions of what it means to be computable. Alonzo Church defined\nthe Lambda calculus, Kurt G\u00f6del defined Recursive functions,\nStephen Kleene defined Formal systems, Markov defined what became known\nas Markov algorithms, Emil Post and Alan Turing defined abstract\nmachines now known as Post machines and Turing machines.\n\n\nSurprisingly, all of these models are exactly equivalent: anything\ncomputable in the lambda calculus is computable by a Turing machine and\nsimilarly for any other pairs of the above computational systems. After\nthis was proved, Church expressed the belief that the intuitive notion\nof \u201ccomputable in principle\u201d is identical to the above precise notions.\nThis belief, now called the \u201cChurch-Turing Thesis\u201d, is uniformly\naccepted by mathematicians.\n\n\nPart of the impetus for the drive to codify what is computable came\nfrom the mathematician David Hilbert. Hilbert believed that all of\nmathematics could be precisely axiomatized. Once this was\ndone, there would be an \u201ceffective procedure\u201d, i.e., an algorithm that\nwould take as input any precise mathematical statement, and, after a\nfinite number of steps, decide whether the statement was true or false.\nHilbert was asking for what would now be called a decision\nprocedure for all of mathematics.\n\n\nAs a special case of this decision problem, Hilbert considered the\nvalidity problem for first-order logic. First-order logic is a\nmathematical language in which most mathematical statements can be\nformulated. Every statement in first-order logic has a precise meaning\nin every appropriate logical structure, i.e., it is true or false in\neach such structure. Those statements that are true in every\nappropriate structure are called valid. Those statements that\nare true in some structure are called satisfiable. Notice that\na formula, \\(\\varphi\\), is valid iff its negation, \\(\\neg \\varphi\\), is not\nsatisfiable.\n\n\nHilbert called the validity problem for first-order logic, the\nentscheidungsproblem. In a textbook, Principles of\nMathematical Logic by Hilbert and Ackermann, the authors wrote,\n\u201cThe Entscheidungsproblem is solved when we know a procedure that\nallows for any given logical expression to decide by finitely many\noperations its validity or satisfiability.\u2026 The\nentscheidungsproblem must be considered the main problem of\nmathematical logic.\u201d (B\u00f6erger, Gr\u00e4del, & Gurevich\n1997).\n\n\nIn his 1930 Ph.D. thesis, G\u00f6del presented a complete\naxiomatization of first-order logic, based on the Principia\nMathematica by Whitehead and Russell (G\u00f6del 1930). G\u00f6del proved his\nCompleteness Theorem, namely that a formula is provable from the axioms\nif and only if it is valid. G\u00f6del\u2019s Completeness theorem was a\nstep towards the resolution of Hilbert\u2019s\nentscheidungsproblem.\n\n\nIn particular, since the axioms are easily recognizable, and rules\nof inference very simple, there is a mechanical procedure that can list\nout all proofs. Note that each line in a proof is either an axiom, or\nfollows from previous lines by one of the simple rules. For any given\nstring of characters, we can tell if it is a proof. Thus we can\nsystematically list all strings of characters of length 1, 2, 3, and so\non, and check whether each of these is a proof. If so, then we can add\nthe proof\u2019s last line to our list of theorems. In this way, we can list\nout all theorems, i.e., exactly all the valid formulas of first-order\nlogic, can be listed out by a simple mechanical procedure. More\nprecisely, the set of valid formulas is the range of a computable\nfunction. In modern terminology we say that the set of valid formulas\nof first-order logic is recursively enumerable (r.e.).\n\n\nG\u00f6del\u2019s Completeness theorem was not sufficient, however, to\ngive a positive solution to the entscheidungsproblem. Given a\nformula, \\(\\varphi\\), if \\(\\varphi\\) is valid then the above procedure would\neventually list it out and thus could answer, \u201cYes, \\(\\varphi\\) is valid.\u201d\nHowever, if \\(\\varphi\\) were not valid then we might never find this fact\nout. What was missing was a procedure to list out all the non-valid\nformulas, or equivalently to list out all satisfiable formulas.\n\n\nA year later, in 1931, G\u00f6del shocked the mathematical world by\nproving his Incompleteness Theorem: there is no complete and computable\naxiomatization of the first-order theory of the natural numbers. That\nis, there is no reasonable list of axioms from which we can prove\nexactly all true statements of number theory (G\u00f6del 1931).\n\n\nA few years later, Church and Turing independently proved that the\nentscheidungsproblem is unsolvable. Church did this by using\nthe methods of G\u00f6del\u2019s Incompleteness Theorem to show that the set\nof satisfiable formulas of first-order logic is not r.e., i.e., they\ncannot be systematically listed out by a function computable by the\nlambda calculus. Turing introduced his machines and proved many\ninteresting theorems some of which we will discuss in the next section.\nIn particular, he proved the unsolvability of the halting\nproblem. He obtained the unsolvability of the\nentscheidungsproblem as a corollary.\n\n\nHilbert was very disappointed because his program towards a decision\nprocedure for all of mathematics was proved impossible. However, as we\nwill see in more detail in the rest of this article, a vast amount was\nlearned about the fundamental nature of computation.\n",
    "section_title": "1. What can be computed in principle? Introduction and History",
    "entry_title": "Computability and Complexity",
    "hierarchy_title": "Computability and Complexity || What can be computed in principle? Introduction and History",
    "tokenized_text": [
        "computed",
        "principle",
        "introduction",
        "history",
        "computed",
        "principle",
        "introduction",
        "history",
        "well",
        "computer",
        "various",
        "mathematician",
        "around",
        "world",
        "invented",
        "precise",
        "independent",
        "definition",
        "mean",
        "computable",
        "alonzo",
        "church",
        "defined",
        "lambda",
        "calculus",
        "kurt",
        "g\u00f6del",
        "defined",
        "recursive",
        "function",
        "stephen",
        "kleene",
        "defined",
        "formal",
        "system",
        "markov",
        "defined",
        "became",
        "known",
        "markov",
        "algorithm",
        "emil",
        "post",
        "alan",
        "turing",
        "defined",
        "abstract",
        "machine",
        "known",
        "post",
        "machine",
        "turing",
        "machine",
        "surprisingly",
        "model",
        "exactly",
        "equivalent",
        "anything",
        "computable",
        "lambda",
        "calculus",
        "computable",
        "turing",
        "machine",
        "similarly",
        "pair",
        "computational",
        "system",
        "proved",
        "church",
        "expressed",
        "belief",
        "intuitive",
        "notion",
        "computable",
        "principle",
        "identical",
        "precise",
        "notion",
        "belief",
        "called",
        "churchturing",
        "thesis",
        "uniformly",
        "accepted",
        "mathematician",
        "part",
        "impetus",
        "drive",
        "codify",
        "computable",
        "came",
        "mathematician",
        "david",
        "hilbert",
        "hilbert",
        "believed",
        "mathematics",
        "could",
        "precisely",
        "axiomatized",
        "done",
        "would",
        "effective",
        "procedure",
        "ie",
        "algorithm",
        "would",
        "take",
        "input",
        "precise",
        "mathematical",
        "statement",
        "finite",
        "number",
        "step",
        "decide",
        "whether",
        "statement",
        "true",
        "false",
        "hilbert",
        "asking",
        "would",
        "called",
        "decision",
        "procedure",
        "mathematics",
        "special",
        "case",
        "decision",
        "problem",
        "hilbert",
        "considered",
        "validity",
        "problem",
        "firstorder",
        "logic",
        "firstorder",
        "logic",
        "mathematical",
        "language",
        "mathematical",
        "statement",
        "formulated",
        "every",
        "statement",
        "firstorder",
        "logic",
        "precise",
        "meaning",
        "every",
        "appropriate",
        "logical",
        "structure",
        "ie",
        "true",
        "false",
        "structure",
        "statement",
        "true",
        "every",
        "appropriate",
        "structure",
        "called",
        "valid",
        "statement",
        "true",
        "structure",
        "called",
        "satisfiable",
        "notice",
        "formula",
        "varphi",
        "valid",
        "iff",
        "negation",
        "neg",
        "varphi",
        "satisfiable",
        "hilbert",
        "called",
        "validity",
        "problem",
        "firstorder",
        "logic",
        "entscheidungsproblem",
        "textbook",
        "principle",
        "mathematical",
        "logic",
        "hilbert",
        "ackermann",
        "author",
        "wrote",
        "entscheidungsproblem",
        "solved",
        "know",
        "procedure",
        "allows",
        "given",
        "logical",
        "expression",
        "decide",
        "finitely",
        "many",
        "operation",
        "validity",
        "satisfiability",
        "entscheidungsproblem",
        "must",
        "considered",
        "main",
        "problem",
        "mathematical",
        "logic",
        "b\u00f6erger",
        "gr\u00e4del",
        "gurevich",
        "phd",
        "thesis",
        "g\u00f6del",
        "presented",
        "complete",
        "axiomatization",
        "firstorder",
        "logic",
        "based",
        "principia",
        "mathematica",
        "whitehead",
        "russell",
        "g\u00f6del",
        "g\u00f6del",
        "proved",
        "completeness",
        "theorem",
        "namely",
        "formula",
        "provable",
        "axiom",
        "valid",
        "g\u00f6del",
        "completeness",
        "theorem",
        "step",
        "towards",
        "resolution",
        "hilbert",
        "entscheidungsproblem",
        "particular",
        "since",
        "axiom",
        "easily",
        "recognizable",
        "rule",
        "inference",
        "simple",
        "mechanical",
        "procedure",
        "list",
        "proof",
        "note",
        "line",
        "proof",
        "either",
        "axiom",
        "follows",
        "previous",
        "line",
        "one",
        "simple",
        "rule",
        "given",
        "string",
        "character",
        "tell",
        "proof",
        "thus",
        "systematically",
        "list",
        "string",
        "character",
        "length",
        "check",
        "whether",
        "proof",
        "add",
        "proof",
        "last",
        "line",
        "list",
        "theorem",
        "way",
        "list",
        "theorem",
        "ie",
        "exactly",
        "valid",
        "formula",
        "firstorder",
        "logic",
        "listed",
        "simple",
        "mechanical",
        "procedure",
        "precisely",
        "set",
        "valid",
        "formula",
        "range",
        "computable",
        "function",
        "modern",
        "terminology",
        "say",
        "set",
        "valid",
        "formula",
        "firstorder",
        "logic",
        "recursively",
        "enumerable",
        "re",
        "g\u00f6del",
        "completeness",
        "theorem",
        "sufficient",
        "however",
        "give",
        "positive",
        "solution",
        "entscheidungsproblem",
        "given",
        "formula",
        "varphi",
        "varphi",
        "valid",
        "procedure",
        "would",
        "eventually",
        "list",
        "thus",
        "could",
        "answer",
        "yes",
        "varphi",
        "valid",
        "however",
        "varphi",
        "valid",
        "might",
        "never",
        "find",
        "fact",
        "missing",
        "procedure",
        "list",
        "nonvalid",
        "formula",
        "equivalently",
        "list",
        "satisfiable",
        "formula",
        "year",
        "later",
        "g\u00f6del",
        "shocked",
        "mathematical",
        "world",
        "proving",
        "incompleteness",
        "theorem",
        "complete",
        "computable",
        "axiomatization",
        "firstorder",
        "theory",
        "natural",
        "number",
        "reasonable",
        "list",
        "axiom",
        "prove",
        "exactly",
        "true",
        "statement",
        "number",
        "theory",
        "g\u00f6del",
        "year",
        "later",
        "church",
        "turing",
        "independently",
        "proved",
        "entscheidungsproblem",
        "unsolvable",
        "church",
        "using",
        "method",
        "g\u00f6del",
        "incompleteness",
        "theorem",
        "show",
        "set",
        "satisfiable",
        "formula",
        "firstorder",
        "logic",
        "re",
        "ie",
        "systematically",
        "listed",
        "function",
        "computable",
        "lambda",
        "calculus",
        "turing",
        "introduced",
        "machine",
        "proved",
        "many",
        "interesting",
        "theorem",
        "discus",
        "next",
        "section",
        "particular",
        "proved",
        "unsolvability",
        "halting",
        "problem",
        "obtained",
        "unsolvability",
        "entscheidungsproblem",
        "corollary",
        "hilbert",
        "disappointed",
        "program",
        "towards",
        "decision",
        "procedure",
        "mathematics",
        "proved",
        "impossible",
        "however",
        "see",
        "detail",
        "rest",
        "article",
        "vast",
        "amount",
        "learned",
        "fundamental",
        "nature",
        "computation"
    ]
}