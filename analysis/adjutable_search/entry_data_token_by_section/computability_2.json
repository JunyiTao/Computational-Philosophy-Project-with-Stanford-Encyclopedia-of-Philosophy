{
    "main_text": "Turing Machines || Universal Machines\n2.1 Universal Machines\n\n\nEach Turing machine can be uniquely described by its transition\ntable: for each state, \\(q\\), and each symbol, \\(\\sigma ,\n\\delta(q,\\sigma)\\) is the new state, the new symbol, and the\nhead displacement. These transition tables, can be written as a finite\nstring of symbols, giving the complete set of instructions of each\nTuring machine. Furthermore, these strings of symbols can be listed in\nlexicographic order as follows: \\(M_{1},\nM_{2}, M_{3},\\ldots\\), where\n\\(M_{i}\\) is the transition table, i.e., the complete set\nof instructions, for Turing machine number \\(i\\). The transition\ntable for \\(M_{i}\\) is the program for Turing machine\n\\(i\\), or more simply, the \\(i\\)th program.\n\n\nTuring showed that he could build a Turing machine, \\(U\\), that\nwas universal, in the sense that it could run the program of\nany other Turing machine. More explicitly, for any \\(i\\), and any\ninput \\(w, U\\) on inputs \\(i\\) and \\(w\\) would\ndo exactly what \\(M_{i}\\) would do on input \\(w\\), in\nsymbols,\n\n\\[\nU(i,w) = M_{i}(w)\n\\]\n\n\n\nTuring\u2019s construction of a universal machine gives the most\nfundamental insight into computation: one machine can run any program\nwhatsoever. No matter what computational tasks we may need to perform\nin the future, a single machine can perform them all. This is the\ninsight that makes it feasible to build and sell computers. One\ncomputer can run any program. We don\u2019t need to buy a new computer every\ntime we have a new problem to solve. Of course, in the age of personal\ncomputers, this fact is such a basic assumption that it may be\ndifficult to step back and appreciate it.\n",
    "section_title": "2.1 Universal Machines",
    "entry_title": "Computability and Complexity",
    "hierarchy_title": "Computability and Complexity || Turing Machines || Universal Machines",
    "tokenized_text": [
        "turing",
        "machine",
        "universal",
        "machine",
        "universal",
        "machine",
        "turing",
        "machine",
        "uniquely",
        "described",
        "transition",
        "table",
        "state",
        "q",
        "symbol",
        "sigma",
        "delta",
        "q",
        "sigma",
        "new",
        "state",
        "new",
        "symbol",
        "head",
        "displacement",
        "transition",
        "table",
        "written",
        "finite",
        "string",
        "symbol",
        "giving",
        "complete",
        "set",
        "instruction",
        "turing",
        "machine",
        "furthermore",
        "string",
        "symbol",
        "listed",
        "lexicographic",
        "order",
        "follows",
        "m_",
        "m_",
        "m_",
        "ldots",
        "m_",
        "transition",
        "table",
        "ie",
        "complete",
        "set",
        "instruction",
        "turing",
        "machine",
        "number",
        "i",
        "transition",
        "table",
        "m_",
        "program",
        "turing",
        "machine",
        "i",
        "simply",
        "i",
        "th",
        "program",
        "turing",
        "showed",
        "could",
        "build",
        "turing",
        "machine",
        "u",
        "universal",
        "sense",
        "could",
        "run",
        "program",
        "turing",
        "machine",
        "explicitly",
        "i",
        "input",
        "w",
        "u",
        "input",
        "i",
        "w",
        "would",
        "exactly",
        "m_",
        "would",
        "input",
        "w",
        "symbol",
        "u",
        "w",
        "m_",
        "w",
        "turing",
        "construction",
        "universal",
        "machine",
        "give",
        "fundamental",
        "insight",
        "computation",
        "one",
        "machine",
        "run",
        "program",
        "whatsoever",
        "matter",
        "computational",
        "task",
        "may",
        "need",
        "perform",
        "future",
        "single",
        "machine",
        "perform",
        "insight",
        "make",
        "feasible",
        "build",
        "sell",
        "computer",
        "one",
        "computer",
        "run",
        "program",
        "need",
        "buy",
        "new",
        "computer",
        "every",
        "time",
        "new",
        "problem",
        "solve",
        "course",
        "age",
        "personal",
        "computer",
        "fact",
        "basic",
        "assumption",
        "may",
        "difficult",
        "step",
        "back",
        "appreciate"
    ]
}