{
    "main_text": "Sequent Calculus: later developments/applications\n8. The aims of proof theory\n\n\nTo what extent has proof theory achieved its original aims? For \nHilbert, the aims were a complete clarification of the foundational \nproblems through finitary proofs of consistency, etc, aims in which \nproof theory failed. Hilbert in his program was not interested in the\nstudy of mathematical proofs in themselves, but only in clearing the \ncentral foundational problems (and then to forget about them). A \nrecently found note by Hilbert gives a different picture: the note \nstates that Hilbert wanted to add as a 24th and last problem in his \nfamous Paris list of open mathematical problems of 1900 the \ndevelopment of \u201ca theory of proof methods in \nmathematics\u201d. This was before his metamathematical program for \nthe development of a proof theory emerged.\n\n\nFor Gentzen, the aims were, along with those of Hilbert, to \nunderstand the structure of mathematical proofs. This program was a \ncomplete success as far as pure logic and arithmetic are concerned. \nThe methods of sequent calculus, especially, permit the analysis of \nproofs with profound results. The grand aim of proof theory, a proof \nof the consistency of analysis as in Hilbert's second Paris problem, \nhas not been carried through but is not excluded, either.\n\n\nSome understanding of the notion of proof is necessary for any \nmathematician, if for nothing else, then at least for the \ncommunicability of mathematical results: publication rests on the \nunderstanding that proofs can be made as explicit as to be routinely \ncheckable for correctness. However, proof theory has so far not \nbecome a practical tool for the working mathematician; the \napplications in mathematics have been rather isolated cases. Recent \nwork on formalizing mathematical proofs with computerized systems, \ncalled proof editors, may gradually change this picture.\n\n\nProof theory has created new aims outside traditional mathematics, \nespecially in connection with computer science. Topics such as the \nverification of correctness of computer programs are an outgrowth of \nproof theory. Natural deduction has led to the Curry-Howard \ncorrespondence and to connections with functional programming, and \nsequent calculus is often used in systems of automatic proof search, \nas in logic programming.\n",
    "section_title": "8. The aims of proof theory",
    "entry_title": "The Development of Proof Theory",
    "hierarchy_title": "The Development of Proof Theory || Sequent Calculus: later developments/applications",
    "tokenized_text": [
        "sequent",
        "calculus",
        "later",
        "developmentsapplications",
        "aim",
        "proof",
        "theory",
        "extent",
        "proof",
        "theory",
        "achieved",
        "original",
        "aim",
        "hilbert",
        "aim",
        "complete",
        "clarification",
        "foundational",
        "problem",
        "finitary",
        "proof",
        "consistency",
        "etc",
        "aim",
        "proof",
        "theory",
        "failed",
        "hilbert",
        "program",
        "interested",
        "study",
        "mathematical",
        "proof",
        "clearing",
        "central",
        "foundational",
        "problem",
        "forget",
        "recently",
        "found",
        "note",
        "hilbert",
        "give",
        "different",
        "picture",
        "note",
        "state",
        "hilbert",
        "wanted",
        "add",
        "th",
        "last",
        "problem",
        "famous",
        "paris",
        "list",
        "open",
        "mathematical",
        "problem",
        "development",
        "theory",
        "proof",
        "method",
        "mathematics",
        "metamathematical",
        "program",
        "development",
        "proof",
        "theory",
        "emerged",
        "gentzen",
        "aim",
        "along",
        "hilbert",
        "understand",
        "structure",
        "mathematical",
        "proof",
        "program",
        "complete",
        "success",
        "far",
        "pure",
        "logic",
        "arithmetic",
        "concerned",
        "method",
        "sequent",
        "calculus",
        "especially",
        "permit",
        "analysis",
        "proof",
        "profound",
        "result",
        "grand",
        "aim",
        "proof",
        "theory",
        "proof",
        "consistency",
        "analysis",
        "hilbert",
        "s",
        "second",
        "paris",
        "problem",
        "carried",
        "excluded",
        "either",
        "understanding",
        "notion",
        "proof",
        "necessary",
        "mathematician",
        "nothing",
        "else",
        "least",
        "communicability",
        "mathematical",
        "result",
        "publication",
        "rest",
        "understanding",
        "proof",
        "made",
        "explicit",
        "routinely",
        "checkable",
        "correctness",
        "however",
        "proof",
        "theory",
        "far",
        "become",
        "practical",
        "tool",
        "working",
        "mathematician",
        "application",
        "mathematics",
        "rather",
        "isolated",
        "case",
        "recent",
        "work",
        "formalizing",
        "mathematical",
        "proof",
        "computerized",
        "system",
        "called",
        "proof",
        "editor",
        "may",
        "gradually",
        "change",
        "picture",
        "proof",
        "theory",
        "created",
        "new",
        "aim",
        "outside",
        "traditional",
        "mathematics",
        "especially",
        "connection",
        "computer",
        "science",
        "topic",
        "verification",
        "correctness",
        "computer",
        "program",
        "outgrowth",
        "proof",
        "theory",
        "natural",
        "deduction",
        "led",
        "curryhoward",
        "correspondence",
        "connection",
        "functional",
        "programming",
        "sequent",
        "calculus",
        "often",
        "used",
        "system",
        "automatic",
        "proof",
        "search",
        "logic",
        "programming"
    ]
}