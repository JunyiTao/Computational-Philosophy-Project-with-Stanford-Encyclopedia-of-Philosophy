{
    "main_text": "Computing with Turing Machines || Computable Numbers and Problems\n2.2 Computable Numbers and Problems\n\nTuring\u2019s original paper is concerned with computable (real)\nnumbers. A (real) number is Turing computable if there exists a\nTuring machine which computes an arbitrarily precise approximation to\nthat number. All of the algebraic numbers (roots of polynomials with\nalgebraic coefficients) and many transcendental mathematical\nconstants, such as e and \\(\\pi\\) are Turing-computable.\nTuring gave several examples of classes of numbers computable by\nTuring machines (see section 10 Examples of large classes of\nnumbers which are computable of Turing 1936\u20137) as a\nheuristic argument showing that a wide diversity of classes of numbers\ncan be computed by Turing machines.\n\nOne might wonder however in what sense computation with numbers, viz.\ncalculation, captures non-numerical but computable problems\nand so how Turing machines capture all general and effective\nprocedures which determine whether something is the case or not.\nExamples of such problems are:\n\n\u201cdecide for any given x whether or not x\ndenotes a prime\u201d\n\u201cdecide for any given x whether or not x is\nthe description of a Turing machine\u201d.\n\n\nIn general, these problems are of the form:\n\n\u201cdecide for any given x whether or not x has\nproperty X\u201d\n\n\nAn important challenge of both theoretical and concrete advances in\ncomputing (often at the interface with other disciplines) has become\nthe problem of providing an interpretation of X such that it\ncan be tackled computationally. To give just one concrete example, in\ndaily computational practices it might be important to have a method\nto decide for any digital \u201csource\u201d whether or not it can\nbe trusted and so one needs a computational interpretation of\ntrust.\n\nThe characteristic function of a predicate is a function\nwhich has the value TRUE or FALSE when given appropriate arguments. In\norder for such functions to be computable, Turing relied on\nG\u00f6del\u2019s insight that these kind of problems can be encoded\nas a problem about numbers (See\n G\u00f6del\u2019s incompleteness theorem\n and the next\n Sec. 2.3)\n In Turing\u2019s wording:\n\n\nThe expression \u201cthere is a general process for determining\n\u2026\u201d has been used [here] [\u2026] as equivalent to\n\u201cthere is a machine which will determine \u2026\u201d. This\nusage can be justified if and only if we can justify our definition of\n\u201ccomputable\u201d. For each of these \u201cgeneral\nprocess\u201d problems can be expressed as a problem concerning a\ngeneral process for determining whether a given integer n has a\nproperty \\(G(n)\\) [e.g. \\(G(n)\\) might mean \u201cn is\nsatisfactory\u201d or \u201cn is the G\u00f6del\nrepresentation of a provable formula\u201d], and this is equivalent\nto computing a number whose n-th figure is 1 if \\(G(n)\\) is\ntrue and 0 if it is false. (1936\u20137: 248)\n\n\nIt is the possibility of coding the \u201cgeneral process\u201d\nproblems as numerical problems that is essential to Turing\u2019s\nconstruction of the universal Turing machine and its use within a\nproof that shows there are problems that cannot be computed by a\nTuring machine.\n",
    "section_title": "2.2 Computable Numbers and Problems",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Computing with Turing Machines || Computable Numbers and Problems",
    "tokenized_text": [
        "computing",
        "turing",
        "machine",
        "computable",
        "number",
        "problem",
        "computable",
        "number",
        "problem",
        "turing",
        "original",
        "paper",
        "concerned",
        "computable",
        "real",
        "number",
        "real",
        "number",
        "turing",
        "computable",
        "exists",
        "turing",
        "machine",
        "computes",
        "arbitrarily",
        "precise",
        "approximation",
        "number",
        "algebraic",
        "number",
        "root",
        "polynomial",
        "algebraic",
        "coefficient",
        "many",
        "transcendental",
        "mathematical",
        "constant",
        "e",
        "pi",
        "turingcomputable",
        "turing",
        "gave",
        "several",
        "example",
        "class",
        "number",
        "computable",
        "turing",
        "machine",
        "see",
        "section",
        "example",
        "large",
        "class",
        "number",
        "computable",
        "turing",
        "heuristic",
        "argument",
        "showing",
        "wide",
        "diversity",
        "class",
        "number",
        "computed",
        "turing",
        "machine",
        "one",
        "might",
        "wonder",
        "however",
        "sense",
        "computation",
        "number",
        "viz",
        "calculation",
        "capture",
        "nonnumerical",
        "computable",
        "problem",
        "turing",
        "machine",
        "capture",
        "general",
        "effective",
        "procedure",
        "determine",
        "whether",
        "something",
        "case",
        "example",
        "problem",
        "decide",
        "given",
        "x",
        "whether",
        "x",
        "denotes",
        "prime",
        "decide",
        "given",
        "x",
        "whether",
        "x",
        "description",
        "turing",
        "machine",
        "general",
        "problem",
        "form",
        "decide",
        "given",
        "x",
        "whether",
        "x",
        "property",
        "x",
        "important",
        "challenge",
        "theoretical",
        "concrete",
        "advance",
        "computing",
        "often",
        "interface",
        "discipline",
        "become",
        "problem",
        "providing",
        "interpretation",
        "x",
        "tackled",
        "computationally",
        "give",
        "one",
        "concrete",
        "example",
        "daily",
        "computational",
        "practice",
        "might",
        "important",
        "method",
        "decide",
        "digital",
        "source",
        "whether",
        "trusted",
        "one",
        "need",
        "computational",
        "interpretation",
        "trust",
        "characteristic",
        "function",
        "predicate",
        "function",
        "value",
        "true",
        "false",
        "given",
        "appropriate",
        "argument",
        "order",
        "function",
        "computable",
        "turing",
        "relied",
        "g\u00f6del",
        "insight",
        "kind",
        "problem",
        "encoded",
        "problem",
        "number",
        "see",
        "g\u00f6del",
        "incompleteness",
        "theorem",
        "next",
        "sec",
        "turing",
        "wording",
        "expression",
        "general",
        "process",
        "determining",
        "used",
        "equivalent",
        "machine",
        "determine",
        "usage",
        "justified",
        "justify",
        "definition",
        "computable",
        "general",
        "process",
        "problem",
        "expressed",
        "problem",
        "concerning",
        "general",
        "process",
        "determining",
        "whether",
        "given",
        "integer",
        "n",
        "property",
        "g",
        "n",
        "eg",
        "g",
        "n",
        "might",
        "mean",
        "n",
        "satisfactory",
        "n",
        "g\u00f6del",
        "representation",
        "provable",
        "formula",
        "equivalent",
        "computing",
        "number",
        "whose",
        "nth",
        "figure",
        "g",
        "n",
        "true",
        "false",
        "possibility",
        "coding",
        "general",
        "process",
        "problem",
        "numerical",
        "problem",
        "essential",
        "turing",
        "construction",
        "universal",
        "turing",
        "machine",
        "use",
        "within",
        "proof",
        "show",
        "problem",
        "computed",
        "turing",
        "machine"
    ]
}