{
    "main_text": "Definitions and fundamental results || Syntax and semantics\n2.1 Syntax and semantics\n\nPropositional dynamic logic (PDL) is designed for representing and\nreasoning about propositional properties of programs. Its syntax is\nbased upon two sets of symbols: a countable set \\(\\Phi_0\\) of atomic\nformulas and a countable set \\(\\Pi_0\\) of atomic programs. Complex\nformulas and complex programs over this base are defined as\nfollows.\n\nEvery atomic formula is a formula.\n\\(0\\) (\u201cfalse\u201d) is a formula.\nIf \\(A\\) is a formula then \\(\\lnot A\\) (\u201cnot \\(A\\)\u201d)\nis a formula.\nIf \\(A\\) and \\(B\\) are formulas then \\((A\\lor B)\\) (\u201c\\(A\\)\nor \\(B\\)\u201d) is a formula.\nIf \\(\\alpha\\) is a program and A is a formula then\n\\([\\alpha]A\\) (\u201cevery execution of \\(\\alpha\\) from the present\nstate leads to a state where \\(A\\) is true\u201d) is a formula.\nEvery atomic program is a program.\nIf \\(\\alpha\\) and \\(\\beta\\) are programs then \\((\\alpha;\\beta)\\)\n(\u201cdo \\(\\alpha\\) followed by \\(\\beta\\)\u201d) is a program.\nIf \\(\\alpha\\) and \\(\\beta\\) are programs then\n\\((\\alpha\\cup\\beta)\\) (\u201cdo \\(\\alpha\\) or \\(\\beta\\),\nnon-deterministically\u201d) is a program.\nIf \\(\\alpha\\) is a program then \\(\\alpha^*\\) (\u201crepeat\n\\(\\alpha\\) a finite, but non-deterministically determined, number of\ntimes\u201d) is a program.\nIf \\(A\\) is a formula then \\(A?\\) (\u201cproceed if \\(A\\) is\ntrue, else fail\u201d) is a program.\n\n\nThe other Boolean connectives \\(1\\), \\(\\land\\), \\(\\to\\), and\n\\(\\leftrightarrow\\) are used as abbreviations in the standard way. In\naddition, we abbreviate \\(\\lnot[\\alpha]\\lnot A\\) to\n\\(\\langle\\alpha\\rangle A\\) (\u201csome execution of \\(\\alpha\\) from\nthe present state leads to a state where \\(A\\) is true\u201d) as in\nmodal logic. We write \\(\\alpha^n\\) for \\(\\alpha;\\ldots ;\\alpha\\) with\n\\(n\\) occurrences of \\(\\alpha\\). More formally:\n\n\\(\\alpha^0 := 1?\\)\n\\(\\alpha^{n+1} := \\alpha;\\alpha^n\\)\n Also:\n\n\n\\(\\alpha^+ := \\alpha;\\alpha^*\\)\n\n\nis often useful to represent an iteration that is unbounded but occurs\nat least once. Finally, we adopt the standard rules for omission of\nparentheses.\n\nFormulas can be used to describe the properties that hold after the\nsuccessful execution of a program. For example, the formula\n\\([\\alpha\\cup\\beta]A\\) means that whenever program \\(\\alpha\\) or\n\\(\\beta\\) is successfully executed, a state is reached where \\(A\\)\nholds, whereas the formula \\(\\langle (\\alpha;\\beta)^*\\rangle A\\) means\nthat there is a sequence of alternating executions of \\(\\alpha\\) and\n\\(\\beta\\) such that a state is reached where \\(A\\) holds. Semantically\nspeaking, formulas are interpreted by sets of states and programs are\ninterpreted by binary relations over states in a transition system.\nMore precisely, the meaning of PDL formulas and programs is\ninterpreted over Labeled Transition Systems (LTS) \\(M = (W,R,V)\\)\nwhere \\(W\\) is a nonempty set of worlds or states, \\(R\\) is a mapping\nfrom the set \\(\\Pi_0\\) of atomic programs into binary relations on\n\\(W\\) and \\(V\\) is a mapping from the set \\(\\Phi_0\\) of atomic\nformulas into subsets of \\(W\\).\n\nInformally, the mapping \\(R\\) assigns to each atomic program\n\\(\\pi\\in\\Pi_0\\) some binary relation \\(R(\\pi)\\) on \\(W\\) with the\nintended meaning that \\(xR(\\pi)y\\) iff there exists an execution of\n\\(\\pi\\) from \\(x\\) that leads to \\(y\\), whereas the mapping \\(V\\)\nassigns to each atomic formula \\(p\\in\\Phi_0\\) some subset \\(V(p)\\) of\n\\(W\\) with the intended meaning that \\(x \\in V(p)\\) iff \\(p\\) is true\nin the state \\(x\\). Given our readings of \\(0\\), \\(\\lnot A\\), \\(A\\lor\nB\\), \\([\\alpha]A\\), \\(\\alpha;\\beta\\), \\(\\alpha\\cup\\beta\\),\n\\(\\alpha^*\\) and \\(A?\\), it is clear that \\(R\\) and \\(V\\) must be\nextended inductively as follows to supply the intended meanings for\nthe complex programs and formulas:\n\n\\(xR(\\alpha;\\beta)y\\) iff there exists a world \\(z\\) such that\n\\(xR(\\alpha)z\\) and \\(zR(\\beta)y\\)\n\\(xR(\\alpha\\cup\\beta)y\\) iff \\(xR(\\alpha)y\\) or\n\\(xR(\\beta)y\\)\n\\(xR(\\alpha^*)y\\) iff there exists a non-negative integer \\(n\\)\nand there exists a sequence of states \\(z_0, \\ldots, z_n\\) such that\n\\(z_0 = x\\), \\(z_n = y\\) and for all \\(k = 1 \\ldots n\\),\n\\(z_{k-1}R(\\alpha)z_k\\)\n\\(xR(A?)y\\) iff \\(x = y\\) and \\(y \\in V(A)\\)\n\\(V(0) = \\emptyset\\)\n\\(V(\\lnot A) = W \\setminus V(A)\\)\n\\(V((A\\lor B) = V(A) \\cup V(B)\\)\n\\(V([\\alpha]A) = \\{x \\mid \\text{for all worlds } y, \\text{ if }\nxR(\\alpha)y \\text{ then } y \\in V(A)\\}\\)\n\n\nIf \\(x \\in V(A)\\) then we say that \\(A\\) is satisfied at state \\(x\\)\nin \\(M\\), or \\(\\ldquo M, x\\) sat \\(A\\rdquo\\).\n\n\n\n\n\n\n\n\nTwo Labeled Transition Systems: \\(M = (W,R,V)\\) (left) and \\(M' =\n(W',R',V')\\) (right)\n\n\nCall \\(M\\) the LTS depicted above on the left and \\(M'\\) the LTS\ndepicted on the right. Defined formally, we have \\(M = (W, R, V)\\)\nwith \\(W = \\{x_1,x_2\\}\\), \\(R(\\pi_1) = \\{(x_1,x_1)\\}\\), \\(R(\\pi_2) =\n\\{(x_1,x_2)\\}\\), \\(V(p) = \\{x_1\\}\\), \\(V(q) = \\{x_2\\}\\), and we have\n\\(M' = (W',R',V')\\) with \\(W' = \\{y_1, y_2, y_3, y_4\\}\\), \\(R'(\\pi_1)\n= \\{(y_1, y_2), (y_2, y_2)\\}\\), \\(R'(\\pi_2) = \\{(y_1, y_3), (y_2,\ny_4)\\}\\), \\(V'(p) = \\{y_1, y_2\\}\\), \\(V'(q) = \\{y_3, y_4\\}\\). We have\nfor instance:\n\n\\(M,x_1\\) sat \\(p\\)\n\\(M,x_2\\) sat \\(q\\)\n\\(M,x_1\\) sat \\(\\langle \\pi_1 \\rangle p \\land \\langle \\pi_2\n\\rangle q\\)\n\\(M,x_1\\) sat \\([\\pi_1]p \\land [\\pi^*_1]p\\)\n\\(M',y_1\\) sat \\(\\langle \\pi^*_1;\\pi_2\\rangle q\\)\n\\(M',y_2\\) sat \\([\\pi^*_1] p\\)\n\\(M',y_1\\) sat \\([\\pi_1 \\cup \\pi_2] (p \\lor q)\\)\n\\(M',y_3\\) sat \\([\\pi_1 \\cup \\pi_2] 0\\)\n\n\nNow consider a formula \\(A\\). We say that \\(A\\) is valid in \\(M\\) or\nthat \\(M\\) is a model of \\(A\\), or \u201c\\(M \\models A\\)\u201d, iff\nfor all worlds \\(x\\), \\(x \\in V(A)\\). \\(A\\) is said to be valid, or\n\u201c\\(\\models A\\)\u201d, iff for all models \\(M\\), \\(M \\models\nA\\). We say that \\(A\\) is satisfiable in \\(M\\) or that \\(M\\) satisfies\n\\(A\\), or \u201c\\(M\\) sat \\(A\\)\u201d, iff there exists a world\n\\(x\\) such that \\(x \\in V(A)\\). \\(A\\) is said to be satisfiable, or\n\u201csat \\(A\\)\u201d, iff there exists a model \\(M\\) such that\n\\(M\\) sat \\(A\\). It is notably the case that,\n\nsat \\(A\\) iff not \\(\\models \\lnot A\\)\n\n\\(\\models A\\) iff not sat \\(\\lnot A\\) \n\nSome remarkable formulas of PDL are valid. (The reader may try to\nprove them formally, or at least start convincing themselves on the\nfew examples displayed above.)\n\n\\(\\models [\\alpha ; \\beta]A \\leftrightarrow [\\alpha][\\beta]A\\)\n\n\\(\\models [\\alpha \\cup \\beta]A \\leftrightarrow [\\alpha]A \\land\n[\\beta]A\\)\n\n\\(\\models [\\alpha^*]A \\leftrightarrow A \\land [\\alpha][\\alpha^*]A\\)\n\n\\([A?]B \\leftrightarrow (A \\rightarrow B)\\) \n\nEquivalently, we can write them under their dual form.\n\n\\(\\langle\\alpha ; \\beta\\rangle A \\leftrightarrow\n\\langle\\alpha\\rangle\\langle\\beta\\rangle A\\)\n\n\\(\\langle\\alpha \\cup \\beta\\rangle A \\leftrightarrow\n\\langle\\alpha\\rangle A \\lor \\langle\\beta\\rangle A\\)\n\n\\(\\langle\\alpha^*\\rangle A \\leftrightarrow A \\lor \\langle\\alpha\\rangle\n\\langle\\alpha^*\\rangle A\\)\n\n\\(\\langle A?\\rangle B \\leftrightarrow A \\land B\\) \n\nOne interesting notion concerns the information, expressed with PDL\nformulas, that is contained in an LTS. The behavior of a system\ndescribed as an LTS is indeed often slightly hidden in its form. For\ninstance, on simple inspection, it is easy to convince oneself that\nthe two LTSs depicted above have the same behavior, and satisfy the\nsame PDL formulas. To finish this section on syntax and semantics we\ngive the theoretical foundation of these claims.\n\nGiven two LTSs, one may ask whether they satisfy the same formulas.\nThe notion of bisimulation has become the standard measure for\nequivalence of Kripke models and Labeled Transition Systems. A\nbisimulation between the LTSs \\(M = (W,R,V)\\) and \\(M' =\n(W',R',V')\\) is a binary relation \\(Z\\) between their set of states\nsuch that for all worlds \\(x\\) in \\(W\\) and for all worlds \\(x'\\) in\n\\(W'\\), if \\(xZx'\\) then,\n\nfor all atomic formulas \\(p\\in \\Phi_0\\), we have \\(x\\in V(p)\\) iff\n\\(x' \\in V'(p)\\),\nfor all atomic programs \\(\\pi \\in \\Pi_0\\) and for all worlds \\(y\n\\in W\\), we have that if \\(x R(\\pi)y\\) then there exists a world \\(y'\n\\in W'\\) such that \\(yZy'\\) and \\(x' R'(\\pi)y'\\),\nfor all atomic programs \\(\\pi \\in \\Pi_0\\) and for all worlds \\(y'\n\\in W'\\), we have that if \\(x' R'(\\pi)y'\\) then there exists a world\n\\(y \\in W\\) such that \\(yZy'\\) and \\(x R(\\pi)y\\).\n\n\nWe say that two LTSs are bisimilar when there exists a\nbisimulation between them.\n\nIt is the case that in two bisimilar LTSs \\(M = (W,R,V)\\) and \\(M' =\n(W',R',V')\\), for all worlds \\(x\\) in \\(W\\) and for all worlds \\(x'\\)\nin \\(W'\\), if \\(xZx'\\) then for all PDL formulas \\(A\\), \\(x \\in V(A)\\)\niff \\(x' \\in V'(A)\\). Thus when two LTSs are bisimilar under the\ndefinition of bisimulation above, it is the case that, if \\(xZx'\\)\nthen\n\nfor all programs \\(\\alpha\\) and for all worlds \\(y \\in W\\), we\nhave that if \\(x R(\\alpha)y\\) then there exists a world \\(y' \\in W'\\)\nsuch that \\(yZy'\\) and \\(x' R'(\\alpha)y'\\),\nfor all programs \\(\\alpha\\) and for all worlds \\(y' \\in W'\\), we\nhave that if \\(x' R'(\\alpha)y'\\) then there exists a world \\(y \\in W\\)\nsuch that \\(yZy'\\) and \\(x R(\\alpha)y\\).\n\n\nHence one can simply compare the behaviors of two LTSs by inspecting\nsolely the atomic programs and safely extrapolate on the comparative\nbehavior of these LTSs even for complex programs. We say that the\nprogram constructs of PDL are safe for bisimulation. See Van\nBenthem [1998] for precise characterizations of program constructs\nthat are safe for bisimulation.\n\nIt is readily seen that the two instances of LTSs above are bisimilar.\nA bisimulation \\(Z\\) between the two models \\(M\\) and \\(M'\\) depicted\nin the figures above can be given as: \\(Z = \\{(x_1,y_1), (x_1,y_2),\n(x_2, y_3), (x_2, y_4)\\}\\). The states \\(x_1\\) and \\(y_1\\) satisfy\nexactly the same PDL formulas. So do the states \\(x_1\\) and \\(y_2\\),\netc.\n",
    "section_title": "2.1 Syntax and semantics",
    "entry_title": "Propositional Dynamic Logic",
    "hierarchy_title": "Propositional Dynamic Logic || Definitions and fundamental results || Syntax and semantics",
    "tokenized_text": [
        "definition",
        "fundamental",
        "result",
        "syntax",
        "semantics",
        "syntax",
        "semantics",
        "propositional",
        "dynamic",
        "logic",
        "pdl",
        "designed",
        "representing",
        "reasoning",
        "propositional",
        "property",
        "program",
        "syntax",
        "based",
        "upon",
        "two",
        "set",
        "symbol",
        "countable",
        "set",
        "phi_",
        "atomic",
        "formula",
        "countable",
        "set",
        "pi_",
        "atomic",
        "program",
        "complex",
        "formula",
        "complex",
        "program",
        "base",
        "defined",
        "follows",
        "every",
        "atomic",
        "formula",
        "formula",
        "false",
        "formula",
        "a",
        "formula",
        "lnot",
        "a",
        "a",
        "formula",
        "a",
        "b",
        "formula",
        "alor",
        "b",
        "a",
        "b",
        "formula",
        "alpha",
        "program",
        "formula",
        "alpha",
        "a",
        "every",
        "execution",
        "alpha",
        "present",
        "state",
        "lead",
        "state",
        "a",
        "true",
        "formula",
        "every",
        "atomic",
        "program",
        "program",
        "alpha",
        "beta",
        "program",
        "alpha",
        "beta",
        "alpha",
        "followed",
        "beta",
        "program",
        "alpha",
        "beta",
        "program",
        "alphacupbeta",
        "alpha",
        "beta",
        "nondeterministically",
        "program",
        "alpha",
        "program",
        "alpha",
        "repeat",
        "alpha",
        "finite",
        "nondeterministically",
        "determined",
        "number",
        "time",
        "program",
        "a",
        "formula",
        "proceed",
        "a",
        "true",
        "else",
        "fail",
        "program",
        "boolean",
        "connective",
        "land",
        "to",
        "leftrightarrow",
        "used",
        "abbreviation",
        "standard",
        "way",
        "addition",
        "abbreviate",
        "lnot",
        "alpha",
        "lnot",
        "a",
        "langlealpharangle",
        "a",
        "execution",
        "alpha",
        "present",
        "state",
        "lead",
        "state",
        "a",
        "true",
        "modal",
        "logic",
        "write",
        "alphan",
        "alpha",
        "ldots",
        "alpha",
        "n",
        "occurrence",
        "alpha",
        "formally",
        "alpha",
        "alpha",
        "n",
        "alpha",
        "alphan",
        "also",
        "alpha",
        "alpha",
        "alpha",
        "often",
        "useful",
        "represent",
        "iteration",
        "unbounded",
        "occurs",
        "least",
        "finally",
        "adopt",
        "standard",
        "rule",
        "omission",
        "parenthesis",
        "formula",
        "used",
        "describe",
        "property",
        "hold",
        "successful",
        "execution",
        "program",
        "example",
        "formula",
        "alphacupbeta",
        "a",
        "mean",
        "whenever",
        "program",
        "alpha",
        "beta",
        "successfully",
        "executed",
        "state",
        "reached",
        "a",
        "hold",
        "whereas",
        "formula",
        "langle",
        "alpha",
        "beta",
        "rangle",
        "a",
        "mean",
        "sequence",
        "alternating",
        "execution",
        "alpha",
        "beta",
        "state",
        "reached",
        "a",
        "hold",
        "semantically",
        "speaking",
        "formula",
        "interpreted",
        "set",
        "state",
        "program",
        "interpreted",
        "binary",
        "relation",
        "state",
        "transition",
        "system",
        "precisely",
        "meaning",
        "pdl",
        "formula",
        "program",
        "interpreted",
        "labeled",
        "transition",
        "system",
        "lts",
        "w",
        "r",
        "v",
        "w",
        "nonempty",
        "set",
        "world",
        "state",
        "r",
        "mapping",
        "set",
        "pi_",
        "atomic",
        "program",
        "binary",
        "relation",
        "w",
        "v",
        "mapping",
        "set",
        "phi_",
        "atomic",
        "formula",
        "subset",
        "w",
        "informally",
        "mapping",
        "r",
        "assigns",
        "atomic",
        "program",
        "piinpi_",
        "binary",
        "relation",
        "r",
        "pi",
        "w",
        "intended",
        "meaning",
        "xr",
        "pi",
        "y",
        "iff",
        "exists",
        "execution",
        "pi",
        "x",
        "lead",
        "y",
        "whereas",
        "mapping",
        "v",
        "assigns",
        "atomic",
        "formula",
        "pinphi_",
        "subset",
        "v",
        "p",
        "w",
        "intended",
        "meaning",
        "x",
        "in",
        "v",
        "p",
        "iff",
        "p",
        "true",
        "state",
        "x",
        "given",
        "reading",
        "lnot",
        "a",
        "alor",
        "b",
        "alpha",
        "a",
        "alpha",
        "beta",
        "alphacupbeta",
        "alpha",
        "clear",
        "r",
        "v",
        "must",
        "extended",
        "inductively",
        "follows",
        "supply",
        "intended",
        "meaning",
        "complex",
        "program",
        "formula",
        "xr",
        "alpha",
        "beta",
        "y",
        "iff",
        "exists",
        "world",
        "z",
        "xr",
        "alpha",
        "z",
        "zr",
        "beta",
        "y",
        "xr",
        "alphacupbeta",
        "y",
        "iff",
        "xr",
        "alpha",
        "y",
        "xr",
        "beta",
        "y",
        "xr",
        "alpha",
        "y",
        "iff",
        "exists",
        "nonnegative",
        "integer",
        "n",
        "exists",
        "sequence",
        "state",
        "z_",
        "ldots",
        "z_n",
        "z_",
        "x",
        "z_n",
        "y",
        "k",
        "ldots",
        "n",
        "z_",
        "k",
        "r",
        "alpha",
        "z_k",
        "xr",
        "y",
        "iff",
        "x",
        "y",
        "in",
        "v",
        "v",
        "emptyset",
        "v",
        "lnot",
        "w",
        "setminus",
        "v",
        "v",
        "alor",
        "b",
        "v",
        "cup",
        "v",
        "b",
        "v",
        "alpha",
        "x",
        "mid",
        "text",
        "world",
        "text",
        "xr",
        "alpha",
        "text",
        "in",
        "v",
        "x",
        "in",
        "v",
        "say",
        "a",
        "satisfied",
        "state",
        "x",
        "m",
        "ldquo",
        "x",
        "sat",
        "ardquo",
        "two",
        "labeled",
        "transition",
        "system",
        "w",
        "r",
        "v",
        "left",
        "w",
        "r",
        "v",
        "right",
        "call",
        "m",
        "lts",
        "depicted",
        "left",
        "m",
        "lts",
        "depicted",
        "right",
        "defined",
        "formally",
        "w",
        "r",
        "v",
        "w",
        "x_",
        "x_",
        "r",
        "pi_",
        "x_",
        "x_",
        "r",
        "pi_",
        "x_",
        "x_",
        "v",
        "p",
        "x_",
        "v",
        "q",
        "x_",
        "w",
        "r",
        "v",
        "w",
        "y_",
        "y_",
        "y_",
        "y_",
        "r",
        "pi_",
        "y_",
        "y_",
        "y_",
        "y_",
        "r",
        "pi_",
        "y_",
        "y_",
        "y_",
        "y_",
        "v",
        "p",
        "y_",
        "y_",
        "v",
        "q",
        "y_",
        "y_",
        "instance",
        "x_",
        "sat",
        "p",
        "x_",
        "sat",
        "q",
        "x_",
        "sat",
        "langle",
        "pi_",
        "rangle",
        "p",
        "land",
        "langle",
        "pi_",
        "rangle",
        "q",
        "x_",
        "sat",
        "pi_",
        "p",
        "land",
        "pi",
        "_",
        "p",
        "y_",
        "sat",
        "langle",
        "pi",
        "_",
        "pi_rangle",
        "q",
        "y_",
        "sat",
        "pi",
        "_",
        "p",
        "y_",
        "sat",
        "pi_",
        "cup",
        "pi_",
        "p",
        "lor",
        "q",
        "y_",
        "sat",
        "pi_",
        "cup",
        "pi_",
        "consider",
        "formula",
        "a",
        "say",
        "a",
        "valid",
        "m",
        "m",
        "model",
        "a",
        "models",
        "a",
        "iff",
        "world",
        "x",
        "x",
        "in",
        "v",
        "a",
        "said",
        "valid",
        "models",
        "a",
        "iff",
        "model",
        "m",
        "models",
        "a",
        "say",
        "a",
        "satisfiable",
        "m",
        "m",
        "satisfies",
        "a",
        "m",
        "sat",
        "a",
        "iff",
        "exists",
        "world",
        "x",
        "x",
        "in",
        "v",
        "a",
        "said",
        "satisfiable",
        "sat",
        "a",
        "iff",
        "exists",
        "model",
        "m",
        "m",
        "sat",
        "a",
        "notably",
        "case",
        "sat",
        "a",
        "iff",
        "models",
        "lnot",
        "a",
        "models",
        "a",
        "iff",
        "sat",
        "lnot",
        "a",
        "remarkable",
        "formula",
        "pdl",
        "valid",
        "reader",
        "may",
        "try",
        "prove",
        "formally",
        "least",
        "start",
        "convincing",
        "example",
        "displayed",
        "models",
        "alpha",
        "beta",
        "leftrightarrow",
        "alpha",
        "beta",
        "a",
        "models",
        "alpha",
        "cup",
        "beta",
        "leftrightarrow",
        "alpha",
        "land",
        "beta",
        "a",
        "models",
        "alpha",
        "leftrightarrow",
        "land",
        "alpha",
        "alpha",
        "a",
        "b",
        "leftrightarrow",
        "rightarrow",
        "b",
        "equivalently",
        "write",
        "dual",
        "form",
        "langlealpha",
        "betarangle",
        "leftrightarrow",
        "langlealpharanglelanglebetarangle",
        "a",
        "langlealpha",
        "cup",
        "betarangle",
        "leftrightarrow",
        "langlealpharangle",
        "lor",
        "langlebetarangle",
        "a",
        "langlealpha",
        "rangle",
        "leftrightarrow",
        "lor",
        "langlealpharangle",
        "langlealpha",
        "rangle",
        "a",
        "langle",
        "rangle",
        "b",
        "leftrightarrow",
        "land",
        "b",
        "one",
        "interesting",
        "notion",
        "concern",
        "information",
        "expressed",
        "pdl",
        "formula",
        "contained",
        "lts",
        "behavior",
        "system",
        "described",
        "lts",
        "indeed",
        "often",
        "slightly",
        "hidden",
        "form",
        "instance",
        "simple",
        "inspection",
        "easy",
        "convince",
        "oneself",
        "two",
        "ltss",
        "depicted",
        "behavior",
        "satisfy",
        "pdl",
        "formula",
        "finish",
        "section",
        "syntax",
        "semantics",
        "give",
        "theoretical",
        "foundation",
        "claim",
        "given",
        "two",
        "ltss",
        "one",
        "may",
        "ask",
        "whether",
        "satisfy",
        "formula",
        "notion",
        "bisimulation",
        "become",
        "standard",
        "measure",
        "equivalence",
        "kripke",
        "model",
        "labeled",
        "transition",
        "system",
        "bisimulation",
        "ltss",
        "w",
        "r",
        "v",
        "w",
        "r",
        "v",
        "binary",
        "relation",
        "z",
        "set",
        "state",
        "world",
        "x",
        "w",
        "world",
        "x",
        "w",
        "xzx",
        "atomic",
        "formula",
        "pin",
        "phi_",
        "xin",
        "v",
        "p",
        "iff",
        "x",
        "in",
        "v",
        "p",
        "atomic",
        "program",
        "pi",
        "in",
        "pi_",
        "world",
        "in",
        "w",
        "x",
        "r",
        "pi",
        "y",
        "exists",
        "world",
        "in",
        "w",
        "yzy",
        "x",
        "r",
        "pi",
        "y",
        "atomic",
        "program",
        "pi",
        "in",
        "pi_",
        "world",
        "in",
        "w",
        "x",
        "r",
        "pi",
        "y",
        "exists",
        "world",
        "in",
        "w",
        "yzy",
        "x",
        "r",
        "pi",
        "y",
        "say",
        "two",
        "ltss",
        "bisimilar",
        "exists",
        "bisimulation",
        "case",
        "two",
        "bisimilar",
        "ltss",
        "w",
        "r",
        "v",
        "w",
        "r",
        "v",
        "world",
        "x",
        "w",
        "world",
        "x",
        "w",
        "xzx",
        "pdl",
        "formula",
        "a",
        "x",
        "in",
        "v",
        "iff",
        "x",
        "in",
        "v",
        "thus",
        "two",
        "ltss",
        "bisimilar",
        "definition",
        "bisimulation",
        "case",
        "xzx",
        "program",
        "alpha",
        "world",
        "in",
        "w",
        "x",
        "r",
        "alpha",
        "y",
        "exists",
        "world",
        "in",
        "w",
        "yzy",
        "x",
        "r",
        "alpha",
        "y",
        "program",
        "alpha",
        "world",
        "in",
        "w",
        "x",
        "r",
        "alpha",
        "y",
        "exists",
        "world",
        "in",
        "w",
        "yzy",
        "x",
        "r",
        "alpha",
        "y",
        "hence",
        "one",
        "simply",
        "compare",
        "behavior",
        "two",
        "ltss",
        "inspecting",
        "solely",
        "atomic",
        "program",
        "safely",
        "extrapolate",
        "comparative",
        "behavior",
        "ltss",
        "even",
        "complex",
        "program",
        "say",
        "program",
        "construct",
        "pdl",
        "safe",
        "bisimulation",
        "see",
        "van",
        "benthem",
        "precise",
        "characterization",
        "program",
        "construct",
        "safe",
        "bisimulation",
        "readily",
        "seen",
        "two",
        "instance",
        "ltss",
        "bisimilar",
        "bisimulation",
        "z",
        "two",
        "model",
        "m",
        "m",
        "depicted",
        "figure",
        "given",
        "z",
        "x_",
        "y_",
        "x_",
        "y_",
        "x_",
        "y_",
        "x_",
        "y_",
        "state",
        "x_",
        "y_",
        "satisfy",
        "exactly",
        "pdl",
        "formula",
        "state",
        "x_",
        "y_",
        "etc"
    ]
}