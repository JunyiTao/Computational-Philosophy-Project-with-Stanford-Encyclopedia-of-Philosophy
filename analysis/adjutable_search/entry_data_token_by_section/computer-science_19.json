{
    "main_text": "Implementation || Physical Computation\n5.4 Physical Computation\n\nAccording to this definition, implementation shifts from level to\nlevel: a set of algorithms defining a computational system are\nimplemented as procedures in some formal language,\u00a0as\ninstructions in a high-level language,\u00a0or as operations in a\nlow-level programming language. An interesting question is whether\nany system, beyond computational artifacts, implementing\nprocedures of this sort qualifies as a computational system. In other\nwords, asking about the nature of physical implementation amounts to\nasking what is a computational system. If any system implementing an\nalgorithm would qualify as computational, the class of such systems\ncould be extended to biological systems, such as the brain or the\ncell; to physical systems, including the universe or some portion of\nit; and eventually to any system whatsoever, a thesis known as\npancomputationalism (for an exhaustive overview on the topic\nsee Rapaport 2018).\n\nTraditionally, a computational system is intended as a mechanical\nartifact that takes input data, elaborates them\nalgorithmically according to a set of instructions, and\nreturns manipulated data as outputs. For instance, von Neumann (1945,\np.1) states that \u201cAn automatic computing system is a (usually\nhighly composite) device, which can carry out instructions to perform\ncalculations of a considerable order of complexity\u201d. Such an\ninformal and well-accepted definition leaves some questions open,\nincluding whether computational systems have to be machines, whether\nthey have to process data algorithmically and, consequently, whether\ncomputations have to be Turing complete.\n\nRapaport (2018) provides a more explicit characterization of a\ncomputational system defined as any \u201cphysical plausible\nimplementation of anything logically equivalent to a universal Turing\nmachine\u201d. Strictly speaking personal computers are not physical\nTuring machines, but register machines are known to be Turing\nequivalent. To qualify as computational, systems must be\nplausible implementations thereof, in that Turing machines,\ncontrary to physical machines, have access to infinite memory space\nand are, as abstract machines, error free. According to\nRapaport\u2019s (2018) definition, any physical\nimplementation of this sort is thus a computational system, including\nnatural systems. This raises the question about which class of natural\nsystems is able to implement Turing equivalent computations. Searle\nfamously argued that anything can be an implementation of a Turing\nmachine, or of a logical equivalent model (Searle 1990). His argument\nlevers on the fact that being a Turing machine is a syntactic\nproperty, in that it is all about manipulating tokens of 0\u2019s and\n1\u2019s. According to Searle, syntactic properties are not intrinsic\nto physical systems, but they are assigned to them by an observer. In\nother words, a physical state of a system is not intrinsically a\ncomputational state: there must be an observer, or user, who assigns\nto that state a computational role. It follows that any system whose\nbehavior can be described as syntactic manipulation of 0\u2019s and\n1\u2019s is a computational system.\n\nHayes (1997) objects to Searle (1990) that if everything was a\ncomputational system, the property \u201cbeing a computational\nsystem\u201d would become vacuous, as all entities would possess it.\nInstead, there are entities which are computational systems, and\nentities which are not. Computational systems are those in which the\npatterns received as inputs and saved into memory are able to change\nthemselves. In other words, Hayes makes reference to the fact that\nstored inputs can be both data and instructions and that instructions,\nwhen executed, are able to modify the value of some input data.\n\u201cIf it were paper, it would be \u2018magic paper\u2019 on\nwhich writing might spontaneously change, or new writing appear\u201d\n(Hayes 1997, p. 393). Only systems able to act as \u201cmagic\npaper\u201d can be acknowledged as computational.\n\nA yet different approach comes from Piccinini (2007, 2008) in the\ncontext of his mechanistic analysis of physical computations\n(Piccinini 2015; see also the entry on\n computation in physical systems).\n A physical computing system is a system whose behaviors can be\nexplained mechanistically by describing the computing\nmechanism that brings about those behaviors. Mechanisms can be defined\nby \u201centities and activities organized such that they are\nproductive of regular changes from start or set-up to finish or\ntermination condition\u201d (Machamer et al. 2000; see the entry on\n mechanisms in science).\n Computations, as physical processes, can be understood as those\nmechanisms that \u201cgenerate output strings from input strings in\naccordance with general rules that apply to all input strings and\ndepend on the input (and sometimes internal states)\u201d (Piccinini\n2007, p. 108). It is easy to identify set-up and termination\nconditions for computational processes. Any system which can be\nexplained by describing an underlying computing mechanism is to be\nconsidered a computational system. The focus on explanation helps\nPiccinini avoid the Searlean conclusion that any system is a\ncomputational system: even if one may interpret, in principle, any\ngiven set of entities and activities as a computing mechanism, only\nthe need to explain a certain observed phenomenon in terms of a\ncomputing mechanism defines the system under examination as\ncomputational.\n",
    "section_title": "5.4 Physical Computation",
    "entry_title": "The Philosophy of Computer Science",
    "hierarchy_title": "The Philosophy of Computer Science || Implementation || Physical Computation",
    "tokenized_text": [
        "implementation",
        "physical",
        "computation",
        "physical",
        "computation",
        "according",
        "definition",
        "implementation",
        "shift",
        "level",
        "level",
        "set",
        "algorithm",
        "defining",
        "computational",
        "system",
        "implemented",
        "procedure",
        "formal",
        "language",
        "instruction",
        "highlevel",
        "language",
        "operation",
        "lowlevel",
        "programming",
        "language",
        "interesting",
        "question",
        "whether",
        "system",
        "beyond",
        "computational",
        "artifact",
        "implementing",
        "procedure",
        "sort",
        "qualifies",
        "computational",
        "system",
        "word",
        "asking",
        "nature",
        "physical",
        "implementation",
        "amount",
        "asking",
        "computational",
        "system",
        "system",
        "implementing",
        "algorithm",
        "would",
        "qualify",
        "computational",
        "class",
        "system",
        "could",
        "extended",
        "biological",
        "system",
        "brain",
        "cell",
        "physical",
        "system",
        "including",
        "universe",
        "portion",
        "eventually",
        "system",
        "whatsoever",
        "thesis",
        "known",
        "pancomputationalism",
        "exhaustive",
        "overview",
        "topic",
        "see",
        "rapaport",
        "traditionally",
        "computational",
        "system",
        "intended",
        "mechanical",
        "artifact",
        "take",
        "input",
        "data",
        "elaborates",
        "algorithmically",
        "according",
        "set",
        "instruction",
        "return",
        "manipulated",
        "data",
        "output",
        "instance",
        "von",
        "neumann",
        "p",
        "state",
        "automatic",
        "computing",
        "system",
        "usually",
        "highly",
        "composite",
        "device",
        "carry",
        "instruction",
        "perform",
        "calculation",
        "considerable",
        "order",
        "complexity",
        "informal",
        "wellaccepted",
        "definition",
        "leaf",
        "question",
        "open",
        "including",
        "whether",
        "computational",
        "system",
        "machine",
        "whether",
        "process",
        "data",
        "algorithmically",
        "consequently",
        "whether",
        "computation",
        "turing",
        "complete",
        "rapaport",
        "provides",
        "explicit",
        "characterization",
        "computational",
        "system",
        "defined",
        "physical",
        "plausible",
        "implementation",
        "anything",
        "logically",
        "equivalent",
        "universal",
        "turing",
        "machine",
        "strictly",
        "speaking",
        "personal",
        "computer",
        "physical",
        "turing",
        "machine",
        "register",
        "machine",
        "known",
        "turing",
        "equivalent",
        "qualify",
        "computational",
        "system",
        "must",
        "plausible",
        "implementation",
        "thereof",
        "turing",
        "machine",
        "contrary",
        "physical",
        "machine",
        "access",
        "infinite",
        "memory",
        "space",
        "abstract",
        "machine",
        "error",
        "free",
        "according",
        "rapaport",
        "definition",
        "physical",
        "implementation",
        "sort",
        "thus",
        "computational",
        "system",
        "including",
        "natural",
        "system",
        "raise",
        "question",
        "class",
        "natural",
        "system",
        "able",
        "implement",
        "turing",
        "equivalent",
        "computation",
        "searle",
        "famously",
        "argued",
        "anything",
        "implementation",
        "turing",
        "machine",
        "logical",
        "equivalent",
        "model",
        "searle",
        "argument",
        "lever",
        "fact",
        "turing",
        "machine",
        "syntactic",
        "property",
        "manipulating",
        "token",
        "according",
        "searle",
        "syntactic",
        "property",
        "intrinsic",
        "physical",
        "system",
        "assigned",
        "observer",
        "word",
        "physical",
        "state",
        "system",
        "intrinsically",
        "computational",
        "state",
        "must",
        "observer",
        "user",
        "assigns",
        "state",
        "computational",
        "role",
        "follows",
        "system",
        "whose",
        "behavior",
        "described",
        "syntactic",
        "manipulation",
        "computational",
        "system",
        "hayes",
        "object",
        "searle",
        "everything",
        "computational",
        "system",
        "property",
        "computational",
        "system",
        "would",
        "become",
        "vacuous",
        "entity",
        "would",
        "posse",
        "instead",
        "entity",
        "computational",
        "system",
        "entity",
        "computational",
        "system",
        "pattern",
        "received",
        "input",
        "saved",
        "memory",
        "able",
        "change",
        "word",
        "hayes",
        "make",
        "reference",
        "fact",
        "stored",
        "input",
        "data",
        "instruction",
        "instruction",
        "executed",
        "able",
        "modify",
        "value",
        "input",
        "data",
        "paper",
        "would",
        "magic",
        "paper",
        "writing",
        "might",
        "spontaneously",
        "change",
        "new",
        "writing",
        "appear",
        "hayes",
        "p",
        "system",
        "able",
        "act",
        "magic",
        "paper",
        "acknowledged",
        "computational",
        "yet",
        "different",
        "approach",
        "come",
        "piccinini",
        "context",
        "mechanistic",
        "analysis",
        "physical",
        "computation",
        "piccinini",
        "see",
        "also",
        "entry",
        "computation",
        "physical",
        "system",
        "physical",
        "computing",
        "system",
        "system",
        "whose",
        "behavior",
        "explained",
        "mechanistically",
        "describing",
        "computing",
        "mechanism",
        "brings",
        "behavior",
        "mechanism",
        "defined",
        "entity",
        "activity",
        "organized",
        "productive",
        "regular",
        "change",
        "start",
        "setup",
        "finish",
        "termination",
        "condition",
        "machamer",
        "et",
        "al",
        "see",
        "entry",
        "mechanism",
        "science",
        "computation",
        "physical",
        "process",
        "understood",
        "mechanism",
        "generate",
        "output",
        "string",
        "input",
        "string",
        "accordance",
        "general",
        "rule",
        "apply",
        "input",
        "string",
        "depend",
        "input",
        "sometimes",
        "internal",
        "state",
        "piccinini",
        "p",
        "easy",
        "identify",
        "setup",
        "termination",
        "condition",
        "computational",
        "process",
        "system",
        "explained",
        "describing",
        "underlying",
        "computing",
        "mechanism",
        "considered",
        "computational",
        "system",
        "focus",
        "explanation",
        "help",
        "piccinini",
        "avoid",
        "searlean",
        "conclusion",
        "system",
        "computational",
        "system",
        "even",
        "one",
        "may",
        "interpret",
        "principle",
        "given",
        "set",
        "entity",
        "activity",
        "computing",
        "mechanism",
        "need",
        "explain",
        "certain",
        "observed",
        "phenomenon",
        "term",
        "computing",
        "mechanism",
        "defines",
        "system",
        "examination",
        "computational"
    ]
}