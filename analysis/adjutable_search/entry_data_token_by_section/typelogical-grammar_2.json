{
    "main_text": "The Lambek systems || The syntax-semantics interface\n2.2 The syntax-semantics interface\nIn order to give equal weight to syntactic and semantic\nconsiderations, we can set up a categorial grammar as a pair of\ncalculi linked by a compositional interpretation: a\nsyntactic source calculus, a semantic target\ncalculus, and a homomorphism mapping types and derivations of the\nsource to the corresponding types and derivations of the target. In\nthis section, we work out this architecture for the standard Lambek\ncalculi. In the following section, we will see how the extended\ncategorial type logics reflect different views on the division of\nlabour between syntax and semantics, and hence on the amount of work\nthat has to be done to achieve a compositional mapping between the\ntwo.\n\n\n\n(N)L{n,np,s}/,\\\n(\u00b7)\u2032\nLP{e,t}\u2192\n\n\nSyntax\nhomomorphism\nSemantics\n\n\n\nThe semantic study of categorial deduction started with van Benthem\n1983.  In line with the Curry-Howard \u2018formulas-as-types,\nproofs-as-programs\u2019 method, derivations in the various\ncategorial calculi are associated with terms of suitable fragments of\nthe lambda calculus. For the sake of simplicity, we restrict attention\nto the implicational vocabulary: the directional slashes for\n(N)L, and the non-directional implication\nof LP.\n\nLet us start with the Curry-Howard correspondence for LP. The\nchoice of LP as the calculus of natural language semantics captures\nthe fact that meaning composition is a resource-sensitive process: in\ninterpreting a derivation, no material can be copied or thrown away.\nLet us refer to the terms of the simply typed linear lambda calculus\nas \u039b(Lin).  In the absence of Contraction and Weakening, this\nis the smallest set such that, given a denumerably infinite set of\nvariables Var,\n\nx \u2208 \u039b(Lin) if x \u2208 Var;\n\u03bbx.M \u2208 \u039b(Lin) if x\n\u2208 Var, M \u2208 \u039b(Lin), and there is exactly one\nfree variable occurrence of x in M;\n(M N) \u2208 \u039b(Lin) if M \u2208\n\u039b(Lin), N \u2208 \u039b(Lin), and the sets of free variables\nof M and N are disjoint.\n\nFrom \u039b(Lin), one obtains \u039b(LP), the terms in\nCurry-Howard correspondence with LP derivations, by adding one\nextra restriction, reflecting the requirement that sequent antecedents\nmust be non-empty: every subterm contains at least one free variable.\nThe derivations of LP are now read as judgements of a type\ninference system for \u039b(LP).  Derivations are given in\nthe natural deduction style, with elimination and introduction rules\nfor the linear implication \u2192. Judgements then are sequents of the\nform \u0393 \u22a2 M : B.  \u0393 is a non-empty\nmultiset of typing declarations x1\n: A1, \u2026,\nxn : An;\nthe Ai and B are linear implicative\ntypes, and M is a \u039b(LP) term of type B\nbuilt out of the xi of\ntype Ai. Axiom sequents are of the\nform x : A \u22a2 x : A. Elimination\nand Introduction rules for the linear implication are given below. In\nthe Introduction rule, x \u2209 dom(\u0393); in the\nElimination rule dom(\u0393) \u2229 dom(\u0394) = \u2205.\n\n\n\n\n\n\n\n\u0393,x : A \u22a2 M : B\n\n\n\u0393 \u22a2\n\u03bbx.M : A \u2192 B\n\n\n\n\u2192I\n\n\n\n\n\n\n\u0393 \u22a2 M : A \u2192 B\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u0394 \u22a2 N : A\n\n\n\u0393,\u0394 \u22a2\n(M N) : B\n\n\n\n\u2192E\n\n\n\n\n\nThe syntactic calculi (N)L, similarly, are in\nCurry-Howard correspondence with directional linear lambda\nterms (Wansing 1992). There is no standard notation. In the\ndirectional typing rules below, we use \u03bbr\nvs \u03bbl for the image of the slash and\nbackslash Introduction rules; in the case of the Elimination rules, we\nhave right and left function application, with the triangle pointing\nto the function. The antecedent is now a (bracketed) string of typing\ndeclarations xi : Ai.\n\n\n\n\n\n\n\n(\u0393,x : A) \u22a2 M : B\n\n\n\u0393 \u22a2 \u03bbrx.M : B/A\n\n\n\nI/\n\n\n\n\n\n\n(x :\nA,\u0393) \u22a2 M : B\n\n\n\u0393 \u22a2 \u03bblx.M : A\\B\n\n\n\nI\\\n\n\n\n\n\n\n\n\n\u0393\n\u22a2 M : B/A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u0394 \u22a2 N : A\n\n\n(\u0393,\u0394) \u22a2 (M \u22b2 N) : B\n\n\n\nE/\n\n\n\n\n\n\n\u0393 \u22a2 N : A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u0394 \u22a2 M : A\\B\n\n\n(\u0393,\u0394) \u22a2 (N \u22b3 M) : B\n\n\n\nE\\\n\n\n\n\n\nThe source and target calculi each have their own set of basic\ntypes, motivated by syntactic and semantic considerations\nrespectively.  At the syntactic end, one could discriminate between\nsentences s, noun phrases np, common\nnouns n, for example.  At the semantic end, for a simple\nextensional interpretation, one could introduce two basic types, e and\nt. Set-theoretic interpretation for the semantic types is\nthen given in terms of a non-empty set of\nindividuals/entities E and the truth values {0,1}.\nDenotation domains Dom(A) for semantic types A are\nset up such that Dom(e) = E, Dom(t) = {0,1}\nand Dom(A\\B) = Dom(B/A) is the set\nof functions from Dom(A) to Dom(B).\n\nConsider next the homomorphic mapping from the syntactic source\ncalculus to the semantic target calculus. The mapping is specified at\nthe level of types and at the level of proofs (terms). Setting up the\nmapping at the level of atomic types as below, sentences denote truth\nvalues; (proper) noun phrases individuals; common nouns functions from\nindividuals to truth values. For complex syntactic types, the\ninterpretation function sends the two directional implications to the\nlinear implication of the target calculus. At the level of proofs\n(terms), likewise, the directional constructs of the syntactic source\ncalculus are identified in the interpretation. (We use a primed\nversion for the target variable corresponding to a source variable, as\na reminder of the fact that the type of these expressions is\ndifferent.)\n\ntypes: (np)\u2032 = e, (s)\u2032\n= t, (n)\u2032 = e \u2192 t,\n(A\\B)\u2032 = (B/A)\u2032 =\nA\u2032 \u2192 B\u2032\nterms: (x)\u2032 = x\u2032,\n(\u03bbrx.M)\u2032 =\n(\u03bblx.M)\u2032 =\n\u03bbx\u2032.(M)\u2032, (N\n\u22b3 M)\u2032 = (M \u22b2 N)\u2032 =\n((M)\u2032 (N)\u2032)\n\n\nIn the previous sections, we have seen that the theorems of NL,\nL and LP form a proper inclusion hierarchy.  The\nsemantic counterpart is that in moving to more discriminating\nsyntactic calculi, more and more LP terms are lost in\ntranslation: desirable recipes for meaning assembly are often\nunobtainable as the image of (N)L proofs.  For the three\ncalculi, the table below gives a characteristic type transition.  The\nsecond row has the directional proof terms associated with the\n(N)L type transitions; the third row gives the\ncorresponding LP term, obtained via the translation\nhomomorphism, in the case of (N)L, or directly for\nthe LP case.\n\n\n\n\n\nNL:  argument lowering\nL: composition\nLP:  argument raising\n\n\n(B/(A\\B))\\C \u22a2 A\\C\nA\\B \u22a2 (A\\C)/(B\\C)\nA \u2192 (B \u2192 C) \u22a2 \n((A\u2009\u2192\u2009C)\u2009\u2192\u2009C)\u2009\u2192\u2009(B\u2009\u2192\u2009C)\n\n\nz \u22a2 \u03bblx.((\u03bbry.(x \u22b3 y)) \u22b3 z)\ny \u22a2 \u03bbrz\u03bblx.((x \u22b3 y) \u22b3 z)\n\n\n\nz\u2032 \u22a2 \u03bbx\u2032.(z\u2032 \u03bby\u2032.(y\u2032 x\u2032))\ny\u2032 \u22a2 \u03bbz\u2032\u03bbx\u2032.(z\u2032 (y\u2032 x\u2032))\nx \u22a2 \u03bbw\u03bbz.(w \u03bby.((x y) z))\n\n\nArgument lowering is valid in NL, hence also in\nL, LP. Function composition depends on associativity; it\nis invalid in NL, valid in L(P). Function\ncomposition has been used to build up partial semantic\nrepresentations, running in parallel with the incremental\n(left-to-right) processing of a string. Argument raising, finally, is\nvalid only in LP, i.e., this form of meaning assembly cannot be\nobtained as the image of a derivation in any of the syntactic calculi\n(N)L. But, as we will see below, this transition plays\nan important role in the analysis of natural language scope\nambiguities.\nDerivational versus lexical semantics.  The constraints\nimposed by resource-sensitivity put severe limitations on the\nexpressivity of the derivational semantics. To some extent, these can\nbe overcome at the level of lexical semantics. The\nCurry-Howard term associated with a derivation, seen as a program for\nmeaning assembly, abstracts from the contribution of particular\nlexical items.  The semantic specification for a lexical item of\ntype A takes the form of a lambda term of the corresponding\nsemantic type A\u2032, but this lambda term is no longer\nrequired to be linear.  Below some examples of non-linear lexical\nmeaning recipes.  The specification for the reflexive pronoun\n\u2018himself\u2019 is a pure combinator (a closed term): it\nidentifies the first and second argument of a binary relation.  The\nterms for the relative pronoun \u2018that\u2019 or for the\ndeterminers \u2018a, some\u2019 have an abstraction that binds two\noccurrences of a variable, so as to compute the intersection of their\ntwo (e \u2192 t) arguments (noun and verb phrase),\nand to test the intersection for non-emptiness in the case of\n\u2018some\u2019.\n\n\n\n\n\n\nNL type\nLP type\nLexical recipe\n\n\nhimself\n((np\\s)/np)\\(np\\s)\n(e\u2192e\u2192t)\u2192e\u2192t\n\u03bbR\u03bbx.((R x) x)\n\n\na, some\n(s/(np\\s))/n \n(e\u2192t)\u2192(e\u2192t)\u2192t\n\u03bbP\u03bbQ.(\u2203 \u03bbx.((P x)\u2227(Q x)))\n\n\nthat\n(n\\n)/(np\\s)\n(e\u2192t)\u2192(e\u2192t)\u2192e\u2192t\n\u03bbP\u03bbQ\u03bbx.((P x)\u2227(Q x)))\n\n\nThe interplay between lexical and derivational aspects of meaning\nassembly is illustrated with the example below. Notice that the linear\nproof term reflects the derivational history (modulo directionality);\nafter substitution of the lexical recipes and \u03b2 conversion this\ntransparency is lost. The full encapsulation of lexical semantics is\none of the strong attractions of the categorial approach.\n\nstring: \u2018a boy hurt himself\u2019\nNL derivation: (x :\n(s/np\\s)/n,y\n: n),(z :\n((np\\s)/np,w :\n((np\\s)/np)\\(np\\s))\n\u22a2 M : s\ncorresponding LP proof term: (M)\u2032 =\n((x\u2032 y\u2032)\n(w\u2032 z\u2032))\nlexical insertion: x\u2032 \u21a6\n\u03bbP\u03bbQ.(\u2203\n\u03bbx.((P\nx)\u2227(Q x))),y\u2032\n\u21a6 boy,z\u2032 \u21a6 hurt,w\u2032 \u21a6\n\u03bbR\u03bbx.((R x) x)\nfinal result after \u03b2 conversion: (\u2203\n \u03bbx.((boy x) \u2227 (hurt x x)))\n\n",
    "section_title": "2.2 The syntax-semantics interface",
    "entry_title": "Typelogical Grammar",
    "hierarchy_title": "Typelogical Grammar || The Lambek systems || The syntax-semantics interface",
    "tokenized_text": [
        "lambek",
        "system",
        "syntaxsemantics",
        "interface",
        "syntaxsemantics",
        "interface",
        "order",
        "give",
        "equal",
        "weight",
        "syntactic",
        "semantic",
        "consideration",
        "set",
        "categorial",
        "grammar",
        "pair",
        "calculus",
        "linked",
        "compositional",
        "interpretation",
        "syntactic",
        "source",
        "calculus",
        "semantic",
        "target",
        "calculus",
        "homomorphism",
        "mapping",
        "type",
        "derivation",
        "source",
        "corresponding",
        "type",
        "derivation",
        "target",
        "section",
        "work",
        "architecture",
        "standard",
        "lambek",
        "calculus",
        "following",
        "section",
        "see",
        "extended",
        "categorial",
        "type",
        "logic",
        "reflect",
        "different",
        "view",
        "division",
        "labour",
        "syntax",
        "semantics",
        "hence",
        "amount",
        "work",
        "done",
        "achieve",
        "compositional",
        "mapping",
        "two",
        "n",
        "l",
        "n",
        "np",
        "lp",
        "e",
        "syntax",
        "homomorphism",
        "semantics",
        "semantic",
        "study",
        "categorial",
        "deduction",
        "started",
        "van",
        "benthem",
        "line",
        "curryhoward",
        "formulasastypes",
        "proofsasprograms",
        "method",
        "derivation",
        "various",
        "categorial",
        "calculus",
        "associated",
        "term",
        "suitable",
        "fragment",
        "lambda",
        "calculus",
        "sake",
        "simplicity",
        "restrict",
        "attention",
        "implicational",
        "vocabulary",
        "directional",
        "slash",
        "n",
        "l",
        "nondirectional",
        "implication",
        "lp",
        "let",
        "u",
        "start",
        "curryhoward",
        "correspondence",
        "lp",
        "choice",
        "lp",
        "calculus",
        "natural",
        "language",
        "semantics",
        "capture",
        "fact",
        "meaning",
        "composition",
        "resourcesensitive",
        "process",
        "interpreting",
        "derivation",
        "material",
        "copied",
        "thrown",
        "away",
        "let",
        "u",
        "refer",
        "term",
        "simply",
        "typed",
        "linear",
        "lambda",
        "calculus",
        "\u03bb",
        "lin",
        "absence",
        "contraction",
        "weakening",
        "smallest",
        "set",
        "given",
        "denumerably",
        "infinite",
        "set",
        "variable",
        "var",
        "x",
        "\u03bb",
        "lin",
        "x",
        "var",
        "\u03bbxm",
        "\u03bb",
        "lin",
        "x",
        "var",
        "\u03bb",
        "lin",
        "exactly",
        "one",
        "free",
        "variable",
        "occurrence",
        "x",
        "n",
        "\u03bb",
        "lin",
        "\u03bb",
        "lin",
        "n",
        "\u03bb",
        "lin",
        "set",
        "free",
        "variable",
        "n",
        "disjoint",
        "\u03bb",
        "lin",
        "one",
        "obtains",
        "\u03bb",
        "lp",
        "term",
        "curryhoward",
        "correspondence",
        "lp",
        "derivation",
        "adding",
        "one",
        "extra",
        "restriction",
        "reflecting",
        "requirement",
        "sequent",
        "antecedent",
        "must",
        "nonempty",
        "every",
        "subterm",
        "contains",
        "least",
        "one",
        "free",
        "variable",
        "derivation",
        "lp",
        "read",
        "judgement",
        "type",
        "inference",
        "system",
        "\u03bb",
        "lp",
        "derivation",
        "given",
        "natural",
        "deduction",
        "style",
        "elimination",
        "introduction",
        "rule",
        "linear",
        "implication",
        "judgement",
        "sequents",
        "form",
        "\u03b3",
        "b",
        "\u03b3",
        "nonempty",
        "multiset",
        "typing",
        "declaration",
        "x",
        "a",
        "xn",
        "ai",
        "b",
        "linear",
        "implicative",
        "type",
        "\u03bb",
        "lp",
        "term",
        "type",
        "b",
        "built",
        "xi",
        "type",
        "ai",
        "axiom",
        "sequents",
        "form",
        "x",
        "x",
        "a",
        "elimination",
        "introduction",
        "rule",
        "linear",
        "implication",
        "given",
        "introduction",
        "rule",
        "x",
        "dom",
        "\u03b3",
        "elimination",
        "rule",
        "dom",
        "\u03b3",
        "dom",
        "\u03b4",
        "\u03b3",
        "x",
        "b",
        "\u03b3",
        "\u03bbxm",
        "b",
        "i",
        "\u03b3",
        "b",
        "\u03b4",
        "n",
        "\u03b3",
        "\u03b4",
        "n",
        "b",
        "e",
        "syntactic",
        "calculus",
        "n",
        "l",
        "similarly",
        "curryhoward",
        "correspondence",
        "directional",
        "linear",
        "lambda",
        "term",
        "wansing",
        "standard",
        "notation",
        "directional",
        "typing",
        "rule",
        "use",
        "\u03bbr",
        "v",
        "\u03bbl",
        "image",
        "slash",
        "backslash",
        "introduction",
        "rule",
        "case",
        "elimination",
        "rule",
        "right",
        "left",
        "function",
        "application",
        "triangle",
        "pointing",
        "function",
        "antecedent",
        "bracketed",
        "string",
        "typing",
        "declaration",
        "xi",
        "ai",
        "\u03b3",
        "x",
        "b",
        "\u03b3",
        "\u03bbrxm",
        "ba",
        "i",
        "x",
        "\u03b3",
        "b",
        "\u03b3",
        "\u03bblxm",
        "ab",
        "i",
        "\u03b3",
        "ba",
        "\u03b4",
        "n",
        "\u03b3",
        "\u03b4",
        "n",
        "b",
        "e",
        "\u03b3",
        "n",
        "\u03b4",
        "ab",
        "\u03b3",
        "\u03b4",
        "n",
        "b",
        "e",
        "source",
        "target",
        "calculus",
        "set",
        "basic",
        "type",
        "motivated",
        "syntactic",
        "semantic",
        "consideration",
        "respectively",
        "syntactic",
        "end",
        "one",
        "could",
        "discriminate",
        "sentence",
        "noun",
        "phrase",
        "np",
        "common",
        "noun",
        "n",
        "example",
        "semantic",
        "end",
        "simple",
        "extensional",
        "interpretation",
        "one",
        "could",
        "introduce",
        "two",
        "basic",
        "type",
        "e",
        "t",
        "settheoretic",
        "interpretation",
        "semantic",
        "type",
        "given",
        "term",
        "nonempty",
        "set",
        "individualsentities",
        "e",
        "truth",
        "value",
        "denotation",
        "domain",
        "dom",
        "semantic",
        "type",
        "set",
        "dom",
        "e",
        "e",
        "dom",
        "dom",
        "ab",
        "dom",
        "ba",
        "set",
        "function",
        "dom",
        "dom",
        "b",
        "consider",
        "next",
        "homomorphic",
        "mapping",
        "syntactic",
        "source",
        "calculus",
        "semantic",
        "target",
        "calculus",
        "mapping",
        "specified",
        "level",
        "type",
        "level",
        "proof",
        "term",
        "setting",
        "mapping",
        "level",
        "atomic",
        "type",
        "sentence",
        "denote",
        "truth",
        "value",
        "proper",
        "noun",
        "phrase",
        "individual",
        "common",
        "noun",
        "function",
        "individual",
        "truth",
        "value",
        "complex",
        "syntactic",
        "type",
        "interpretation",
        "function",
        "sends",
        "two",
        "directional",
        "implication",
        "linear",
        "implication",
        "target",
        "calculus",
        "level",
        "proof",
        "term",
        "likewise",
        "directional",
        "construct",
        "syntactic",
        "source",
        "calculus",
        "identified",
        "interpretation",
        "use",
        "primed",
        "version",
        "target",
        "variable",
        "corresponding",
        "source",
        "variable",
        "reminder",
        "fact",
        "type",
        "expression",
        "different",
        "type",
        "np",
        "e",
        "n",
        "e",
        "ab",
        "ba",
        "a",
        "b",
        "term",
        "x",
        "x",
        "\u03bbrxm",
        "\u03bblxm",
        "\u03bbx",
        "n",
        "n",
        "n",
        "previous",
        "section",
        "seen",
        "theorem",
        "nl",
        "l",
        "lp",
        "form",
        "proper",
        "inclusion",
        "hierarchy",
        "semantic",
        "counterpart",
        "moving",
        "discriminating",
        "syntactic",
        "calculus",
        "lp",
        "term",
        "lost",
        "translation",
        "desirable",
        "recipe",
        "meaning",
        "assembly",
        "often",
        "unobtainable",
        "image",
        "n",
        "l",
        "proof",
        "three",
        "calculus",
        "table",
        "give",
        "characteristic",
        "type",
        "transition",
        "second",
        "row",
        "directional",
        "proof",
        "term",
        "associated",
        "n",
        "l",
        "type",
        "transition",
        "third",
        "row",
        "give",
        "corresponding",
        "lp",
        "term",
        "obtained",
        "via",
        "translation",
        "homomorphism",
        "case",
        "n",
        "l",
        "directly",
        "lp",
        "case",
        "nl",
        "argument",
        "lowering",
        "l",
        "composition",
        "lp",
        "argument",
        "raising",
        "b",
        "ab",
        "c",
        "ac",
        "ab",
        "ac",
        "bc",
        "b",
        "c",
        "c",
        "c",
        "b",
        "c",
        "z",
        "\u03bblx",
        "\u03bbry",
        "x",
        "z",
        "\u03bbrz\u03bblx",
        "x",
        "z",
        "z",
        "\u03bbx",
        "z",
        "\u03bby",
        "y",
        "x",
        "y",
        "\u03bbz\u03bbx",
        "z",
        "y",
        "x",
        "x",
        "\u03bbw\u03bbz",
        "w",
        "\u03bby",
        "x",
        "z",
        "argument",
        "lowering",
        "valid",
        "nl",
        "hence",
        "also",
        "l",
        "lp",
        "function",
        "composition",
        "depends",
        "associativity",
        "invalid",
        "nl",
        "valid",
        "l",
        "p",
        "function",
        "composition",
        "used",
        "build",
        "partial",
        "semantic",
        "representation",
        "running",
        "parallel",
        "incremental",
        "lefttoright",
        "processing",
        "string",
        "argument",
        "raising",
        "finally",
        "valid",
        "lp",
        "ie",
        "form",
        "meaning",
        "assembly",
        "obtained",
        "image",
        "derivation",
        "syntactic",
        "calculus",
        "n",
        "l",
        "see",
        "transition",
        "play",
        "important",
        "role",
        "analysis",
        "natural",
        "language",
        "scope",
        "ambiguity",
        "derivational",
        "versus",
        "lexical",
        "semantics",
        "constraint",
        "imposed",
        "resourcesensitivity",
        "put",
        "severe",
        "limitation",
        "expressivity",
        "derivational",
        "semantics",
        "extent",
        "overcome",
        "level",
        "lexical",
        "semantics",
        "curryhoward",
        "term",
        "associated",
        "derivation",
        "seen",
        "program",
        "meaning",
        "assembly",
        "abstract",
        "contribution",
        "particular",
        "lexical",
        "item",
        "semantic",
        "specification",
        "lexical",
        "item",
        "type",
        "take",
        "form",
        "lambda",
        "term",
        "corresponding",
        "semantic",
        "type",
        "a",
        "lambda",
        "term",
        "longer",
        "required",
        "linear",
        "example",
        "nonlinear",
        "lexical",
        "meaning",
        "recipe",
        "specification",
        "reflexive",
        "pronoun",
        "pure",
        "combinator",
        "closed",
        "term",
        "identifies",
        "first",
        "second",
        "argument",
        "binary",
        "relation",
        "term",
        "relative",
        "pronoun",
        "determiner",
        "abstraction",
        "bind",
        "two",
        "occurrence",
        "variable",
        "compute",
        "intersection",
        "two",
        "e",
        "argument",
        "noun",
        "verb",
        "phrase",
        "test",
        "intersection",
        "nonemptiness",
        "case",
        "nl",
        "type",
        "lp",
        "type",
        "lexical",
        "recipe",
        "nps",
        "np",
        "nps",
        "eet",
        "et",
        "\u03bbr\u03bbx",
        "r",
        "x",
        "x",
        "s",
        "nps",
        "n",
        "et",
        "et",
        "t",
        "\u03bbp\u03bbq",
        "\u03bbx",
        "p",
        "x",
        "q",
        "x",
        "nn",
        "nps",
        "et",
        "et",
        "et",
        "\u03bbp\u03bbq\u03bbx",
        "p",
        "x",
        "q",
        "x",
        "interplay",
        "lexical",
        "derivational",
        "aspect",
        "meaning",
        "assembly",
        "illustrated",
        "example",
        "notice",
        "linear",
        "proof",
        "term",
        "reflects",
        "derivational",
        "history",
        "modulo",
        "directionality",
        "substitution",
        "lexical",
        "recipe",
        "\u03b2",
        "conversion",
        "transparency",
        "lost",
        "full",
        "encapsulation",
        "lexical",
        "semantics",
        "one",
        "strong",
        "attraction",
        "categorial",
        "approach",
        "string",
        "boy",
        "hurt",
        "nl",
        "derivation",
        "x",
        "snps",
        "n",
        "n",
        "z",
        "nps",
        "np",
        "w",
        "nps",
        "np",
        "nps",
        "corresponding",
        "lp",
        "proof",
        "term",
        "x",
        "y",
        "w",
        "z",
        "lexical",
        "insertion",
        "x",
        "\u03bbp\u03bbq",
        "\u03bbx",
        "p",
        "x",
        "q",
        "x",
        "y",
        "boy",
        "z",
        "hurt",
        "w",
        "\u03bbr\u03bbx",
        "r",
        "x",
        "x",
        "final",
        "result",
        "\u03b2",
        "conversion",
        "\u03bbx",
        "boy",
        "x",
        "hurt",
        "x",
        "x"
    ]
}