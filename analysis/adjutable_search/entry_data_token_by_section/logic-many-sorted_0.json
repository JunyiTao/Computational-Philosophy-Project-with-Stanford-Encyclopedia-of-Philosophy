{
    "main_text": "Syntax and Semantics || Examples\n1.1 Examples\n\nWe start with a few examples to illustrate how common statements\nconcerning different types of data can be formalized in many-sorted\nfirst-order logic.\nExample: Euclid\u2019s first principle\n\nLet us begin with geometry, by talking about straight lines and\npoints. According to Euclid\u2019s first principle:\n\nA straight line can be drawn joining any two points.\n\nIn two sorted first-order logic one can use \\(X,\\) \\(Y,\\)\u2026 as\nvariables for sort \\(l\\) (straight lines) and \\(x,\\) \\(y,\\)\u2026 as\nvariables for sort \\(p\\) (points). To formulate Euclid\u2019s\nprinciple we write: \n\\[\\forall x\\;\\forall y(x\\not=y\\rightarrow \\exists X(\\Join(Xxy)\\land \\forall Y(\\Join(Yxy)\\rightarrow X=Y)))\\]\n\n\nIn this example, \\(\\Join\\) is a 3-place predicate symbol relating\na straight line and two points, \n\\[\\Join(Yxy):= Y \\textrm{ joins } x \\textrm{ and } y\\]\n\n\nLiterally our formalization reads: \u201cFor any two points there\nis a unique straight line joining them\u201d.\nExample: Binary relations\n\nAnother mathematical example is about asymmetry and\nanti-symmetry, both of which are properties of some binary\nrelations. Suppose we wanted to express the claim:\n\nEvery asymmetric binary relation is also anti-symmetric.\n\nTo formalize the statement as a single logically valid\nsentence we need: (1) to express asymmetry and anti-symmetry,\nand (2) to quantify over binary relations. In a suitable first-order\nlanguage including \\(R\\) as a binary relation symbol, to express that\n\\(R\\) is asymmetric we write: \n\\[\\Asymm(R):=\\forall x\\, \\forall y(Rxy\\rightarrow \\lnot Ryx)\\]\n\n\nand to say that \\(R\\) is anti-symmetric we write: \n\\[\\Antisymm(R):=\\forall x\\,\\forall y(Rxy\\land Ryx\\rightarrow x=y)\\]\n\n\nIn ordinary one-sorted first-order logic, this would be a logically\nvalid scheme: \n\\[\\Asymm(R)\\rightarrow \\Antisymm(R)\\]\n\n\nWhat we get is an infinite set of formulas obtained by replacing \\(R\\)\nby any other binary relation symbol. However, we wanted a single\nlogically valid sentence and so we need to quantify over\nbinary relations. In second-order logic, taking \\(X^{2},\\)\n\\(Y^{2},\\)\u2026 as variables for binary relations we write:\n\n\\[\\forall X^{2}(\\Asymm(X^{2})\\rightarrow \\Antisymm(X^{2}))\\]\n\n\nBut since standard second-order logic lacks some of the nice\nproperties of first-order logic\n (section 4.1),\n one could instead go for a two-sorted first-order logic, in which\nboth individuals and relations between individuals are first-class\ncitizens one can quantify over. We would have variables \\(x,\\)\n\\(y,\\ldots\\) of sort \\(i\\) (individuals), and \\(X^{2},\\)\n\\(Y^{2},\\ldots\\) of sort \\(r\\) (binary relations between individuals).\nHowever, it is not enough to label our variables as individuals or\nbinary relations, we need them to perform as second-order variables do. \nA three-place predicate symbol relating binary\nrelations and individuals, \\(\\epsilon_{2} xyX^{2}\\), needs to be added\nso that \\(\\Asymm(X^{2})\\) becomes: \n\\[\\Asymm(X^{2}):=\\forall x\\,\\forall y(\\epsilon _{2} xyX^{2}\\rightarrow \\lnot \\epsilon_{2} yxX^{2})\\]\n\n\nand similarly for \\(\\Antisymm(X^{2})\\).\n\nAs we will see in\n section 4.2,\n rewriting the second order formula \\(X^{2}xy\\) as \n\\(\\epsilon_{2}xyX^{2}\\) \nis all we do when translating second-order logic into\nmany-sorted logic; some axioms for predicates \\(\\epsilon _{n}\\) are\nadded and a suitable many-sorted theory for the \\(\\epsilon _{n}\\)\nrelations is introduced. In many-sorted logic formula \n\\[\\forall X^{2}(\\Asymm(X^{2})\\rightarrow \\Antisymm(X^{2}))\\]\n\n\nis a theorem of the many-sorted theory mentioned.\nExample: Comprehension Axiom\n\nLet us introduce another, more philosophical, example. If we\nwanted to formalize:\n\nEvery property has a negation.\n\nwe could use second order logic and write: \n\\[\\forall X\\,\\exists Y\\,\\forall x(Yx\\leftrightarrow \\lnot Xx)\\]\n\n\nThat becomes a many-sorted formula when we rewrite it as:\n\n\\[\\forall X\\,\\exists Y\\,\\forall x(\\epsilon _{1}xY\\leftrightarrow \\lnot \\epsilon _{1}xX)\\]\n\n\nusing \\(x,y,\\ldots\\) as variables of sort \\(i\\) (individuals) and\n\\(X,Y,\\ldots\\) of sort \\(\\pi\\) (properties).\n\nFormula \\(\\forall X\\,\\exists Y\\,\\forall x(Yx\\leftrightarrow \\lnot\nXx)\\) is a generalization of an instance of Comprehension Scheme\n\n\\[\\exists Y^{n}\\,\\forall x_{1}\\ldots\\forall x_{n}(Y^{n}x_{1}\\ldots x_{n}\\leftrightarrow \\varphi )\\]\n\n\n(variable \\(Y^{n}\\) is not free at \\(\\varphi\\)).\n Section 4\n and\n section 5\ndiscuss the role played by this scheme in translation\nfrom second-order logic into many-sorted first-order logic.\n\nAs you will see in\n section 6.1, each\n many-sorted formula has a version in a one-sorted first-order\nlanguage obtained by removing sorts. In this new language all the\nvariables belong to one sort, but we add unary predicates to recover\nthe lost information when passing from the many-sorted expression to\nthe one-sorted one. We also need to guarantee that these new\npredicates, which represent the lost universes of quantification, are\ninterpreted by non-empty sets, since universes of quantification are\nnon-empty in classical logic.\n\n\nIn Euclid\u2019s example, we add axioms \\(\\exists xLx\\) and \\(\\exists\nxPx\\) and formula \n\\[\\forall x\\,\\forall y(x\\not=y\\rightarrow \\exists X(\\Join(Xxy)\\land \\forall Y(\\Join(Yxy)\\rightarrow X=Y)))\\]\n\n\nnow becomes \n\\[\\begin{multline}\n\\forall x\\,\\forall y(Px\\land Py\\land x\\not=y\\rightarrow \\\\\n \\exists z((Lz\\land \\Join(zxy))\\land \\forall w((Lw\\land \\Join(wxy))\\rightarrow z=w))) \n\\end{multline}\\]\n\n\nTo represent Every property has a negation in one-sorted\nfirst-order logic we use \\(x,y,z,\\ldots\\) as variables for the unique\nsort we now have, and write: \n\\[\\forall x(Px\\rightarrow \\exists y(Py\\land \\forall z(Oz\\rightarrow (\\epsilon _{1}zx\\leftrightarrow \\lnot \\epsilon _{1}zy))))\\]\n\n\nwhere \n\\[\\begin{align}\nPx & :=\\text{ asserts that }x\\text{ is a property}\\\\\n Ox&:=\\text{ asserts that }x\\text{ is an object} \\\\\n \\epsilon _{1}zx &:=\\text{ asserts that }z\\text{ belongs to (exemplifies or instantiates) }x \n\\end{align}\\]\n\n\nSome axioms for predicates \\(\\epsilon _{1}\\) are added, as well as\naxioms saying that predicates \\(P\\) and \\(O\\) are never interpreted as\nempty sets, \\(\\exists xOx\\) and \\(\\exists xPx\\). Moreover, the links\nbetween predicates \\(\\epsilon _{1}\\), \\(P\\) and \\(O\\) are expressed\nby: \n\\[\\forall x\\,\\forall y(\\epsilon _{1}xy\\rightarrow Ox\\land Py)\\\\\n \\forall x(Px\\rightarrow \\lnot Ox)\\]\n\n",
    "section_title": "1.1 Examples",
    "entry_title": "Many-Sorted Logic",
    "hierarchy_title": "Many-Sorted Logic || Syntax and Semantics || Examples",
    "tokenized_text": [
        "syntax",
        "semantics",
        "example",
        "example",
        "start",
        "example",
        "illustrate",
        "common",
        "statement",
        "concerning",
        "different",
        "type",
        "data",
        "formalized",
        "manysorted",
        "firstorder",
        "logic",
        "example",
        "euclid",
        "first",
        "principle",
        "let",
        "u",
        "begin",
        "geometry",
        "talking",
        "straight",
        "line",
        "point",
        "according",
        "euclid",
        "first",
        "principle",
        "straight",
        "line",
        "drawn",
        "joining",
        "two",
        "point",
        "two",
        "sorted",
        "firstorder",
        "logic",
        "one",
        "use",
        "x",
        "variable",
        "sort",
        "l",
        "straight",
        "line",
        "x",
        "variable",
        "sort",
        "p",
        "point",
        "formulate",
        "euclid",
        "principle",
        "write",
        "forall",
        "x",
        "forall",
        "xnotyrightarrow",
        "exists",
        "x",
        "join",
        "xxy",
        "land",
        "forall",
        "join",
        "yxy",
        "rightarrow",
        "xy",
        "example",
        "join",
        "place",
        "predicate",
        "symbol",
        "relating",
        "straight",
        "line",
        "two",
        "point",
        "join",
        "yxy",
        "textrm",
        "join",
        "x",
        "textrm",
        "y",
        "literally",
        "formalization",
        "read",
        "two",
        "point",
        "unique",
        "straight",
        "line",
        "joining",
        "example",
        "binary",
        "relation",
        "another",
        "mathematical",
        "example",
        "asymmetry",
        "antisymmetry",
        "property",
        "binary",
        "relation",
        "suppose",
        "wanted",
        "express",
        "claim",
        "every",
        "asymmetric",
        "binary",
        "relation",
        "also",
        "antisymmetric",
        "formalize",
        "statement",
        "single",
        "logically",
        "valid",
        "sentence",
        "need",
        "express",
        "asymmetry",
        "antisymmetry",
        "quantify",
        "binary",
        "relation",
        "suitable",
        "firstorder",
        "language",
        "including",
        "r",
        "binary",
        "relation",
        "symbol",
        "express",
        "r",
        "asymmetric",
        "write",
        "asymm",
        "r",
        "forall",
        "x",
        "forall",
        "rxyrightarrow",
        "lnot",
        "ryx",
        "say",
        "r",
        "antisymmetric",
        "write",
        "antisymm",
        "r",
        "forall",
        "x",
        "forall",
        "rxyland",
        "ryxrightarrow",
        "xy",
        "ordinary",
        "onesorted",
        "firstorder",
        "logic",
        "would",
        "logically",
        "valid",
        "scheme",
        "asymm",
        "r",
        "rightarrow",
        "antisymm",
        "r",
        "get",
        "infinite",
        "set",
        "formula",
        "obtained",
        "replacing",
        "r",
        "binary",
        "relation",
        "symbol",
        "however",
        "wanted",
        "single",
        "logically",
        "valid",
        "sentence",
        "need",
        "quantify",
        "binary",
        "relation",
        "secondorder",
        "logic",
        "taking",
        "x",
        "y",
        "variable",
        "binary",
        "relation",
        "write",
        "forall",
        "x",
        "asymm",
        "x",
        "rightarrow",
        "antisymm",
        "x",
        "since",
        "standard",
        "secondorder",
        "logic",
        "lack",
        "nice",
        "property",
        "firstorder",
        "logic",
        "section",
        "one",
        "could",
        "instead",
        "go",
        "twosorted",
        "firstorder",
        "logic",
        "individual",
        "relation",
        "individual",
        "firstclass",
        "citizen",
        "one",
        "quantify",
        "would",
        "variable",
        "x",
        "ldots",
        "sort",
        "i",
        "individual",
        "x",
        "y",
        "ldots",
        "sort",
        "r",
        "binary",
        "relation",
        "individual",
        "however",
        "enough",
        "label",
        "variable",
        "individual",
        "binary",
        "relation",
        "need",
        "perform",
        "secondorder",
        "variable",
        "threeplace",
        "predicate",
        "symbol",
        "relating",
        "binary",
        "relation",
        "individual",
        "epsilon_",
        "xyx",
        "need",
        "added",
        "asymm",
        "x",
        "becomes",
        "asymm",
        "x",
        "forall",
        "x",
        "forall",
        "epsilon",
        "_",
        "xyx",
        "rightarrow",
        "lnot",
        "epsilon_",
        "yxx",
        "similarly",
        "antisymm",
        "x",
        "see",
        "section",
        "rewriting",
        "second",
        "order",
        "formula",
        "x",
        "xy",
        "epsilon_",
        "xyx",
        "translating",
        "secondorder",
        "logic",
        "manysorted",
        "logic",
        "axiom",
        "predicate",
        "epsilon",
        "_",
        "n",
        "added",
        "suitable",
        "manysorted",
        "theory",
        "epsilon",
        "_",
        "n",
        "relation",
        "introduced",
        "manysorted",
        "logic",
        "formula",
        "forall",
        "x",
        "asymm",
        "x",
        "rightarrow",
        "antisymm",
        "x",
        "theorem",
        "manysorted",
        "theory",
        "mentioned",
        "example",
        "comprehension",
        "axiom",
        "let",
        "u",
        "introduce",
        "another",
        "philosophical",
        "example",
        "wanted",
        "formalize",
        "every",
        "property",
        "negation",
        "could",
        "use",
        "second",
        "order",
        "logic",
        "write",
        "forall",
        "x",
        "exists",
        "y",
        "forall",
        "x",
        "yxleftrightarrow",
        "lnot",
        "xx",
        "becomes",
        "manysorted",
        "formula",
        "rewrite",
        "forall",
        "x",
        "exists",
        "y",
        "forall",
        "x",
        "epsilon",
        "_",
        "xyleftrightarrow",
        "lnot",
        "epsilon",
        "_",
        "xx",
        "using",
        "x",
        "ldots",
        "variable",
        "sort",
        "i",
        "individual",
        "x",
        "ldots",
        "sort",
        "pi",
        "property",
        "formula",
        "forall",
        "x",
        "exists",
        "y",
        "forall",
        "x",
        "yxleftrightarrow",
        "lnot",
        "xx",
        "generalization",
        "instance",
        "comprehension",
        "scheme",
        "exists",
        "y",
        "n",
        "forall",
        "x_",
        "ldotsforall",
        "x_",
        "n",
        "y",
        "n",
        "x_",
        "ldots",
        "x_",
        "n",
        "leftrightarrow",
        "varphi",
        "variable",
        "y",
        "n",
        "free",
        "varphi",
        "section",
        "section",
        "discus",
        "role",
        "played",
        "scheme",
        "translation",
        "secondorder",
        "logic",
        "manysorted",
        "firstorder",
        "logic",
        "see",
        "section",
        "manysorted",
        "formula",
        "version",
        "onesorted",
        "firstorder",
        "language",
        "obtained",
        "removing",
        "sort",
        "new",
        "language",
        "variable",
        "belong",
        "one",
        "sort",
        "add",
        "unary",
        "predicate",
        "recover",
        "lost",
        "information",
        "passing",
        "manysorted",
        "expression",
        "onesorted",
        "one",
        "also",
        "need",
        "guarantee",
        "new",
        "predicate",
        "represent",
        "lost",
        "universe",
        "quantification",
        "interpreted",
        "nonempty",
        "set",
        "since",
        "universe",
        "quantification",
        "nonempty",
        "classical",
        "logic",
        "euclid",
        "example",
        "add",
        "axiom",
        "exists",
        "xlx",
        "exists",
        "xpx",
        "formula",
        "forall",
        "x",
        "forall",
        "xnotyrightarrow",
        "exists",
        "x",
        "join",
        "xxy",
        "land",
        "forall",
        "join",
        "yxy",
        "rightarrow",
        "xy",
        "becomes",
        "begin",
        "multline",
        "forall",
        "x",
        "forall",
        "pxland",
        "pyland",
        "xnotyrightarrow",
        "exists",
        "z",
        "lzland",
        "join",
        "zxy",
        "land",
        "forall",
        "w",
        "lwland",
        "join",
        "wxy",
        "rightarrow",
        "zw",
        "end",
        "multline",
        "represent",
        "every",
        "property",
        "negation",
        "onesorted",
        "firstorder",
        "logic",
        "use",
        "x",
        "z",
        "ldots",
        "variable",
        "unique",
        "sort",
        "write",
        "forall",
        "x",
        "pxrightarrow",
        "exists",
        "pyland",
        "forall",
        "z",
        "ozrightarrow",
        "epsilon",
        "_",
        "zxleftrightarrow",
        "lnot",
        "epsilon",
        "_",
        "zy",
        "begin",
        "align",
        "px",
        "text",
        "asserts",
        "xtext",
        "property",
        "ox",
        "text",
        "asserts",
        "xtext",
        "object",
        "epsilon",
        "_",
        "zx",
        "text",
        "asserts",
        "ztext",
        "belongs",
        "exemplifies",
        "instantiates",
        "x",
        "end",
        "align",
        "axiom",
        "predicate",
        "epsilon",
        "_",
        "added",
        "well",
        "axiom",
        "saying",
        "predicate",
        "p",
        "o",
        "never",
        "interpreted",
        "empty",
        "set",
        "exists",
        "xox",
        "exists",
        "xpx",
        "moreover",
        "link",
        "predicate",
        "epsilon",
        "_",
        "p",
        "o",
        "expressed",
        "forall",
        "x",
        "forall",
        "epsilon",
        "_",
        "xyrightarrow",
        "oxland",
        "py",
        "forall",
        "x",
        "pxrightarrow",
        "lnot",
        "ox"
    ]
}