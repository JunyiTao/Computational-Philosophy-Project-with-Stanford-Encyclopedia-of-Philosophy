{
    "main_text": "Alternative Historical Models of Computability || Post Production Systems\n4.3 Post Production Systems\n\nAround 1920\u201321 Emil Post developed different but related types\nof production systems in order to develop a syntactical form which\nwould allow him to tackle the decision problem for first-order logic.\nOne of these forms are Post canonical systems C which became\nlater known as Post production systems.\n\nA canonical system consists of a finite alphabet \\(\\Sigma\\), a finite\nset of initial words \\(W_{0,0}\\), \\(W_{0,1}\\),\u2026, \\(W_{0,n}\\)\nand a finite set of production rules of the following form:\n\n\\[\n\\begin{array}{c}\ng_{11}P_{i_{1}^{1}}g_{12}P_{i_{2}^{1}} \\ldots g_{1m_{1}}P_{i^{1}_{m_{1}}}g_{1 {(m_{1} + 1)}}\\\\\ng_{21}P_{i_{1}^{2}}g_{22}P_{i_{2}^{2}} \\ldots g_{2m_{2}}P_{i^{2}_{m_{2}}}g_{2 {(m_{2} + 1)}}\\\\\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\\\\\ng_{k1}P_{i_{1}^{k}}g_{k2}P_{i_{2}^{k}} \\ldots g_{km_{k}}P_{i^{k}_{m_{k}}}g_{k {(m_{k} + 1)}}\\\\\n\\textit{produce}\\\\\ng_{1}P_{i_{1}}g_{2}P_{i_{2}} \\ldots g_{m}P_{i_{m}}g_{(m + 1)}\\\\\n\\end{array}\n\\]\n\n\nThe symbols g are a kind of metasymbols: they correspond to\nactual sequences of letters in actual productions. The symbols\nP are the operational variables and so can represent any\nsequence of letters in a production. So, for instance, consider a\nproduction system over the alphabet \\(\\Sigma = \\{a,b\\}\\) with initial\nword:  \n\n\\[W_0 =  ababaaabbaabbaabbaba\\]\n\n\nand the following production rule: \n\n\\[\n\\begin{array}{c}\nP_{1,1}bbP_{1,2}\\\\\n\\textit{produces}\\\\\nP_{1,3}aaP_{1,4}\\\\\n\\end{array}\n\\]\n\n\nThen, starting with \\(W_0\\), there are three possible ways to apply\nthe production rule and in each application the variables \\(P_{1,i}\\)\nwill have different values but the values of the g\u2019s are fixed.\nAny set of finite sequences of words that can be produced by a\ncanonical system is called a canonical set.\n\nA special class of canonical forms defined by Post are normal systems.\nA normal system N consists of a finite alphabet \\(\\Sigma\\), one\ninitial word \\(W_0 \\in \\Sigma^{\\ast}\\) and a finite set of production\nrules, each of the following form: \n\n\\[\n\\begin{array}{c}\ng_iP\\\\\n\\textit{produces}\\\\\nPg_i'\\\\\n\\end{array}\n\\]\n\n\nAny set of finite sequences of words that can be produced by a normal\nsystem is called a normal set. Post was able to show that for\nany canonical set C over some alphabet \\(\\Sigma\\) there is a\nnormal set N over an alphabet \\(\\Delta\\) with \\(\\Sigma\n\\subseteq \\Delta\\) such that \\(C = N \\cap \\Sigma^{\\ast}\\). It was his\nconviction that (1) any set of finite sequences that can be generated\nby finite means can be generated by canonical systems and (2) the\nproof that for every canonical set there is a normal set which\ncontains it, which resulted in Post\u2019s thesis I:\n\n\nPost\u2019s thesis I (Davis 1982) Every set of\nfinite sequences of letters that can be generated by finite processes\ncan also be generated by normal systems. More particularly, any set of\nwords on an alphabet \\(\\Sigma\\) which can be generated by a finite\nprocess is of the form \\(N \\cap \\Sigma^{\\ast}\\), with N a\nnormal set.\n\n\nPost realized that \u201c[for the thesis to obtain its full\ngenerality] a complete analysis would have to be made of all the\npossible ways in which the human mind could set up finite processes\nfor generating sequences\u201d (Post 1965: 408) and it is quite\nprobable that the formulation 1 given in Post 1936 and which is almost\nidentical to Turing\u2019s machines is the result of such an\nanalysis.\n\nPost production systems became important formal devices in computer\nscience and, more particularly, formal language theory (Davis 1989;\nPullum 2011).\n",
    "section_title": "4.3 Post Production Systems",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Alternative Historical Models of Computability || Post Production Systems",
    "tokenized_text": [
        "alternative",
        "historical",
        "model",
        "computability",
        "post",
        "production",
        "system",
        "post",
        "production",
        "system",
        "around",
        "emil",
        "post",
        "developed",
        "different",
        "related",
        "type",
        "production",
        "system",
        "order",
        "develop",
        "syntactical",
        "form",
        "would",
        "allow",
        "tackle",
        "decision",
        "problem",
        "firstorder",
        "logic",
        "one",
        "form",
        "post",
        "canonical",
        "system",
        "c",
        "became",
        "later",
        "known",
        "post",
        "production",
        "system",
        "canonical",
        "system",
        "consists",
        "finite",
        "alphabet",
        "sigma",
        "finite",
        "set",
        "initial",
        "word",
        "w_",
        "w_",
        "w_",
        "n",
        "finite",
        "set",
        "production",
        "rule",
        "following",
        "form",
        "begin",
        "array",
        "c",
        "g_",
        "p_",
        "i_",
        "g_",
        "p_",
        "i_",
        "ldots",
        "g_",
        "m_",
        "p_",
        "i",
        "_",
        "m_",
        "g_",
        "m_",
        "g_",
        "p_",
        "i_",
        "g_",
        "p_",
        "i_",
        "ldots",
        "g_",
        "m_",
        "p_",
        "i",
        "_",
        "m_",
        "g_",
        "m_",
        "g_",
        "k",
        "p_",
        "i_",
        "k",
        "g_",
        "k",
        "p_",
        "i_",
        "k",
        "ldots",
        "g_",
        "km_",
        "k",
        "p_",
        "i",
        "k",
        "_",
        "m_",
        "k",
        "g_",
        "k",
        "m_",
        "k",
        "textit",
        "produce",
        "g_",
        "p_",
        "i_",
        "g_",
        "p_",
        "i_",
        "ldots",
        "g_",
        "p_",
        "i_",
        "g_",
        "end",
        "array",
        "symbol",
        "g",
        "kind",
        "metasymbols",
        "correspond",
        "actual",
        "sequence",
        "letter",
        "actual",
        "production",
        "symbol",
        "p",
        "operational",
        "variable",
        "represent",
        "sequence",
        "letter",
        "production",
        "instance",
        "consider",
        "production",
        "system",
        "alphabet",
        "sigma",
        "b",
        "initial",
        "word",
        "w_",
        "ababaaabbaabbaabbaba",
        "following",
        "production",
        "rule",
        "begin",
        "array",
        "c",
        "p_",
        "bbp_",
        "textit",
        "produce",
        "p_",
        "aap_",
        "end",
        "array",
        "starting",
        "w_",
        "three",
        "possible",
        "way",
        "apply",
        "production",
        "rule",
        "application",
        "variable",
        "p_",
        "different",
        "value",
        "value",
        "g",
        "fixed",
        "set",
        "finite",
        "sequence",
        "word",
        "produced",
        "canonical",
        "system",
        "called",
        "canonical",
        "set",
        "special",
        "class",
        "canonical",
        "form",
        "defined",
        "post",
        "normal",
        "system",
        "normal",
        "system",
        "n",
        "consists",
        "finite",
        "alphabet",
        "sigma",
        "one",
        "initial",
        "word",
        "w_",
        "in",
        "sigma",
        "ast",
        "finite",
        "set",
        "production",
        "rule",
        "following",
        "form",
        "begin",
        "array",
        "c",
        "g_ip",
        "textit",
        "produce",
        "pg_i",
        "end",
        "array",
        "set",
        "finite",
        "sequence",
        "word",
        "produced",
        "normal",
        "system",
        "called",
        "normal",
        "set",
        "post",
        "able",
        "show",
        "canonical",
        "set",
        "c",
        "alphabet",
        "sigma",
        "normal",
        "set",
        "n",
        "alphabet",
        "delta",
        "sigma",
        "subseteq",
        "delta",
        "c",
        "n",
        "cap",
        "sigma",
        "ast",
        "conviction",
        "set",
        "finite",
        "sequence",
        "generated",
        "finite",
        "mean",
        "generated",
        "canonical",
        "system",
        "proof",
        "every",
        "canonical",
        "set",
        "normal",
        "set",
        "contains",
        "resulted",
        "post",
        "thesis",
        "post",
        "thesis",
        "davis",
        "every",
        "set",
        "finite",
        "sequence",
        "letter",
        "generated",
        "finite",
        "process",
        "also",
        "generated",
        "normal",
        "system",
        "particularly",
        "set",
        "word",
        "alphabet",
        "sigma",
        "generated",
        "finite",
        "process",
        "form",
        "n",
        "cap",
        "sigma",
        "ast",
        "n",
        "normal",
        "set",
        "post",
        "realized",
        "thesis",
        "obtain",
        "full",
        "generality",
        "complete",
        "analysis",
        "would",
        "made",
        "possible",
        "way",
        "human",
        "mind",
        "could",
        "set",
        "finite",
        "process",
        "generating",
        "sequence",
        "post",
        "quite",
        "probable",
        "formulation",
        "given",
        "post",
        "almost",
        "identical",
        "turing",
        "machine",
        "result",
        "analysis",
        "post",
        "production",
        "system",
        "became",
        "important",
        "formal",
        "device",
        "computer",
        "science",
        "particularly",
        "formal",
        "language",
        "theory",
        "davis",
        "pullum"
    ]
}