{
    "main_text": "Event Calculus || The completion of a program\n7.2 The completion of a program\n\nThere are different techniques for formalizing this line of reasoning;\none is circumscription (e.g., Shanahan 1997). Here, we will use the\ncompletion of a logic program technique, adopting the\n\nEvent Calculus of van Lambalgen and Hamm (2005). Taking a\ncloser look at the formulas of the theory\n\\(((34) \\wedge \\ldots \\wedge (45))\\), an important feature to notice is that\nformulas come in two variants: they are either facts\nconsisting of a simple predicate expression or they express\nrules with a conjunction of potentially negated formulas to\nthe left of the implication sign and a single positive atomic\nexpression to its right (in logic programming the former is called the\n\nbody and the latter is called the head of a clause).\nWe will now illustrate how the completion of a simple logic program is\ncomputed. Consider the description of a situation where the gun gets\nloaded at time 1 and a shooting event happens at time 10. This\nsituation is stated in the following program: \n46.\n\n\\(Happens(Load, 1)\\)\n    47.\n\n\\(Happens(Shoot, 10)\\)\n    \n\nThe uncompleted program does not yet rule out intervening events. It\nis, for example, consistent with an Unload event occurring at\ntime instant 9. The completion of the program should tell us that (46)\nand (47) were the only events. The completion is computed according to\nthe following\n procedure.[7]\n We start with the facts in (46) and (47). Both of these are\nHappens formulae. The completion of the program intuitively\ncorresponds to an assertion that, given this program,\nHappens\\((e, t)\\) can only mean Load\noccurring at 1 or Shoot occurring at 10. We therefore first\nsubstitute variables for the constants and write the following\ndisjunction: \n48.\n\n\n \\((e = Load \\wedge t = 1) \\vee(e = Shoot \\wedge t = 10)\\)\n    \n\nThen, we universally quantify over the variables \\(e\\) and \\(t\\)\nand strengthen the implication to a bi-implication: \n49.\n\n \\(\\forall e\\forall t(Happens(e, t)\\ \\leftrightarrow\\) \\((e = Load\n\\wedge t = 1)\\ \\vee\\) \\((e = Shoot \\wedge t = 10))\\)\n    \n\nFrom (49) it follows that there were no intervening events.\nStrengthening the implications to bi-implications makes it impossible\nthat a head can be true without the enabling conditions being\n met.[8]\n The uniquely determined model of (49) is the minimal model of the\nlogic program consisting of (46) and (47). \n\nWe can now come back to the Yale Shooting Problem in discourse (33).\nFrom the completion of the logic program\n((34))\\(\\wedge \\ldots \\wedge\\)((45)) it follows (non-monotonically) that\nHoldsAt(Dead, \\(T_4)\\). Enriching the\nprogram with further information and computing the new completion,\nhowever, could clearly lead to cancellation of this inference. \n",
    "section_title": "7.2 The completion of a program",
    "entry_title": "Tense and Aspect",
    "hierarchy_title": "Tense and Aspect || Event Calculus || The completion of a program",
    "tokenized_text": [
        "event",
        "calculus",
        "completion",
        "program",
        "completion",
        "program",
        "different",
        "technique",
        "formalizing",
        "line",
        "reasoning",
        "one",
        "circumscription",
        "eg",
        "shanahan",
        "use",
        "completion",
        "logic",
        "program",
        "technique",
        "adopting",
        "event",
        "calculus",
        "van",
        "lambalgen",
        "hamm",
        "taking",
        "closer",
        "look",
        "formula",
        "theory",
        "wedge",
        "ldots",
        "wedge",
        "important",
        "feature",
        "notice",
        "formula",
        "come",
        "two",
        "variant",
        "either",
        "fact",
        "consisting",
        "simple",
        "predicate",
        "expression",
        "express",
        "rule",
        "conjunction",
        "potentially",
        "negated",
        "formula",
        "left",
        "implication",
        "sign",
        "single",
        "positive",
        "atomic",
        "expression",
        "right",
        "logic",
        "programming",
        "former",
        "called",
        "body",
        "latter",
        "called",
        "head",
        "clause",
        "illustrate",
        "completion",
        "simple",
        "logic",
        "program",
        "computed",
        "consider",
        "description",
        "situation",
        "gun",
        "get",
        "loaded",
        "time",
        "shooting",
        "event",
        "happens",
        "time",
        "situation",
        "stated",
        "following",
        "program",
        "happens",
        "load",
        "happens",
        "shoot",
        "uncompleted",
        "program",
        "yet",
        "rule",
        "intervening",
        "event",
        "example",
        "consistent",
        "unload",
        "event",
        "occurring",
        "time",
        "instant",
        "completion",
        "program",
        "tell",
        "u",
        "event",
        "completion",
        "computed",
        "according",
        "following",
        "procedure",
        "start",
        "fact",
        "happens",
        "formula",
        "completion",
        "program",
        "intuitively",
        "corresponds",
        "assertion",
        "given",
        "program",
        "happens",
        "e",
        "mean",
        "load",
        "occurring",
        "shoot",
        "occurring",
        "therefore",
        "first",
        "substitute",
        "variable",
        "constant",
        "write",
        "following",
        "disjunction",
        "e",
        "load",
        "wedge",
        "vee",
        "e",
        "shoot",
        "wedge",
        "universally",
        "quantify",
        "variable",
        "e",
        "t",
        "strengthen",
        "implication",
        "biimplication",
        "forall",
        "eforall",
        "happens",
        "e",
        "leftrightarrow",
        "e",
        "load",
        "wedge",
        "vee",
        "e",
        "shoot",
        "wedge",
        "follows",
        "intervening",
        "event",
        "strengthening",
        "implication",
        "biimplications",
        "make",
        "impossible",
        "head",
        "true",
        "without",
        "enabling",
        "condition",
        "met",
        "uniquely",
        "determined",
        "model",
        "minimal",
        "model",
        "logic",
        "program",
        "consisting",
        "come",
        "back",
        "yale",
        "shooting",
        "problem",
        "discourse",
        "completion",
        "logic",
        "program",
        "wedge",
        "ldots",
        "wedge",
        "follows",
        "nonmonotonically",
        "holdsat",
        "dead",
        "t_",
        "enriching",
        "program",
        "information",
        "computing",
        "new",
        "completion",
        "however",
        "could",
        "clearly",
        "lead",
        "cancellation",
        "inference"
    ]
}