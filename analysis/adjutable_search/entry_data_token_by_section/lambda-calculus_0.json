{
    "main_text": "Introduction\n1. Introduction\n\nThe \\(\\lambda\\)-calculus is an elegant notation for working with\napplications of functions to arguments. To\ntake a mathematical example, suppose we are given a simple polynomial\nsuch as \\(x^2 -2\\cdot x+5\\). What is the value of this expression when\n\\(x = 2\\)? We compute this by \u2018plugging in\u2019 2 for \\(x\\) in\nthe expression: we get \\(2^2 -2\\cdot 2+5\\), which we can further\nreduce to get the answer 5. To use the \\(\\lambda\\)-calculus to\nrepresent the situation, we start with the \\(\\lambda\\)-term\n\n\\[\n\\lambda x[x^2 -2\\cdot x+5].\n\\]\n\n\nThe \\(\\lambda\\) operators allows us to abstract over \\(x\\).\nOne can intuitively read \u2018\\(\\lambda x[x^2 -2\\cdot x+5]\\)\u2019\nas an expression that is waiting for a value \\(a\\) for the variable\n\\(x\\). When given such a value \\(a\\) (such as the number 2), the value\nof the expression is \\(a^2 -2\\cdot a+5\\). The\n\u2018\\(\\lambda\\)\u2019 on its own has no significance; it merely\nbinds the variable \\(x\\), guarding it, as it were, from\noutside interference. The terminology in \\(\\lambda\\)-calculus is that\nwe want to apply this expression to an argument, and\nget a value. We write \u2018\\(Ma\\)\u2019 to denote the application\nof the function \\(M\\) to the argument \\(a\\). Continuing with the\nexample, we get: \n\\[\\begin{align}\n(\\lambda x[x^2 -2\\cdot x+5])2 \\rhd 2^2& -2\\cdot 2+5\n   &\\langle \\text{Substitute 2 for } x\\rangle \\\\\n&= 4-4+5\n   &\\langle\\text{Arithmetic}\\rangle \\\\\n&= 5 \n   &\\langle\\text{Arithmetic}\\rangle\n\\end{align}\\]\n\n\nThe first step of this calculation, plugging in \u20182\u2019 for\noccurrences of \\(x\\) in the expression \u2018\\(x^2 -\n2\\cdot x + 5\\)\u2019, is the passage from an\nabstraction term to another term by the\noperation of substitution. The remaining equalities are justified by\ncomputing with natural numbers.\n\nThis example suggests the central principle of the\n\\(\\lambda\\)-calculus, called\n\\(\\beta\\)-reduction, which is also sometimes\ncalled \\(\\beta\\)-conversion: \n\\[\n\\tag{\\(\\beta\\)}\n(\\lambda x[M])N \\rhd M[x := N]\n\\]\n\n\nThe understanding is that we can reduce or contract\n\\((\\rhd)\\) an application \\((\\lambda xM)N\\) of an abstraction term\n(the left-hand side, \\(\\lambda xM)\\) to something (the right-hand\nside, \\(N)\\) by simply plugging in \\(N\\) for the occurrences of \\(x\\)\ninside \\(M\\) (that\u2019s what the notation \u2018\\(M[x :=\nN]\\)\u2019 expresses). \\(\\beta\\)-reduction,\nor \\(\\beta\\)-conversion, is the heart of the\n\\(\\lambda\\)-calculus. When one actually applies \\(\\beta\\)-reduction to\nreduce a term, there is an important proviso that has to be observed.\nBut this will be described in Section 2.1, when we discuss bound and\nfree variables.\n",
    "section_title": "1. Introduction",
    "entry_title": "The Lambda Calculus",
    "hierarchy_title": "The Lambda Calculus || Introduction",
    "tokenized_text": [
        "introduction",
        "introduction",
        "lambda",
        "calculus",
        "elegant",
        "notation",
        "working",
        "application",
        "function",
        "argument",
        "take",
        "mathematical",
        "example",
        "suppose",
        "given",
        "simple",
        "polynomial",
        "x",
        "cdot",
        "x",
        "value",
        "expression",
        "x",
        "compute",
        "plugging",
        "x",
        "expression",
        "get",
        "cdot",
        "reduce",
        "get",
        "answer",
        "use",
        "lambda",
        "calculus",
        "represent",
        "situation",
        "start",
        "lambda",
        "term",
        "lambda",
        "x",
        "x",
        "cdot",
        "x",
        "lambda",
        "operator",
        "allows",
        "u",
        "abstract",
        "x",
        "one",
        "intuitively",
        "read",
        "lambda",
        "x",
        "x",
        "cdot",
        "x",
        "expression",
        "waiting",
        "value",
        "a",
        "variable",
        "x",
        "given",
        "value",
        "a",
        "number",
        "value",
        "expression",
        "a",
        "cdot",
        "a",
        "lambda",
        "significance",
        "merely",
        "bind",
        "variable",
        "x",
        "guarding",
        "outside",
        "interference",
        "terminology",
        "lambda",
        "calculus",
        "want",
        "apply",
        "expression",
        "argument",
        "get",
        "value",
        "write",
        "ma",
        "denote",
        "application",
        "function",
        "m",
        "argument",
        "a",
        "continuing",
        "example",
        "get",
        "begin",
        "align",
        "lambda",
        "x",
        "x",
        "cdot",
        "x",
        "rhd",
        "cdot",
        "langle",
        "text",
        "substitute",
        "xrangle",
        "langletext",
        "arithmetic",
        "rangle",
        "langletext",
        "arithmetic",
        "rangle",
        "end",
        "align",
        "first",
        "step",
        "calculation",
        "plugging",
        "occurrence",
        "x",
        "expression",
        "x",
        "cdot",
        "x",
        "passage",
        "abstraction",
        "term",
        "another",
        "term",
        "operation",
        "substitution",
        "remaining",
        "equality",
        "justified",
        "computing",
        "natural",
        "number",
        "example",
        "suggests",
        "central",
        "principle",
        "lambda",
        "calculus",
        "called",
        "beta",
        "reduction",
        "also",
        "sometimes",
        "called",
        "beta",
        "conversion",
        "tag",
        "beta",
        "lambda",
        "x",
        "n",
        "rhd",
        "x",
        "n",
        "understanding",
        "reduce",
        "contract",
        "rhd",
        "application",
        "lambda",
        "xm",
        "n",
        "abstraction",
        "term",
        "lefthand",
        "side",
        "lambda",
        "xm",
        "something",
        "righthand",
        "side",
        "n",
        "simply",
        "plugging",
        "n",
        "occurrence",
        "x",
        "inside",
        "m",
        "notation",
        "x",
        "n",
        "express",
        "beta",
        "reduction",
        "beta",
        "conversion",
        "heart",
        "lambda",
        "calculus",
        "one",
        "actually",
        "applies",
        "beta",
        "reduction",
        "reduce",
        "term",
        "important",
        "proviso",
        "observed",
        "described",
        "section",
        "discus",
        "bound",
        "free",
        "variable"
    ]
}