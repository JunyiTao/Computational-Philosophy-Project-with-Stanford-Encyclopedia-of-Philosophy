{
    "main_text": "Logics of discovery after the context distinction || Heuristic programming\n6.2 Heuristic programming\n\nThe concern with the logic of discovery has also motivated research on\nartificial intelligence at the intersection of philosophy of science\nand cognitive science. In this approach, scientific discovery is\ntreated as a form of problem-solving activity (Simon 1973; see also\nNewell and Simon 1971), whereby the systematic aspects of problem\nsolving are studied within an information-processing framework. The\naim is to clarify with the help of computational tools the nature of\nthe methods used to discover scientific hypotheses. These hypotheses\nare regarded as solutions to problems. Philosophers working in this\ntradition build computer programs employing methods of heuristic\nselective search (e.g., Langley et al. 1987). In computational\nheuristics, search programs can be described as searches for solutions\nin a so-called \u201cproblem space\u201d in a certain domain. The\nproblem space comprises all possible configurations in that domain\n(e.g., for chess problems, all possible arrangements of pieces on a\nboard of chess). Each configuration is a \u201cstate\u201d of the\nproblem space. There are two special states, namely the goal state,\ni.e., the state to be reached, and the initial state, i.e., the\nconfiguration at the starting point from which the search begins.\nThere are operators, which determine the moves that generate new\nstates from the current state. There are path constraints, which limit\nthe permitted moves. Problem solving is the process of searching for a\nsolution of the problem of how to generate the goal state from an\ninitial state. In principle, all states can be generated by applying\nthe operators to the initial state, then to the resulting state, until\nthe goal state is reached (Langley et al. 1987: chapter 9). A problem\nsolution is a sequence of operations leading from the initial to the\ngoal state.\n\nThe basic idea behind computational heuristics is that rules can be\nidentified that serve as guidelines for finding a solution to a given\nproblem quickly and efficiently by avoiding undesired states of the\nproblem space. These rules are best described as rules of thumb. The\naim of constructing a logic of discovery thus becomes the aim of\nconstructing a heuristics for the efficient search for solutions to\nproblems. The term \u201cheuristic search\u201d indicates that in\ncontrast to algorithms, problem-solving procedures lead to results\nthat are merely provisional and plausible. A solution is not\nguaranteed, but heuristic searches are advantageous because they are\nmore efficient than exhaustive random trial and error searches.\nInsofar as it is possible to evaluate whether one set of heuristics is\nbetter\u2014more efficacious\u2014than another, the logic of\ndiscovery turns into a normative theory of discovery.\n\nArguably, because it is possible to reconstruct important scientific\ndiscovery processes with sets of computational heuristics, the\nscientific discovery process can be considered as a special case of\nthe general mechanism of information processing. In this context, the\nterm \u201clogic\u201d is not used in the narrow sense of a set of\nformal, generally applicable rules to draw inferences but again in a\nbroad sense as a label for a set of procedural rules.\n\nThe computer programs that embody the principles of heuristic searches\nin scientific inquiry simulate the paths that scientists followed when\nthey searched for new theoretical hypotheses. Computer programs such\nas BACON (Simon et al. 1981) and KEKADA (Kulkarni and Simon 1988)\nutilize sets of problem-solving heuristics to detect regularities in\ngiven data sets. The program would note, for instance, that the values\nof a dependent term are constant or that a set of values for a term\nx and a set of values for a term y are linearly\nrelated. It would thus \u201cinfer\u201d that the dependent term\nalways has that value or that a linear relation exists between\nx and y. These programs can \u201cmake\ndiscoveries\u201d in the sense that they can simulate successful\ndiscoveries such as Kepler\u2019s third law (BACON) or the Krebs\ncycle (KEKADA).\n\nComputational theories of scientific discoveries have helped identify\nand clarify a number of problem-solving strategies. An example of such\na strategy is heuristic means-ends analysis, which involves\nidentifying specific differences between the present and the goal\nsituation and searches for operators (processes that will change the\nsituation) that are associated with the differences that were\ndetected. Another important heuristic is to divide the problem into\nsub-problems and to begin solving the one with the smallest number of\nunknowns to be determined (Simon 1977). Computational approaches have\nalso highlighted the extent to which the generation of new knowledge\ndraws on existing knowledge that constrains the development of new\nhypotheses.\n\nAs accounts of scientific discoveries, the early computational\nheuristics have some limitations. Compared to the problem spaces given\nin computational heuristics, the complex problem spaces for scientific\nproblems are often ill defined, and the relevant search space and goal\nstate must be delineated before heuristic assumptions could be\nformulated (Bechtel and Richardson 1993: chapter 1). Because a\ncomputer program requires the data from actual experiments, the\nsimulations cover only certain aspects of scientific discoveries; in\nparticular, it cannot determine by itself which data is relevant,\nwhich data to relate and what form of law it should look for (Gillies\n1996). However, as a consequence of the rise of so-called \u201cdeep\nlearning\u201d methods in data-intensive science, there is renewed\nphilosophical interest in the question of whether machines can make\ndiscoveries\n (section 10).\n",
    "section_title": "6.2 Heuristic programming",
    "entry_title": "Scientific Discovery",
    "hierarchy_title": "Scientific Discovery || Logics of discovery after the context distinction || Heuristic programming",
    "tokenized_text": [
        "logic",
        "discovery",
        "context",
        "distinction",
        "heuristic",
        "programming",
        "heuristic",
        "programming",
        "concern",
        "logic",
        "discovery",
        "also",
        "motivated",
        "research",
        "artificial",
        "intelligence",
        "intersection",
        "philosophy",
        "science",
        "cognitive",
        "science",
        "approach",
        "scientific",
        "discovery",
        "treated",
        "form",
        "problemsolving",
        "activity",
        "simon",
        "see",
        "also",
        "newell",
        "simon",
        "whereby",
        "systematic",
        "aspect",
        "problem",
        "solving",
        "studied",
        "within",
        "informationprocessing",
        "framework",
        "aim",
        "clarify",
        "help",
        "computational",
        "tool",
        "nature",
        "method",
        "used",
        "discover",
        "scientific",
        "hypothesis",
        "hypothesis",
        "regarded",
        "solution",
        "problem",
        "philosopher",
        "working",
        "tradition",
        "build",
        "computer",
        "program",
        "employing",
        "method",
        "heuristic",
        "selective",
        "search",
        "eg",
        "langley",
        "et",
        "al",
        "computational",
        "heuristic",
        "search",
        "program",
        "described",
        "search",
        "solution",
        "socalled",
        "problem",
        "space",
        "certain",
        "domain",
        "problem",
        "space",
        "comprises",
        "possible",
        "configuration",
        "domain",
        "eg",
        "chess",
        "problem",
        "possible",
        "arrangement",
        "piece",
        "board",
        "chess",
        "configuration",
        "state",
        "problem",
        "space",
        "two",
        "special",
        "state",
        "namely",
        "goal",
        "state",
        "ie",
        "state",
        "reached",
        "initial",
        "state",
        "ie",
        "configuration",
        "starting",
        "point",
        "search",
        "begin",
        "operator",
        "determine",
        "move",
        "generate",
        "new",
        "state",
        "current",
        "state",
        "path",
        "constraint",
        "limit",
        "permitted",
        "move",
        "problem",
        "solving",
        "process",
        "searching",
        "solution",
        "problem",
        "generate",
        "goal",
        "state",
        "initial",
        "state",
        "principle",
        "state",
        "generated",
        "applying",
        "operator",
        "initial",
        "state",
        "resulting",
        "state",
        "goal",
        "state",
        "reached",
        "langley",
        "et",
        "al",
        "chapter",
        "problem",
        "solution",
        "sequence",
        "operation",
        "leading",
        "initial",
        "goal",
        "state",
        "basic",
        "idea",
        "behind",
        "computational",
        "heuristic",
        "rule",
        "identified",
        "serve",
        "guideline",
        "finding",
        "solution",
        "given",
        "problem",
        "quickly",
        "efficiently",
        "avoiding",
        "undesired",
        "state",
        "problem",
        "space",
        "rule",
        "best",
        "described",
        "rule",
        "thumb",
        "aim",
        "constructing",
        "logic",
        "discovery",
        "thus",
        "becomes",
        "aim",
        "constructing",
        "heuristic",
        "efficient",
        "search",
        "solution",
        "problem",
        "term",
        "heuristic",
        "search",
        "indicates",
        "contrast",
        "algorithm",
        "problemsolving",
        "procedure",
        "lead",
        "result",
        "merely",
        "provisional",
        "plausible",
        "solution",
        "guaranteed",
        "heuristic",
        "search",
        "advantageous",
        "efficient",
        "exhaustive",
        "random",
        "trial",
        "error",
        "search",
        "insofar",
        "possible",
        "evaluate",
        "whether",
        "one",
        "set",
        "heuristic",
        "bettermore",
        "efficaciousthan",
        "another",
        "logic",
        "discovery",
        "turn",
        "normative",
        "theory",
        "discovery",
        "arguably",
        "possible",
        "reconstruct",
        "important",
        "scientific",
        "discovery",
        "process",
        "set",
        "computational",
        "heuristic",
        "scientific",
        "discovery",
        "process",
        "considered",
        "special",
        "case",
        "general",
        "mechanism",
        "information",
        "processing",
        "context",
        "term",
        "logic",
        "used",
        "narrow",
        "sense",
        "set",
        "formal",
        "generally",
        "applicable",
        "rule",
        "draw",
        "inference",
        "broad",
        "sense",
        "label",
        "set",
        "procedural",
        "rule",
        "computer",
        "program",
        "embody",
        "principle",
        "heuristic",
        "search",
        "scientific",
        "inquiry",
        "simulate",
        "path",
        "scientist",
        "followed",
        "searched",
        "new",
        "theoretical",
        "hypothesis",
        "computer",
        "program",
        "bacon",
        "simon",
        "et",
        "al",
        "kekada",
        "kulkarni",
        "simon",
        "utilize",
        "set",
        "problemsolving",
        "heuristic",
        "detect",
        "regularity",
        "given",
        "data",
        "set",
        "program",
        "would",
        "note",
        "instance",
        "value",
        "dependent",
        "term",
        "constant",
        "set",
        "value",
        "term",
        "x",
        "set",
        "value",
        "term",
        "linearly",
        "related",
        "would",
        "thus",
        "infer",
        "dependent",
        "term",
        "always",
        "value",
        "linear",
        "relation",
        "exists",
        "x",
        "y",
        "program",
        "make",
        "discovery",
        "sense",
        "simulate",
        "successful",
        "discovery",
        "kepler",
        "third",
        "law",
        "bacon",
        "krebs",
        "cycle",
        "kekada",
        "computational",
        "theory",
        "scientific",
        "discovery",
        "helped",
        "identify",
        "clarify",
        "number",
        "problemsolving",
        "strategy",
        "example",
        "strategy",
        "heuristic",
        "meansends",
        "analysis",
        "involves",
        "identifying",
        "specific",
        "difference",
        "present",
        "goal",
        "situation",
        "search",
        "operator",
        "process",
        "change",
        "situation",
        "associated",
        "difference",
        "detected",
        "another",
        "important",
        "heuristic",
        "divide",
        "problem",
        "subproblems",
        "begin",
        "solving",
        "one",
        "smallest",
        "number",
        "unknown",
        "determined",
        "simon",
        "computational",
        "approach",
        "also",
        "highlighted",
        "extent",
        "generation",
        "new",
        "knowledge",
        "draw",
        "existing",
        "knowledge",
        "constrains",
        "development",
        "new",
        "hypothesis",
        "account",
        "scientific",
        "discovery",
        "early",
        "computational",
        "heuristic",
        "limitation",
        "compared",
        "problem",
        "space",
        "given",
        "computational",
        "heuristic",
        "complex",
        "problem",
        "space",
        "scientific",
        "problem",
        "often",
        "ill",
        "defined",
        "relevant",
        "search",
        "space",
        "goal",
        "state",
        "must",
        "delineated",
        "heuristic",
        "assumption",
        "could",
        "formulated",
        "bechtel",
        "richardson",
        "chapter",
        "computer",
        "program",
        "requires",
        "data",
        "actual",
        "experiment",
        "simulation",
        "cover",
        "certain",
        "aspect",
        "scientific",
        "discovery",
        "particular",
        "determine",
        "data",
        "relevant",
        "data",
        "relate",
        "form",
        "law",
        "look",
        "gillie",
        "however",
        "consequence",
        "rise",
        "socalled",
        "deep",
        "learning",
        "method",
        "dataintensive",
        "science",
        "renewed",
        "philosophical",
        "interest",
        "question",
        "whether",
        "machine",
        "make",
        "discovery",
        "section"
    ]
}