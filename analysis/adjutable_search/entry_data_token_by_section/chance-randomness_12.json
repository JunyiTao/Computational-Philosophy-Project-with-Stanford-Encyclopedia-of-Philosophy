{
    "main_text": "Chance Without Randomness || Pseudorandom Sequences\n4.5 Pseudorandom Sequences\n\n\nAt least some non-random sequences satisfy many of the measure one\nproperties required of random sequences. For example, the Champernowne\nsequence, consisting of all the binary numerals for every non-negative\ninteger listed consecutively (i.e., 011011100101110111\u2026), is\nBorel normal. This sequence isn\u2019t random, as initial subsequences of\nreasonable length are highly compressible. But it looks like it\nsatisfies at least some desiderata for random sequences. This sequence\nis an attempt at producing a pseudorandom sequence\u2014one\nthat passes at least some statistical tests for randomness, yet can be\neasily produced. (The main impetus behind the development of\npseudorandom number generators has been the need to efficiently produce\nnumbers which are random for all practical purposes, for use in\ncryptography or statistical sampling.) Much better examples exist than\nthe Champernowne sequence, which meet more stringent randomness\n properties.[16]\n One simple technique for generating\npseudorandom sequences is a symbol shift algorithm (Smith\n1998: 53). Given an initial \u2018seed\u2019 numeral\n\\(s_1, s_2 , \\ldots ,s_n\\), the algorithm simply spits out the\ndigits in order. Obviously this is useless if the seed is known, or can\nin some way be expected to be correlated with the events to which one\nis applying these pseudorandom numbers. But in practical applications,\nthe seed is often chosen in a way that we do expect it to carry no\ninformation about the application (in simple computer pseudorandom\nnumber generators, the seed may be derived in some way from the time at\nwhich the seed is called for). With a finite seed, this sequence will\nobviously repeat after a some period. A symbol shift is the simplest\npossible function from seed to outcome sequence; better algorithms use\na more complicated but still efficiently computable function of the\nseed to generate outcome sequences with a longer period, much longer\nthan the length of the seed (e.g., the \u2018Mersenne twister\u2019\nof Matsumoto and Nishimura 1998 has a period of \\(2^{19937} - 1)\\).\n\n\nIf the seed is not fixed, but is chosen by chance, we can have\nchance without randomness. For example, suppose the computer has a\nclock representing the external time; the time at which the algorithm\nis started may be used as a seed. But if it is a matter of chance when\nthe algorithm is started, as it well may be in many cases, then the\nparticular sequence that is produced by the efficient pseudorandom\nsequence generator algorithm will be have come about by chance, but not\nbe random (since there is a program which runs the same algorithm on an\nexplicitly given seed; since the seed is finite, there will be such a\nprogram; and since the algorithm is efficient, the length before the\nsequence produced repeats will be longer than the code of the program\nplus the length of the seed, making the produced sequence\ncompressible). Whether the seed is produced by chance or explicitly\nrepresented in the algorithm, the sequence of outcomes will be the\nsame\u2014one more way in which it seems that the chanciness of a\nsequence can vary while whether or not it is random remains constant.\n(Symbol shift dynamics also permit counterexamples to the other\ndirection of RCT\u2014see\n \u00a75.2.)\n\n\nMuch the same point could have been made, of course, with reference\nto any algorithm which may be fed an input chosen by chance, and so may\nproduce an outcome by chance, but where the output is highly\ncompressible. (One way in which pseudorandom sequence generators are\nnice in this respect is that they are designed to produce highly\ncompressible sequences, though non-obviously highly compressible ones).\nThe other interesting thing about those algorithms which produce\npseudorandom sequences is that they provide another kind of\ncounterexample to the epistemic connection between chance and\nrandomness. For our justification in thinking that a given sequence is\nrandom will be based on its passing only finitely many tests; we can be\njustified in believing pseudorandom sequence to be random (in some\nrespectable sense of justification, as long as justification is weaker\nthan truth), and justified in making the inference to chance via RCT.\nBut then we might think that this poses a problem for RCT to play the\nright role epistemically, even if it were true. Suppose one sees a\ngenuinely random sequence and forms the justified belief that it is\nrandom. The existence of pseudorandom sequences entails that things\nmight seem justificatorily exactly as they are and yet the sequence not\nbe random. But such a scenario, arguably, defeats my knowing that the\nsequence is random, and thus defeats my knowing the sequence to have\nbeen produced by chance (and presumably undermines the goodness of the\ninference from randomness to chance).\n",
    "section_title": "4.5 Pseudorandom Sequences",
    "entry_title": "Chance versus Randomness",
    "hierarchy_title": "Chance versus Randomness || Chance Without Randomness || Pseudorandom Sequences",
    "tokenized_text": [
        "chance",
        "without",
        "randomness",
        "pseudorandom",
        "sequence",
        "pseudorandom",
        "sequence",
        "least",
        "nonrandom",
        "sequence",
        "satisfy",
        "many",
        "measure",
        "one",
        "property",
        "required",
        "random",
        "sequence",
        "example",
        "champernowne",
        "sequence",
        "consisting",
        "binary",
        "numeral",
        "every",
        "nonnegative",
        "integer",
        "listed",
        "consecutively",
        "ie",
        "borel",
        "normal",
        "sequence",
        "random",
        "initial",
        "subsequence",
        "reasonable",
        "length",
        "highly",
        "compressible",
        "look",
        "like",
        "satisfies",
        "least",
        "desideratum",
        "random",
        "sequence",
        "sequence",
        "attempt",
        "producing",
        "pseudorandom",
        "sequenceone",
        "pass",
        "least",
        "statistical",
        "test",
        "randomness",
        "yet",
        "easily",
        "produced",
        "main",
        "impetus",
        "behind",
        "development",
        "pseudorandom",
        "number",
        "generator",
        "need",
        "efficiently",
        "produce",
        "number",
        "random",
        "practical",
        "purpose",
        "use",
        "cryptography",
        "statistical",
        "sampling",
        "much",
        "better",
        "example",
        "exist",
        "champernowne",
        "sequence",
        "meet",
        "stringent",
        "randomness",
        "property",
        "one",
        "simple",
        "technique",
        "generating",
        "pseudorandom",
        "sequence",
        "symbol",
        "shift",
        "algorithm",
        "smith",
        "given",
        "initial",
        "seed",
        "numeral",
        "s_",
        "s_",
        "ldots",
        "s_n",
        "algorithm",
        "simply",
        "spit",
        "digit",
        "order",
        "obviously",
        "useless",
        "seed",
        "known",
        "way",
        "expected",
        "correlated",
        "event",
        "one",
        "applying",
        "pseudorandom",
        "number",
        "practical",
        "application",
        "seed",
        "often",
        "chosen",
        "way",
        "expect",
        "carry",
        "information",
        "application",
        "simple",
        "computer",
        "pseudorandom",
        "number",
        "generator",
        "seed",
        "may",
        "derived",
        "way",
        "time",
        "seed",
        "called",
        "finite",
        "seed",
        "sequence",
        "obviously",
        "repeat",
        "period",
        "symbol",
        "shift",
        "simplest",
        "possible",
        "function",
        "seed",
        "outcome",
        "sequence",
        "better",
        "algorithm",
        "use",
        "complicated",
        "still",
        "efficiently",
        "computable",
        "function",
        "seed",
        "generate",
        "outcome",
        "sequence",
        "longer",
        "period",
        "much",
        "longer",
        "length",
        "seed",
        "eg",
        "mersenne",
        "twister",
        "matsumoto",
        "nishimura",
        "period",
        "seed",
        "fixed",
        "chosen",
        "chance",
        "chance",
        "without",
        "randomness",
        "example",
        "suppose",
        "computer",
        "clock",
        "representing",
        "external",
        "time",
        "time",
        "algorithm",
        "started",
        "may",
        "used",
        "seed",
        "matter",
        "chance",
        "algorithm",
        "started",
        "well",
        "may",
        "many",
        "case",
        "particular",
        "sequence",
        "produced",
        "efficient",
        "pseudorandom",
        "sequence",
        "generator",
        "algorithm",
        "come",
        "chance",
        "random",
        "since",
        "program",
        "run",
        "algorithm",
        "explicitly",
        "given",
        "seed",
        "since",
        "seed",
        "finite",
        "program",
        "since",
        "algorithm",
        "efficient",
        "length",
        "sequence",
        "produced",
        "repeat",
        "longer",
        "code",
        "program",
        "plus",
        "length",
        "seed",
        "making",
        "produced",
        "sequence",
        "compressible",
        "whether",
        "seed",
        "produced",
        "chance",
        "explicitly",
        "represented",
        "algorithm",
        "sequence",
        "outcome",
        "sameone",
        "way",
        "seems",
        "chanciness",
        "sequence",
        "vary",
        "whether",
        "random",
        "remains",
        "constant",
        "symbol",
        "shift",
        "dynamic",
        "also",
        "permit",
        "counterexample",
        "direction",
        "rctsee",
        "much",
        "point",
        "could",
        "made",
        "course",
        "reference",
        "algorithm",
        "may",
        "fed",
        "input",
        "chosen",
        "chance",
        "may",
        "produce",
        "outcome",
        "chance",
        "output",
        "highly",
        "compressible",
        "one",
        "way",
        "pseudorandom",
        "sequence",
        "generator",
        "nice",
        "respect",
        "designed",
        "produce",
        "highly",
        "compressible",
        "sequence",
        "though",
        "nonobviously",
        "highly",
        "compressible",
        "one",
        "interesting",
        "thing",
        "algorithm",
        "produce",
        "pseudorandom",
        "sequence",
        "provide",
        "another",
        "kind",
        "counterexample",
        "epistemic",
        "connection",
        "chance",
        "randomness",
        "justification",
        "thinking",
        "given",
        "sequence",
        "random",
        "based",
        "passing",
        "finitely",
        "many",
        "test",
        "justified",
        "believing",
        "pseudorandom",
        "sequence",
        "random",
        "respectable",
        "sense",
        "justification",
        "long",
        "justification",
        "weaker",
        "truth",
        "justified",
        "making",
        "inference",
        "chance",
        "via",
        "rct",
        "might",
        "think",
        "pose",
        "problem",
        "rct",
        "play",
        "right",
        "role",
        "epistemically",
        "even",
        "true",
        "suppose",
        "one",
        "see",
        "genuinely",
        "random",
        "sequence",
        "form",
        "justified",
        "belief",
        "random",
        "existence",
        "pseudorandom",
        "sequence",
        "entail",
        "thing",
        "might",
        "seem",
        "justificatorily",
        "exactly",
        "yet",
        "sequence",
        "random",
        "scenario",
        "arguably",
        "defeat",
        "knowing",
        "sequence",
        "random",
        "thus",
        "defeat",
        "knowing",
        "sequence",
        "produced",
        "chance",
        "presumably",
        "undermines",
        "goodness",
        "inference",
        "randomness",
        "chance"
    ]
}