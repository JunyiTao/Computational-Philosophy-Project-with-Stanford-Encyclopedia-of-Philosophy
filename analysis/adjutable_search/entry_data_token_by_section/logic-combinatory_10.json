{
    "main_text": "Computable functions and arithmetic\n5.1 G\u00f6del sentence\n\nThe abbreviations and the interspersed explanations in the sketch above may\nobscure that arithmetic has been formalized in a language that consists of\nfive symbols (when juxtaposition is not counted): \\(\\textsf{S}\\), \n\\(\\textsf{K}\\), \\(=\\) plus two delimiters, \\(\\,(\\,\\) and \n\\(\\,)\\,\\). The finite (and perhaps, surprisingly small) number of\nsymbols and the availability of recursive functions conjure the thought that\nan arithmetization of the syntax of CL could be attempted.\n\nG\u00f6del\nachieved an encoding of a formal language by assigning numbers to symbols,\nformulas and sequences of formulas, which later became known as\n\u201cG\u00f6del numbers.\u201d Concretely, G\u00f6del assigned odd numbers\nto symbols and products of powers of primes (with the number corresponding to \na symbol in the exponent) to sequences of symbols. However, it is possible to \narithmetize the language of CL without placing a strong emphasis on the \nexistence and the properties of prime numbers. (See for example, \nRaymond\u00a0M.\u00a0Smullyan\u2019s books: Smullyan (1985) and Smullyan (1994).) \nThe five symbols get as their G\u00f6del numbers the first five positive \nintegers. A string is assigned the number in base \\(10\\) that results from \nthe concatenation of the corresponding numbers for the symbols.\n\nThe following outline gives the flavor of an analogue of G\u00f6del\u2019s\nincompleteness theorem adapted to CL. It is possible to define a combinator\nsuch that if this combinator is applied to a numeral \\(n\\), then the whole\nterm reduces to the numeral \\(m\\) that is the numeral denoting\nthe G\u00f6del number of the numeral \\(n\\). Slightly more formally,\nthere is a combinator \\(\\delta\\) such that \\(\\delta n = G(n)\\) (where \\(G\n(n)\\) denotes the G\u00f6del number of the expression \\(n\\)). Furthermore,\nthere is a combinatory term, which returns the numeral itself followed by\n\\(G(n)\\), when applied to a numeral \\(n\\). For any term \\(A\\) there is a term\n\\(B\\) such that the equation \\(A(\\delta B)=B\\) is true. This statement (or its\nconcrete variant for a particular formal system) is usually called\nthe second fixed point theorem. Computable characteristic functions of\nrecursive sets of numbers can be represented by combinators with the choice of\n\\(\\textsf{K}\\) for truth and \\(\\textsf{KI}\\) for falsity. The complements of\nsuch functions are computable too. Finally, it can be proved that there is no\ncombinator that represents the set of all true equations. To put it\ndifferently, any combinator either represents a set of equations that fails to\ninclude some true equations, or represents a set of equations that includes\nall true but also some false equations.\n\nAlonzo Church\nproved the undecidability of classical first-order logic relying on \nG\u00f6del\u2019s incompleteness theorem. Dana Scott proved that if \\(A\\) is a \nnonempty proper subset of \\(\\lambda\\)-terms that is closed under equality \nthen \\(A\\) is not recursive. The analogous claim for CL, that follows from \nthe existence of a G\u00f6delian sentence for CL, is that it is \nundecidable if two CL-terms are equal.\n",
    "section_title": "5.1 G\u00f6del sentence",
    "entry_title": "Combinatory Logic",
    "hierarchy_title": "Combinatory Logic || Computable functions and arithmetic",
    "tokenized_text": [
        "computable",
        "function",
        "arithmetic",
        "g\u00f6del",
        "sentence",
        "abbreviation",
        "interspersed",
        "explanation",
        "sketch",
        "may",
        "obscure",
        "arithmetic",
        "formalized",
        "language",
        "consists",
        "five",
        "symbol",
        "juxtaposition",
        "counted",
        "textsf",
        "textsf",
        "k",
        "plus",
        "two",
        "delimiters",
        "finite",
        "perhaps",
        "surprisingly",
        "small",
        "number",
        "symbol",
        "availability",
        "recursive",
        "function",
        "conjure",
        "thought",
        "arithmetization",
        "syntax",
        "cl",
        "could",
        "attempted",
        "g\u00f6del",
        "achieved",
        "encoding",
        "formal",
        "language",
        "assigning",
        "number",
        "symbol",
        "formula",
        "sequence",
        "formula",
        "later",
        "became",
        "known",
        "g\u00f6del",
        "numbers",
        "concretely",
        "g\u00f6del",
        "assigned",
        "odd",
        "number",
        "symbol",
        "product",
        "power",
        "prime",
        "number",
        "corresponding",
        "symbol",
        "exponent",
        "sequence",
        "symbol",
        "however",
        "possible",
        "arithmetize",
        "language",
        "cl",
        "without",
        "placing",
        "strong",
        "emphasis",
        "existence",
        "property",
        "prime",
        "number",
        "see",
        "example",
        "raymond",
        "m",
        "smullyan",
        "book",
        "smullyan",
        "smullyan",
        "five",
        "symbol",
        "get",
        "g\u00f6del",
        "number",
        "first",
        "five",
        "positive",
        "integer",
        "string",
        "assigned",
        "number",
        "base",
        "result",
        "concatenation",
        "corresponding",
        "number",
        "symbol",
        "following",
        "outline",
        "give",
        "flavor",
        "analogue",
        "g\u00f6del",
        "incompleteness",
        "theorem",
        "adapted",
        "cl",
        "possible",
        "define",
        "combinator",
        "combinator",
        "applied",
        "numeral",
        "n",
        "whole",
        "term",
        "reduces",
        "numeral",
        "m",
        "numeral",
        "denoting",
        "g\u00f6del",
        "number",
        "numeral",
        "n",
        "slightly",
        "formally",
        "combinator",
        "delta",
        "delta",
        "n",
        "g",
        "n",
        "g",
        "n",
        "denotes",
        "g\u00f6del",
        "number",
        "expression",
        "n",
        "furthermore",
        "combinatory",
        "term",
        "return",
        "numeral",
        "followed",
        "g",
        "n",
        "applied",
        "numeral",
        "n",
        "term",
        "a",
        "term",
        "b",
        "equation",
        "delta",
        "b",
        "b",
        "true",
        "statement",
        "concrete",
        "variant",
        "particular",
        "formal",
        "system",
        "usually",
        "called",
        "second",
        "fixed",
        "point",
        "theorem",
        "computable",
        "characteristic",
        "function",
        "recursive",
        "set",
        "number",
        "represented",
        "combinators",
        "choice",
        "textsf",
        "k",
        "truth",
        "textsf",
        "ki",
        "falsity",
        "complement",
        "function",
        "computable",
        "finally",
        "proved",
        "combinator",
        "represents",
        "set",
        "true",
        "equation",
        "put",
        "differently",
        "combinator",
        "either",
        "represents",
        "set",
        "equation",
        "fails",
        "include",
        "true",
        "equation",
        "represents",
        "set",
        "equation",
        "includes",
        "true",
        "also",
        "false",
        "equation",
        "alonzo",
        "church",
        "proved",
        "undecidability",
        "classical",
        "firstorder",
        "logic",
        "relying",
        "g\u00f6del",
        "incompleteness",
        "theorem",
        "dana",
        "scott",
        "proved",
        "a",
        "nonempty",
        "proper",
        "subset",
        "lambda",
        "terms",
        "closed",
        "equality",
        "a",
        "recursive",
        "analogous",
        "claim",
        "cl",
        "follows",
        "existence",
        "g\u00f6delian",
        "sentence",
        "cl",
        "undecidable",
        "two",
        "clterms",
        "equal"
    ]
}