{
    "main_text": "Verification\n6. Verification\n\nA crucial step in the software development process is verification.\nThis consists in the process of evaluating whether a given\ncomputational system is correct with respect to the specification of\nits design. In the early days of the computer industry, validity and\ncorrectness checking methods included several design and construction\ntechniques, see for example (Arif et al. 2018). Nowadays,\ncorrectness evaluation methods can be roughly sorted into two main\ngroups: formal verification and testing. Formal verification (Monin\nand Hinchey 2003) involves a proof of correctness with mathematical\ntools; software testing (Ammann and Offutt 2008) rather consists in\nrunning the implemented program to observe whether performed\nexecutions comply or not with the advanced specifications. In many\npractical cases, a combination of both methods is used (see for\ninstance Callahan et al. 1996).\n",
    "section_title": "6. Verification",
    "entry_title": "The Philosophy of Computer Science",
    "hierarchy_title": "The Philosophy of Computer Science || Verification",
    "tokenized_text": [
        "verification",
        "verification",
        "crucial",
        "step",
        "software",
        "development",
        "process",
        "verification",
        "consists",
        "process",
        "evaluating",
        "whether",
        "given",
        "computational",
        "system",
        "correct",
        "respect",
        "specification",
        "design",
        "early",
        "day",
        "computer",
        "industry",
        "validity",
        "correctness",
        "checking",
        "method",
        "included",
        "several",
        "design",
        "construction",
        "technique",
        "see",
        "example",
        "arif",
        "et",
        "al",
        "nowadays",
        "correctness",
        "evaluation",
        "method",
        "roughly",
        "sorted",
        "two",
        "main",
        "group",
        "formal",
        "verification",
        "testing",
        "formal",
        "verification",
        "monin",
        "hinchey",
        "involves",
        "proof",
        "correctness",
        "mathematical",
        "tool",
        "software",
        "testing",
        "ammann",
        "offutt",
        "rather",
        "consists",
        "running",
        "implemented",
        "program",
        "observe",
        "whether",
        "performed",
        "execution",
        "comply",
        "advanced",
        "specification",
        "many",
        "practical",
        "case",
        "combination",
        "method",
        "used",
        "see",
        "instance",
        "callahan",
        "et",
        "al"
    ]
}