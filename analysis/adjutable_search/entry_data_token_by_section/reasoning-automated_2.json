{
    "main_text": "Introduction || Language Representation\n1.2 Language Representation\n\nA second important consideration in the building of an automated\nreasoning program is to decide (1) how problems in its domain will be\npresented to the reasoning program; (2) how they will actually be\nrepresented internally within the program; and, (3) how the solutions\nfound\u2014completed proofs\u2014will be displayed back to the user.\nThere are several formalisms available for this, and the choice is\ndependent on the problem domain and the underlying deduction calculus\nused by the reasoning program. The most commonly used formalisms\ninclude standard first-order logic, typed \u03bb-calculus, and\nclausal logic. We take up clausal logic here and assume that the\nreader is familiar with the rudiments of first-order logic; for the\ntyped \u03bb-calculus the reader may want to check Church 1940.\nClausal logic is a quantifier-free variation of first-order logic and\nhas been the most widely used notation within the automated reasoning\ncommunity. Some definitions are in order: A term is a\nconstant, a variable, or a function whose arguments are themselves\nterms. For example, a, x, f(x),\nand h(c,f(z),y) are all\nterms. A literal is either an atomic formula, e.g.\nF(x), or the negation of an atomic formula, e.g.\n~R(x,f(a)). Two literals are\ncomplementary if one is the negation of the other. A\nclause is a (possibly empty) finite disjunction of\nliterals l1\u2228 \u2026 \u2228\nln where no literal appears more than once in the\nclause (that is, clauses can be alternatively treated as sets of\nliterals). Ground terms, ground literals, and ground\nclauses have no variables. The empty clause,\n[\u00a0], is the clause having no literals and, hence, is\nunsatisfiable\u2014false under any interpretation. Some examples:\n~R(a,b), and F(a) \u2228\n~R(f(x),b) \u2228\nF(z) are both examples of clauses but only the\nformer is ground. The general idea is to be able to express a\nproblem\u2019s formulation as a set of clauses or, equivalently, as a\nformula in conjunctive normal form (CNF), that is, as\na conjunction of clauses.\n\nFor formulas already expressed in standard logic notation, there is a\nsystematic two-step procedure for transforming them into conjunctive\nnormal form. The first step consists in re-expressing a formula into a\nsemantically equivalent formula in prenex normal\nform,\n(\u0398x1)\u2026(\u0398xn)\u03b1(x1,\u2026,xn), consisting of a\nstring of quantifiers\n(\u0398x1)\u2026(\u0398xn)\nfollowed by a quantifier-free expression\n\u03b1(x1,\u2026,xn) called\nthe matrix. The second step in the transformation\nfirst converts the matrix into conjunctive normal form by using\nwell-known logical equivalences such as DeMorgan\u2019s laws, distribution,\ndouble-negation, and others; then, the quantifiers in front of the\nmatrix, which is now in conjunctive normal form, are dropped according\nto certain rules. In the presence of existential quantifiers, this\nlatter step does not always preserve equivalence and requires the\nintroduction of Skolem functions whose role is to\n\u201csimulate\u201d the behaviour of existentially quantified\nvariables. For example, applying the skolemizing process to the\nformula\n\n\u2200x\u2203y\u2200z\u2203u\u2200v[R(x,y,v)\n\u2228 ~K(x,z,u,v)]\n\n\nrequires the introduction of a one-place and two-place Skolem\nfunctions, f and g respectively, resulting in the\nformula\n\n\u2200x\u2200z\u2200v[R(x,f(x),v)\n\u2228\n~K(x,z,g(x,z),v)]\n\n\nThe universal quantifiers can then be removed to obtain the final\nclause, R(x,f(x),v) \u2228\n~K(x,z,g(x,z),v)\nin our example. The Skolemizing process may not preserve equivalence\nbut maintains satisfiability, which is enough for clause-based\nautomated reasoning.\n\nAlthough clausal form provides a more uniform and economical\nnotation\u2014there are no quantifiers and all formulas are\ndisjunctions\u2014it has certain disadvantages. One drawback is the\nincrease in the size of the resulting formula when transformed from\nstandard logic notation into clausal form. The increase in size is\naccompanied by an increase in cognitive complexity that makes it\nharder for humans to read proofs written with clauses. Another\ndisadvantage is that the syntactic structure of a formula in standard\nlogic notation can be used to guide the construction of a proof but\nthis information is completely lost in the transformation into clausal\nform.\n",
    "section_title": "1.2 Language Representation",
    "entry_title": "Automated Reasoning",
    "hierarchy_title": "Automated Reasoning || Introduction || Language Representation",
    "tokenized_text": [
        "introduction",
        "language",
        "representation",
        "language",
        "representation",
        "second",
        "important",
        "consideration",
        "building",
        "automated",
        "reasoning",
        "program",
        "decide",
        "problem",
        "domain",
        "presented",
        "reasoning",
        "program",
        "actually",
        "represented",
        "internally",
        "within",
        "program",
        "solution",
        "foundcompleted",
        "proofswill",
        "displayed",
        "back",
        "user",
        "several",
        "formalism",
        "available",
        "choice",
        "dependent",
        "problem",
        "domain",
        "underlying",
        "deduction",
        "calculus",
        "used",
        "reasoning",
        "program",
        "commonly",
        "used",
        "formalism",
        "include",
        "standard",
        "firstorder",
        "logic",
        "typed",
        "\u03bbcalculus",
        "clausal",
        "logic",
        "take",
        "clausal",
        "logic",
        "assume",
        "reader",
        "familiar",
        "rudiment",
        "firstorder",
        "logic",
        "typed",
        "\u03bbcalculus",
        "reader",
        "may",
        "want",
        "check",
        "church",
        "clausal",
        "logic",
        "quantifierfree",
        "variation",
        "firstorder",
        "logic",
        "widely",
        "used",
        "notation",
        "within",
        "automated",
        "reasoning",
        "community",
        "definition",
        "order",
        "term",
        "constant",
        "variable",
        "function",
        "whose",
        "argument",
        "term",
        "example",
        "x",
        "f",
        "x",
        "h",
        "c",
        "f",
        "z",
        "term",
        "literal",
        "either",
        "atomic",
        "formula",
        "eg",
        "f",
        "x",
        "negation",
        "atomic",
        "formula",
        "eg",
        "r",
        "x",
        "f",
        "two",
        "literal",
        "complementary",
        "one",
        "negation",
        "clause",
        "possibly",
        "empty",
        "finite",
        "disjunction",
        "literal",
        "l",
        "ln",
        "literal",
        "appears",
        "clause",
        "clause",
        "alternatively",
        "treated",
        "set",
        "literal",
        "ground",
        "term",
        "ground",
        "literal",
        "ground",
        "clause",
        "variable",
        "empty",
        "clause",
        "clause",
        "literal",
        "hence",
        "unsatisfiablefalse",
        "interpretation",
        "example",
        "r",
        "b",
        "f",
        "r",
        "f",
        "x",
        "b",
        "f",
        "z",
        "example",
        "clause",
        "former",
        "ground",
        "general",
        "idea",
        "able",
        "express",
        "problem",
        "formulation",
        "set",
        "clause",
        "equivalently",
        "formula",
        "conjunctive",
        "normal",
        "form",
        "cnf",
        "conjunction",
        "clause",
        "formula",
        "already",
        "expressed",
        "standard",
        "logic",
        "notation",
        "systematic",
        "twostep",
        "procedure",
        "transforming",
        "conjunctive",
        "normal",
        "form",
        "first",
        "step",
        "consists",
        "reexpressing",
        "formula",
        "semantically",
        "equivalent",
        "formula",
        "prenex",
        "normal",
        "form",
        "\u03b8x",
        "\u03b8xn",
        "\u03b1",
        "x",
        "xn",
        "consisting",
        "string",
        "quantifier",
        "\u03b8x",
        "\u03b8xn",
        "followed",
        "quantifierfree",
        "expression",
        "\u03b1",
        "x",
        "xn",
        "called",
        "matrix",
        "second",
        "step",
        "transformation",
        "first",
        "convert",
        "matrix",
        "conjunctive",
        "normal",
        "form",
        "using",
        "wellknown",
        "logical",
        "equivalence",
        "demorgan",
        "law",
        "distribution",
        "doublenegation",
        "others",
        "quantifier",
        "front",
        "matrix",
        "conjunctive",
        "normal",
        "form",
        "dropped",
        "according",
        "certain",
        "rule",
        "presence",
        "existential",
        "quantifier",
        "latter",
        "step",
        "always",
        "preserve",
        "equivalence",
        "requires",
        "introduction",
        "skolem",
        "function",
        "whose",
        "role",
        "simulate",
        "behaviour",
        "existentially",
        "quantified",
        "variable",
        "example",
        "applying",
        "skolemizing",
        "process",
        "formula",
        "xyzuv",
        "r",
        "x",
        "v",
        "k",
        "x",
        "z",
        "u",
        "v",
        "requires",
        "introduction",
        "oneplace",
        "twoplace",
        "skolem",
        "function",
        "f",
        "g",
        "respectively",
        "resulting",
        "formula",
        "xzv",
        "r",
        "x",
        "f",
        "x",
        "v",
        "k",
        "x",
        "z",
        "g",
        "x",
        "z",
        "v",
        "universal",
        "quantifier",
        "removed",
        "obtain",
        "final",
        "clause",
        "r",
        "x",
        "f",
        "x",
        "v",
        "k",
        "x",
        "z",
        "g",
        "x",
        "z",
        "v",
        "example",
        "skolemizing",
        "process",
        "may",
        "preserve",
        "equivalence",
        "maintains",
        "satisfiability",
        "enough",
        "clausebased",
        "automated",
        "reasoning",
        "although",
        "clausal",
        "form",
        "provides",
        "uniform",
        "economical",
        "notationthere",
        "quantifier",
        "formula",
        "disjunctionsit",
        "certain",
        "disadvantage",
        "one",
        "drawback",
        "increase",
        "size",
        "resulting",
        "formula",
        "transformed",
        "standard",
        "logic",
        "notation",
        "clausal",
        "form",
        "increase",
        "size",
        "accompanied",
        "increase",
        "cognitive",
        "complexity",
        "make",
        "harder",
        "human",
        "read",
        "proof",
        "written",
        "clause",
        "another",
        "disadvantage",
        "syntactic",
        "structure",
        "formula",
        "standard",
        "logic",
        "notation",
        "used",
        "guide",
        "construction",
        "proof",
        "information",
        "completely",
        "lost",
        "transformation",
        "clausal",
        "form"
    ]
}