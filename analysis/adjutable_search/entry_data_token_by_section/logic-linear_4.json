{
    "main_text": "Proof Systems || Proof nets\n2.3 Proof nets\n\nProofs presented using a sequent calculus contain a lot of detail that\nsometimes is uninteresting: consider for example how many\nuninterestingly different ways there are to form a proof of \\(\\vdash\n\\Gamma , (A_1\\lpar A_2), \\ldots ,(A_{n-1}\\lpar A_n)\\) from a\nderivation of \\(\\vdash \\Gamma , A_1, A_2 , \\ldots ,A_n\\). This\nunpleasant fact derives from the sequential nature of proofs in a\nsequent calculus: if we want to apply a set \\(S\\) of \\(n\\) rules to\ndifferent parts of a sequent, we cannot apply them in one step, even\nif they do not interfere with each other! We must\nsequentialize them, i.e., choose a linear order on \\(S\\) and\napply the rules in \\(n\\) steps, according to this order.\n\nA natural question arises: \u201cIs there a representation of proofs\nthat abstracts from such uninteresting details?\u201d. A similar\nquestion is answered positively in the case of intuitionistic sequent\ncalculus by means of what is known as natural deduction, that\nhas, via the Curry-Howard correspondence (Howard 1980),\na strong connection with the\ncomputational device known as \\(\\lambda\\)-calculus.\n\nFor linear logic, this succinct representation of proofs is given by\nproof nets, graph-like structures that enjoy particularly\ngood properties for the MLL fragment of the logic. The first step\ntowards this representation is to convert all the sequent calculus\nsystem, using the involutivity of negation, into a one-sided system,\nwhere sequents are of the form \\(\\vdash \\Gamma\\). As a consequence,\nthe number of rules is reduced since we have no left-introduction\nrules, but we keep the same expressive power, as provability stays the\nsame.\n\nTo each sequent calculus proof in MLL, one can inductively associate a\nproof net with the same conclusions as follows:\n\nTo a proof reduced to the axiom rule, we associate an axiom\nlink.\n\n\n\n \nFor a proof obtained by applying the cut rule to two proofs, we\nfirst inductively build the proof nets associated to those two proofs,\nand then we combine them using a cut link.\n\n\n\n \nFor a proof obtained by applying the tensor rule to two proofs, we\nfirst inductively build the proof nets associated to those two proofs,\nand then we combine them using a tensor link.\n\n\n\n \nFor a proof obtained by applying the par rule to a proof, first\ninductively build the proof net associated to that proof, and then we\nadd a \u201cpar link\u201d.\n\n\n\n \n\n\nAll this can be properly formalized using hypergraphs (formulas are\nnodes and \u201clinks\u201d are oriented hyperedges with hypotheses\nand conclusions), and we can formally define as a proof net a\nhypergraph inductively built out of a sequent calculus derivation of\nMLL. Notice that there are quite a lot of hypergraphs that are not\nproof nets.\n\nNow if you look at the proof net built from the derivations of\n\\(\\vdash \\Gamma , (A_1\\lpar A_2), \\ldots ,(A_{n-1}\\lpar A_n)\\)\nobtained from \\(\\vdash \\Gamma , A_1, A_2 , \\ldots ,A_n\\), you will see\nthat all trace of the order of application of the rules has\ndisappeared. In a sense, the proof nets are an equivalence class of\nsequent calculus derivations with respect to the derivation order of\nrules whose application commute.\n\nSuppose that somebody now comes to you with a huge hypergraph built\nwith axiom, cut, par and tensor links, claiming that it is actually\na representation of a proof.\nHow can you verify that it is actually a representation of a\nproof, and not just a random structure?\n\nPerforming this correctness check is a challenge that amounts\nto rebuilding a sequential construction history for your structure,\ncorresponding to a derivation in sequent calculus, and seems at first\na very complex problem. The first correctness criterion for MLL proof\nnets, called the \u201clong trip criterion\u201d, and present in\nGirard\u2019s original paper, is exponential, as well as the ACC\n(Acyclic connected) criterion of Danos and Regnier\n (1989)\n found later on. Nevertheless, there exists a much more efficient\ncriterion, known as Contractibility, due to Danos and Regnier, that\nhas more recently been reformulated as the following elegant graph\nparsing criterion by Guerrini, Martini and Masini: a hypergraph is a\nproof net if and only if it reduces to the singleton node\n\u201cnet\u201d via the following graph reduction rules\n\n\n\n\nPerforming this check naively can take quadratic time (each\napplication of a rule may require an entire lookup of the graph to\nfind the redex, and we need to perform as many steps as there are\nhyperlinks in the graph). Linear time algorithms have been give by\nGuerrini\n (2011)\n and by Murawski and Ong\n (2006).\n\nAnother style of correctness criterion for MLL proof nets is given by\nRetor\u00e9\n (2003)\n in which a quadratic algorithm is given for MLL. \n\nOn proof nets, one can perform cut elimination in a particularly clean\nway, because of their parallel nature, cuts can be eliminated locally via\ntwo simplification rules:\n\nAxiom move:\n\n\n\n \nMultiplicative move:\n\n\n\n \n\n\nThese are actually computation rules over proof nets, and the\ncorrectness criteria allow to verify easily that any such rule\npreserves correctness, and as a consequence, the reduction of a proof\nnet still comes from a sequent calculus proof of the same sequent.\n\nHence, cut elimination in MLL proof nets can be performed in linear\ntime and gives a simple, elegant cut-elimination result for all of\nMLL.\n\nThe proof nets approach can be extended to larger subsets of linear\nlogic, but then it is less clear how to obtain the same elegant\nresults as for MLL: the original system proposed in\n Girard 1987\n works for MELL, for example, by associating to the four exponential\nrules the following hypergraph constructions:\n\nContraction\n\n\n\n \nWeakening\n\n\n\n \nDereliction\n\n\n\n \nPromotion, that introduces the notion of \u201cbox\u201d, a\nsequentialization mark around a piece of a proof net materialized in\nthe pictures of the graphs by the rectangle drawn around the proof net\nof conclusions \\(A\\) and \\(\\quest\\Gamma\\).\n\n\n\n \n\n\nWhile these constructions and the associated graph reductions bear\nstriking similarity with \\(\\lambda\\)-calculus with explicit\nsubstitutions, as first remarked by Di Cosmo & Kesner\n (1997),\n they are too similar to the corresponding sequent calculus rules. The\nparallelization effect so elegant for MLL does not properly carry on\nhere, and the graph reduction rules involve boxes and are not\nlocal.\n\nTo recover a satisfactory system, many proposals have been made,\nstarting from the one by Danos & Regnier\n (1995)\n but we want to mention here the very elegant approach by Guerrini,\nMartini and Masini\n (Guerrini et al. 2003),\n that neatly shows the connection between two level proof systems for\nmodal logic, proper proof nets for MELL, and optimal reduction in the\n\\(\\lambda\\)-calculus.\n\nA recent paper by Heijltjes and Houston\n (2016)\n has shown that there can be no satisfactory notion of proof nets for\nMLL if units are also allowed. \n\nIt is possible to provide a canonical treatment of additive\nconnectives, even with first-order quantification\n (Heijltjes et al. 2019).\n Proof nets for formulas containing both multiplicative and additive\nconnectives have various technical presentations, none of which\nappears canonical and satisfactory. Their treatment in proof-net-like\nproof systems is currently a topic of active research. In particular,\nsee\n (Hughes and van Glabbeek 2005)\n and\n (Hughes and Heijltjes 2016).\n \n",
    "section_title": "2.3 Proof nets",
    "entry_title": "Linear Logic",
    "hierarchy_title": "Linear Logic || Proof Systems || Proof nets",
    "tokenized_text": [
        "proof",
        "system",
        "proof",
        "net",
        "proof",
        "net",
        "proof",
        "presented",
        "using",
        "sequent",
        "calculus",
        "contain",
        "lot",
        "detail",
        "sometimes",
        "uninteresting",
        "consider",
        "example",
        "many",
        "uninterestingly",
        "different",
        "way",
        "form",
        "proof",
        "vdash",
        "gamma",
        "a_lpar",
        "a_",
        "ldots",
        "a_",
        "n",
        "lpar",
        "a_n",
        "derivation",
        "vdash",
        "gamma",
        "a_",
        "a_",
        "ldots",
        "a_n",
        "unpleasant",
        "fact",
        "derives",
        "sequential",
        "nature",
        "proof",
        "sequent",
        "calculus",
        "want",
        "apply",
        "set",
        "s",
        "n",
        "rule",
        "different",
        "part",
        "sequent",
        "apply",
        "one",
        "step",
        "even",
        "interfere",
        "must",
        "sequentialize",
        "ie",
        "choose",
        "linear",
        "order",
        "s",
        "apply",
        "rule",
        "n",
        "step",
        "according",
        "order",
        "natural",
        "question",
        "arises",
        "representation",
        "proof",
        "abstract",
        "uninteresting",
        "detail",
        "similar",
        "question",
        "answered",
        "positively",
        "case",
        "intuitionistic",
        "sequent",
        "calculus",
        "mean",
        "known",
        "natural",
        "deduction",
        "via",
        "curryhoward",
        "correspondence",
        "howard",
        "strong",
        "connection",
        "computational",
        "device",
        "known",
        "lambda",
        "calculus",
        "linear",
        "logic",
        "succinct",
        "representation",
        "proof",
        "given",
        "proof",
        "net",
        "graphlike",
        "structure",
        "enjoy",
        "particularly",
        "good",
        "property",
        "mll",
        "fragment",
        "logic",
        "first",
        "step",
        "towards",
        "representation",
        "convert",
        "sequent",
        "calculus",
        "system",
        "using",
        "involutivity",
        "negation",
        "onesided",
        "system",
        "sequents",
        "form",
        "vdash",
        "gamma",
        "consequence",
        "number",
        "rule",
        "reduced",
        "since",
        "leftintroduction",
        "rule",
        "keep",
        "expressive",
        "power",
        "provability",
        "stay",
        "sequent",
        "calculus",
        "proof",
        "mll",
        "one",
        "inductively",
        "associate",
        "proof",
        "net",
        "conclusion",
        "follows",
        "proof",
        "reduced",
        "axiom",
        "rule",
        "associate",
        "axiom",
        "link",
        "proof",
        "obtained",
        "applying",
        "cut",
        "rule",
        "two",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "two",
        "proof",
        "combine",
        "using",
        "cut",
        "link",
        "proof",
        "obtained",
        "applying",
        "tensor",
        "rule",
        "two",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "two",
        "proof",
        "combine",
        "using",
        "tensor",
        "link",
        "proof",
        "obtained",
        "applying",
        "par",
        "rule",
        "proof",
        "first",
        "inductively",
        "build",
        "proof",
        "net",
        "associated",
        "proof",
        "add",
        "par",
        "link",
        "properly",
        "formalized",
        "using",
        "hypergraphs",
        "formula",
        "node",
        "link",
        "oriented",
        "hyperedges",
        "hypothesis",
        "conclusion",
        "formally",
        "define",
        "proof",
        "net",
        "hypergraph",
        "inductively",
        "built",
        "sequent",
        "calculus",
        "derivation",
        "mll",
        "notice",
        "quite",
        "lot",
        "hypergraphs",
        "proof",
        "net",
        "look",
        "proof",
        "net",
        "built",
        "derivation",
        "vdash",
        "gamma",
        "a_lpar",
        "a_",
        "ldots",
        "a_",
        "n",
        "lpar",
        "a_n",
        "obtained",
        "vdash",
        "gamma",
        "a_",
        "a_",
        "ldots",
        "a_n",
        "see",
        "trace",
        "order",
        "application",
        "rule",
        "disappeared",
        "sense",
        "proof",
        "net",
        "equivalence",
        "class",
        "sequent",
        "calculus",
        "derivation",
        "respect",
        "derivation",
        "order",
        "rule",
        "whose",
        "application",
        "commute",
        "suppose",
        "somebody",
        "come",
        "huge",
        "hypergraph",
        "built",
        "axiom",
        "cut",
        "par",
        "tensor",
        "link",
        "claiming",
        "actually",
        "representation",
        "proof",
        "verify",
        "actually",
        "representation",
        "proof",
        "random",
        "structure",
        "performing",
        "correctness",
        "check",
        "challenge",
        "amount",
        "rebuilding",
        "sequential",
        "construction",
        "history",
        "structure",
        "corresponding",
        "derivation",
        "sequent",
        "calculus",
        "seems",
        "first",
        "complex",
        "problem",
        "first",
        "correctness",
        "criterion",
        "mll",
        "proof",
        "net",
        "called",
        "long",
        "trip",
        "criterion",
        "present",
        "girard",
        "original",
        "paper",
        "exponential",
        "well",
        "acc",
        "acyclic",
        "connected",
        "criterion",
        "danos",
        "regnier",
        "found",
        "later",
        "nevertheless",
        "exists",
        "much",
        "efficient",
        "criterion",
        "known",
        "contractibility",
        "due",
        "danos",
        "regnier",
        "recently",
        "reformulated",
        "following",
        "elegant",
        "graph",
        "parsing",
        "criterion",
        "guerrini",
        "martini",
        "masini",
        "hypergraph",
        "proof",
        "net",
        "reduces",
        "singleton",
        "node",
        "net",
        "via",
        "following",
        "graph",
        "reduction",
        "rule",
        "performing",
        "check",
        "naively",
        "take",
        "quadratic",
        "time",
        "application",
        "rule",
        "may",
        "require",
        "entire",
        "lookup",
        "graph",
        "find",
        "redex",
        "need",
        "perform",
        "many",
        "step",
        "hyperlink",
        "graph",
        "linear",
        "time",
        "algorithm",
        "give",
        "guerrini",
        "murawski",
        "ong",
        "another",
        "style",
        "correctness",
        "criterion",
        "mll",
        "proof",
        "net",
        "given",
        "retor\u00e9",
        "quadratic",
        "algorithm",
        "given",
        "mll",
        "proof",
        "net",
        "one",
        "perform",
        "cut",
        "elimination",
        "particularly",
        "clean",
        "way",
        "parallel",
        "nature",
        "cut",
        "eliminated",
        "locally",
        "via",
        "two",
        "simplification",
        "rule",
        "axiom",
        "move",
        "multiplicative",
        "move",
        "actually",
        "computation",
        "rule",
        "proof",
        "net",
        "correctness",
        "criterion",
        "allow",
        "verify",
        "easily",
        "rule",
        "preserve",
        "correctness",
        "consequence",
        "reduction",
        "proof",
        "net",
        "still",
        "come",
        "sequent",
        "calculus",
        "proof",
        "sequent",
        "hence",
        "cut",
        "elimination",
        "mll",
        "proof",
        "net",
        "performed",
        "linear",
        "time",
        "give",
        "simple",
        "elegant",
        "cutelimination",
        "result",
        "mll",
        "proof",
        "net",
        "approach",
        "extended",
        "larger",
        "subset",
        "linear",
        "logic",
        "le",
        "clear",
        "obtain",
        "elegant",
        "result",
        "mll",
        "original",
        "system",
        "proposed",
        "girard",
        "work",
        "mell",
        "example",
        "associating",
        "four",
        "exponential",
        "rule",
        "following",
        "hypergraph",
        "construction",
        "contraction",
        "weakening",
        "dereliction",
        "promotion",
        "introduces",
        "notion",
        "box",
        "sequentialization",
        "mark",
        "around",
        "piece",
        "proof",
        "net",
        "materialized",
        "picture",
        "graph",
        "rectangle",
        "drawn",
        "around",
        "proof",
        "net",
        "conclusion",
        "a",
        "questgamma",
        "construction",
        "associated",
        "graph",
        "reduction",
        "bear",
        "striking",
        "similarity",
        "lambda",
        "calculus",
        "explicit",
        "substitution",
        "first",
        "remarked",
        "di",
        "cosmo",
        "kesner",
        "similar",
        "corresponding",
        "sequent",
        "calculus",
        "rule",
        "parallelization",
        "effect",
        "elegant",
        "mll",
        "properly",
        "carry",
        "graph",
        "reduction",
        "rule",
        "involve",
        "box",
        "local",
        "recover",
        "satisfactory",
        "system",
        "many",
        "proposal",
        "made",
        "starting",
        "one",
        "danos",
        "regnier",
        "want",
        "mention",
        "elegant",
        "approach",
        "guerrini",
        "martini",
        "masini",
        "guerrini",
        "et",
        "al",
        "neatly",
        "show",
        "connection",
        "two",
        "level",
        "proof",
        "system",
        "modal",
        "logic",
        "proper",
        "proof",
        "net",
        "mell",
        "optimal",
        "reduction",
        "lambda",
        "calculus",
        "recent",
        "paper",
        "heijltjes",
        "houston",
        "shown",
        "satisfactory",
        "notion",
        "proof",
        "net",
        "mll",
        "unit",
        "also",
        "allowed",
        "possible",
        "provide",
        "canonical",
        "treatment",
        "additive",
        "connective",
        "even",
        "firstorder",
        "quantification",
        "heijltjes",
        "et",
        "al",
        "proof",
        "net",
        "formula",
        "containing",
        "multiplicative",
        "additive",
        "connective",
        "various",
        "technical",
        "presentation",
        "none",
        "appears",
        "canonical",
        "satisfactory",
        "treatment",
        "proofnetlike",
        "proof",
        "system",
        "currently",
        "topic",
        "active",
        "research",
        "particular",
        "see",
        "hughes",
        "van",
        "glabbeek",
        "hughes",
        "heijltjes"
    ]
}