{
    "url": "logic-many-sorted",
    "title": "Many-Sorted Logic",
    "authorship": {
        "year": "Copyright \u00a9 2022",
        "author_text": "Mar\u00eda Manzano\n<mara@usal.es>\nV\u00edctor Aranda\n<vicarand@ucm.es>",
        "author_links": [
            {
                "mailto:mara%40usal%2ees": "mara@usal.es"
            },
            {
                "mailto:vicarand%40ucm%2ees": "vicarand@ucm.es"
            }
        ],
        "raw_html": "<div id=\"article-copyright\">\n<p>\n<a href=\"../../info.html#c\">Copyright \u00a9 2022</a> by\n\n<br/>\nMar\u00eda Manzano\n&lt;<a href=\"mailto:mara%40usal%2ees\"><em>mara<abbr title=\" at \">@</abbr>usal<abbr title=\" dot \">.</abbr>es</em></a>&gt;<br/>\nV\u00edctor Aranda\n&lt;<a href=\"mailto:vicarand%40ucm%2ees\"><em>vicarand<abbr title=\" at \">@</abbr>ucm<abbr title=\" dot \">.</abbr>es</em></a>&gt;\n    </p>\n</div>"
    },
    "pubinfo": [
        "First published Thu Dec 15, 2022"
    ],
    "preamble": "\n\nClassical logic is the appropriate formal language for describing\nmathematical structures containing a single universe or domain of\ndiscourse. By contrast, many-sorted logic (MSL) allows quantification\nover a variety of domains (called sorts). For this reason, it is a\nsuitable vehicle for dealing with statements concerning different\ntypes of objects, which are ubiquitous in mathematics, philosophy,\ncomputer science, and formal semantics. Each sort groups a unique\ncategory of objects (for example, points and straight lines are\ndifferent types of objects in a 2-sorted structure).\n\nDespite the addition of this expressive resource, many-sorted logic\n\u201cstays inside\u201d first-order logic, so the main metatheorems\n(completeness, interpolation, and so on) can be proved. Many-sorted\nlogic also serves as a unifying framework for translating various\nlogical systems; for instance, some intensional and higher-order\nlogics have natural translations into many-sorted logic. Many-sorted\nfirst-order logic can be reduced to one-sorted first-order logic, both\nsyntactically and semantically. Many-sorted first-order logic can also\nbe extended to a many-sorted second-order logic called \u201csort\nlogic\u201d.\n\nAn axiomatic calculus for many-sorted logic was introduced by Hao Wang\nin Wang (1952), where he made a comparison between one-sorted and\nmany-sorted theories. In 1967, Solomon Feferman gave a sequent\ncalculus for many-sorted logic, proving not only its completeness but\nalso the cut elimination and interpolation theorems (Feferman\n1968). Feferman (2008) summarizes some applications of the many-sorted\ninterpolation theorems to model theory. (See the\n supplement on early history\n for more information.)\n\nSection 1 lays out the basics of many-sorted logic, presenting some\nexamples and explaining how the formal language, structures, and\nsemantics differ or not from classical logic. Section 2 explains how\nto modify a one-sorted first-order calculus to obtain a many-sorted\nversion; also, completeness is treated and some automated theorem\nprovers are mentioned. Section 3 describes a plan on which many-sorted\nlogic serves as a common framework for translating a variety of\nlogical systems. Sections 4 and 5 apply this plan to second-order\nlogic and non-classical logics (modal and dynamic logic),\nrespectively. Finally, section 6 comments on further results in\nmany-sorted logic.\n",
    "toc": [
        {
            "#SyntSema": "1. Syntax and Semantics"
        },
        {
            "#Exam": "1.1 Examples"
        },
        {
            "#FundIdea": "1.2 Fundamental Ideas"
        },
        {
            "#FormLang": "1.3 Formal Language"
        },
        {
            "#ManySortStru": "1.4 Many-sorted Structures"
        },
        {
            "#Sema": "1.5 Semantics"
        },
        {
            "#Calc": "2. Calculus"
        },
        {
            "#DeduCalc": "2.1 Deductive Calculi"
        },
        {
            "#CompNoti": "2.2 Completeness Notions"
        },
        {
            "#CompManySortLogi": "2.3 Completeness of Many-sorted Logic"
        },
        {
            "#AutoTheoProv": "2.4 Automated Theorem Provers"
        },
        {
            "#ManySortLogiUnifFram": "3. Many-sorted Logic as a Unifying Framework"
        },
        {
            "#Tran": "3.1 Translations"
        },
        {
            "#CorrLangForBasiModaLang": "3.2 Correspondence Language for Basic Modal Language"
        },
        {
            "#GenePlan": "3.3 General Plan"
        },
        {
            "#LeveOneReprTheo": "3.4 Level One: Representation Theorems"
        },
        {
            "#LeveTwoMainTheo": "3.5 Level Two: the Main Theorem"
        },
        {
            "#LeveThreDeduCorr": "3.6 Level Three: Deductive Correspondence"
        },
        {
            "#SecoOrdeLogiManySortLogi": "4. Second-order Logic as Many-sorted Logic"
        },
        {
            "#SecoOrdeLogi": "4.1 Second-order Logic"
        },
        {
            "#TranFormConvStru": "4.2 Translation of Formulas and Conversion of Structures"
        },
        {
            "#SemaTheoRelaSOLMSL": "4.3 Semantic Theorems Relating SOL and MSL"
        },
        {
            "#SounCompForSOL": "4.4 Soundness and Completeness for SOL"
        },
        {
            "#TranManySortLogiSecoOrdeAppe": "5. Translations Into Many-sorted Logic with a Second-order Appearance"
        },
        {
            "#GenePlan_1": "5.1 General Plan"
        },
        {
            "#PropModaLogiManySortLogi": "5.2 Propositional Modal Logics as Many-sorted Logic"
        },
        {
            "#FurtResu": "6. Further Results"
        },
        {
            "#ReduManySortLogiOneSortLogi": "6.1 Reduction of Many-sorted Logic to One-sorted Logic"
        },
        {
            "#InteTheo": "6.2 The Interpolation Theorem"
        },
        {
            "#InteTheoEqui": "6.3 Interpretability and Theoretical Equivalence"
        },
        {
            "#ExteManySortLogiSortLogi": "6.4 Extension of Many-sorted Logic to Sort Logic"
        },
        {
            "#Bib": "Bibliography"
        },
        {
            "#Aca": "Academic Tools"
        },
        {
            "#Oth": "Other Internet Resources"
        },
        {
            "#Rel": "Related Entries"
        }
    ],
    "main_text": "\n1. Syntax and Semantics\n1.1 Examples\n\nWe start with a few examples to illustrate how common statements\nconcerning different types of data can be formalized in many-sorted\nfirst-order logic.\nExample: Euclid\u2019s first principle\n\nLet us begin with geometry, by talking about straight lines and\npoints. According to Euclid\u2019s first principle:\n\nA straight line can be drawn joining any two points.\n\nIn two sorted first-order logic one can use \\(X,\\) \\(Y,\\)\u2026 as\nvariables for sort \\(l\\) (straight lines) and \\(x,\\) \\(y,\\)\u2026 as\nvariables for sort \\(p\\) (points). To formulate Euclid\u2019s\nprinciple we write: \n\\[\\forall x\\;\\forall y(x\\not=y\\rightarrow \\exists X(\\Join(Xxy)\\land \\forall Y(\\Join(Yxy)\\rightarrow X=Y)))\\]\n\n\nIn this example, \\(\\Join\\) is a 3-place predicate symbol relating\na straight line and two points, \n\\[\\Join(Yxy):= Y \\textrm{ joins } x \\textrm{ and } y\\]\n\n\nLiterally our formalization reads: \u201cFor any two points there\nis a unique straight line joining them\u201d.\nExample: Binary relations\n\nAnother mathematical example is about asymmetry and\nanti-symmetry, both of which are properties of some binary\nrelations. Suppose we wanted to express the claim:\n\nEvery asymmetric binary relation is also anti-symmetric.\n\nTo formalize the statement as a single logically valid\nsentence we need: (1) to express asymmetry and anti-symmetry,\nand (2) to quantify over binary relations. In a suitable first-order\nlanguage including \\(R\\) as a binary relation symbol, to express that\n\\(R\\) is asymmetric we write: \n\\[\\Asymm(R):=\\forall x\\, \\forall y(Rxy\\rightarrow \\lnot Ryx)\\]\n\n\nand to say that \\(R\\) is anti-symmetric we write: \n\\[\\Antisymm(R):=\\forall x\\,\\forall y(Rxy\\land Ryx\\rightarrow x=y)\\]\n\n\nIn ordinary one-sorted first-order logic, this would be a logically\nvalid scheme: \n\\[\\Asymm(R)\\rightarrow \\Antisymm(R)\\]\n\n\nWhat we get is an infinite set of formulas obtained by replacing \\(R\\)\nby any other binary relation symbol. However, we wanted a single\nlogically valid sentence and so we need to quantify over\nbinary relations. In second-order logic, taking \\(X^{2},\\)\n\\(Y^{2},\\)\u2026 as variables for binary relations we write:\n\n\\[\\forall X^{2}(\\Asymm(X^{2})\\rightarrow \\Antisymm(X^{2}))\\]\n\n\nBut since standard second-order logic lacks some of the nice\nproperties of first-order logic\n (section 4.1),\n one could instead go for a two-sorted first-order logic, in which\nboth individuals and relations between individuals are first-class\ncitizens one can quantify over. We would have variables \\(x,\\)\n\\(y,\\ldots\\) of sort \\(i\\) (individuals), and \\(X^{2},\\)\n\\(Y^{2},\\ldots\\) of sort \\(r\\) (binary relations between individuals).\nHowever, it is not enough to label our variables as individuals or\nbinary relations, we need them to perform as second-order variables do. \nA three-place predicate symbol relating binary\nrelations and individuals, \\(\\epsilon_{2} xyX^{2}\\), needs to be added\nso that \\(\\Asymm(X^{2})\\) becomes: \n\\[\\Asymm(X^{2}):=\\forall x\\,\\forall y(\\epsilon _{2} xyX^{2}\\rightarrow \\lnot \\epsilon_{2} yxX^{2})\\]\n\n\nand similarly for \\(\\Antisymm(X^{2})\\).\n\nAs we will see in\n section 4.2,\n rewriting the second order formula \\(X^{2}xy\\) as \n\\(\\epsilon_{2}xyX^{2}\\) \nis all we do when translating second-order logic into\nmany-sorted logic; some axioms for predicates \\(\\epsilon _{n}\\) are\nadded and a suitable many-sorted theory for the \\(\\epsilon _{n}\\)\nrelations is introduced. In many-sorted logic formula \n\\[\\forall X^{2}(\\Asymm(X^{2})\\rightarrow \\Antisymm(X^{2}))\\]\n\n\nis a theorem of the many-sorted theory mentioned.\nExample: Comprehension Axiom\n\nLet us introduce another, more philosophical, example. If we\nwanted to formalize:\n\nEvery property has a negation.\n\nwe could use second order logic and write: \n\\[\\forall X\\,\\exists Y\\,\\forall x(Yx\\leftrightarrow \\lnot Xx)\\]\n\n\nThat becomes a many-sorted formula when we rewrite it as:\n\n\\[\\forall X\\,\\exists Y\\,\\forall x(\\epsilon _{1}xY\\leftrightarrow \\lnot \\epsilon _{1}xX)\\]\n\n\nusing \\(x,y,\\ldots\\) as variables of sort \\(i\\) (individuals) and\n\\(X,Y,\\ldots\\) of sort \\(\\pi\\) (properties).\n\nFormula \\(\\forall X\\,\\exists Y\\,\\forall x(Yx\\leftrightarrow \\lnot\nXx)\\) is a generalization of an instance of Comprehension Scheme\n\n\\[\\exists Y^{n}\\,\\forall x_{1}\\ldots\\forall x_{n}(Y^{n}x_{1}\\ldots x_{n}\\leftrightarrow \\varphi )\\]\n\n\n(variable \\(Y^{n}\\) is not free at \\(\\varphi\\)).\n Section 4\n and\n section 5\ndiscuss the role played by this scheme in translation\nfrom second-order logic into many-sorted first-order logic.\n\nAs you will see in\n section 6.1, each\n many-sorted formula has a version in a one-sorted first-order\nlanguage obtained by removing sorts. In this new language all the\nvariables belong to one sort, but we add unary predicates to recover\nthe lost information when passing from the many-sorted expression to\nthe one-sorted one. We also need to guarantee that these new\npredicates, which represent the lost universes of quantification, are\ninterpreted by non-empty sets, since universes of quantification are\nnon-empty in classical logic.\n\n\nIn Euclid\u2019s example, we add axioms \\(\\exists xLx\\) and \\(\\exists\nxPx\\) and formula \n\\[\\forall x\\,\\forall y(x\\not=y\\rightarrow \\exists X(\\Join(Xxy)\\land \\forall Y(\\Join(Yxy)\\rightarrow X=Y)))\\]\n\n\nnow becomes \n\\[\\begin{multline}\n\\forall x\\,\\forall y(Px\\land Py\\land x\\not=y\\rightarrow \\\\\n \\exists z((Lz\\land \\Join(zxy))\\land \\forall w((Lw\\land \\Join(wxy))\\rightarrow z=w))) \n\\end{multline}\\]\n\n\nTo represent Every property has a negation in one-sorted\nfirst-order logic we use \\(x,y,z,\\ldots\\) as variables for the unique\nsort we now have, and write: \n\\[\\forall x(Px\\rightarrow \\exists y(Py\\land \\forall z(Oz\\rightarrow (\\epsilon _{1}zx\\leftrightarrow \\lnot \\epsilon _{1}zy))))\\]\n\n\nwhere \n\\[\\begin{align}\nPx & :=\\text{ asserts that }x\\text{ is a property}\\\\\n Ox&:=\\text{ asserts that }x\\text{ is an object} \\\\\n \\epsilon _{1}zx &:=\\text{ asserts that }z\\text{ belongs to (exemplifies or instantiates) }x \n\\end{align}\\]\n\n\nSome axioms for predicates \\(\\epsilon _{1}\\) are added, as well as\naxioms saying that predicates \\(P\\) and \\(O\\) are never interpreted as\nempty sets, \\(\\exists xOx\\) and \\(\\exists xPx\\). Moreover, the links\nbetween predicates \\(\\epsilon _{1}\\), \\(P\\) and \\(O\\) are expressed\nby: \n\\[\\forall x\\,\\forall y(\\epsilon _{1}xy\\rightarrow Ox\\land Py)\\\\\n \\forall x(Px\\rightarrow \\lnot Ox)\\]\n\n1.2 Fundamental Ideas\n\nTo specify the syntax of a many-sorted language and associated\nstructures we need first to say what our (countable) set of sorts is.\nWe take \\(\\Sort=\\{ s_{1},\\dots ,s_{n}\\}\\) as the sorts\nof an n-sorted\n language.[1]\n\n\n\nStructures: A many-sorted structure has several\nnon-empty domains, one for each sort, and variables of a given sort\ntake values over the corresponding domain. An n-ary relation\ncould be freely established between elements of different domains or\nonly between certain ones. These two options are called\nliberal and strict. A liberal relation may relate\nobjects of arbitrary domains and only the arity (a natural number) has\nto be stated. For a strict relation,  the sorts\ninvolved have to be specified as well as the arity. \n\n\nAlphabet: The alphabet of a many-sorted language\n\\(L\\) includes all the relation, function, and constant symbols in a\nset called \\(\\OperSym\\), as well as an infinite number of variables\nfor each sort \\(s_{i}\\in \\Sort\\), and the corresponding sets of\nvariables are disjoint. An n-ary relation symbol \\(R\\) could\nbe strict or liberal and, in the first case, we must provide\ninformation about what are the involved sorts. To achieve this\nrequirement, we define a function \\(\\Rank\\) having as domain the set\n\\(\\OperSym\\) and whose values are either natural numbers other than\nzero (liberal option) or finite strings of \\(\\Sort\\cup \\{ 0\\}\\)\n(strict option). For any strict \\(f\\in \\OperSym\\), its value\n\\(\\Rank(f)\\) always has the form \\(\\langle\ni_{1},\\ldots,i_{m},i_{0}\\rangle\\), with \\(i_{0},i_{1},\\ldots,i_{m}\\in\n\\Sort\\cup \\{ 0\\}\\). When \\(f\\) is an m-ary predicate,\n\\(i_{0}=0\\), and \\(i_{0}\\not=0\\) for m-ary function symbols;\nindividual constants are considered as zero-ary function symbols with\n\\(\\Rank(f)=\\langle i_{0}\\rangle\\), simplified as \\(i_{0}\\). \n\n\nSignature: By a signature \\(\\Sigma\\) we mean\nthe ordered triple \n\\[\\ \\Sigma =\\langle \\Sort,\\OperSym,\\Rank\\rangle\\]\n\n\nEquality is a binary symbol that could be strict or liberal. In our\nlanguage, the equality symbol \\(\\approx\\) with \\(\\Rank(\\approx )=2\\)\nis liberal (having arity 2 and being allowed to work between terms of\nany\n sort).[2]\n The quantifier \\(\\exists x^{i}\\) is used for variables \\(x^{i}\\) of\nany sort \\(i\\). \n\n\nIn Euclid\u2019s example we have two sorts, \\(l\\) (lines) and \\(p\\)\n(points) and a 3-place predicate \\(\\Join\\) with \\(\\Rank(\\Join)=\\langle\nl,p,p,0\\rangle\\). In the example of binary relations we have two\nsorts, \\(i\\) (individuals) and \\(r\\) (binary relations) and a 3-place\npredicate symbol \\(\\epsilon _{2}\\) with \\(\\Rank(\\epsilon_{2})=\\langle\ni,i,r,0\\rangle\\). For the comprehension example we have two sorts,\n\\(i\\) (individuals) and \\(\\pi\\) (properties) and a 2-place predicate\nsymbol \\(\\epsilon_{1}\\) with \\(\\Rank(\\epsilon_{1})=\\langle i,\\pi\n,0\\rangle\\).\n1.3 Formal Language\nTerms and Formulas\n\nAs we do in classical first-order logic, from the set of finite\nstrings of elements of the alphabet we select the expressions of\n\\(L\\): terms and formulas. The only difference is\nthat in many-sorted logic terms have sorts and we have to specify\nit.\n\nIn consequence, the terms of many-sorted logic are defined\nrecursively as follows: Each variable or individual constant of sort\n\\(s_{i}\\) is a term of the same sort \\(s_{i}\\). If \\(f\\in \\OperSym\\)\nis such that \\(\\Rank(f)=\\langle i_{1},\\ldots,i_{m},i_{0}\\rangle\\) with\n\\(i_{0}\\not=0\\) and \\(\\tau _{1},\\ldots,\\tau _{m}\\) are terms of sorts\n\\(i_{1},\\ldots,i_{m}\\), then \\(f\\ \\tau _{1}\\ldots\\tau _{m}\\) is a term\nof sort \\(i_{0}\\).\n\nAtomic formulas are defined by means of predicates and terms:\nIf \\(R\\in \\OperSym\\) is such that \\(\\Rank(R)=\\langle i_{1},\\ldots\n,i_{m},0\\rangle\\), and \\(\\tau _{1},\\ldots \\),\\(\\tau _{m}\\) are terms\nof sorts \\(i_{1},\\ldots,\\) \\(i_{m}\\), then \\(R\\tau _{1}\\ldots \\tau\n_{m}\\) is a formula (when \\(R\\) is a liberal predicate, we drop the\nsort requirement for terms). For any terms \\(\\tau _{1}\\ \\)and \\(\\tau\n_{2}\\), the expression \\(\\tau _{1}\\approx \\tau _{2}\\) is a formula.\nNotice that the sorts of \\(\\tau _{1}\\ \\)and \\(\\tau _{2}\\) do not\nmatter, because our choice of equality symbol is the liberal\n one.[3]\n\nComplex well-formed formulas (wffs) are defined as usual in\nfirst-order languages (see the entry on\n classical logic),\n except for quantified expressions. The new rule says: If \\(\\varphi\\)\nis a formula and \\(x^{i}\\) is a variable of sort \\(i\\), then \\(\\exists\nx^{i}\\varphi\\) is a formula as well.\nFree and bound variables\n\nAs in classical first-order logic, occurrences of variables in a formula can be\nfree or bound; they are bound when they are under\nthe scope of a quantifier, otherwise free. A variable is free in a\nformula if it has at least one free occurrence therein. A formula with\nno free variables is called a sentence. We use \\(Sent(L)\\) to\ndenote the set of sentences of language \\(L\\).\nExample: The Book of Perfect Emptiness\nConsider the following, from Liezi (Book 5, 1\u20132):\n\n\n\nThe Book of Perfect Emptiness: Tang\nof Ying asked Ge: \u201cDid things exist at the dawn of\ntime?\u201d\n\nXia Ge answered: \u201cIf things had not existed at the dawn of time,\nhow could they possibly exist today? By the same token, men in the\nfuture could believe that things did not exist today\u201d.\n\n\nIn order to analyze this example, we should identify premises and\nconclusion; and we easily observe that the initial rhetorical question\nis in fact the argument\u2019s conclusion. The considered argument is\nan enthymeme, for the reason that it seems to be supported in the\npermanence of the laws that govern the cosmos (in particular, those\nconcerning the existence of objects). The hidden hypothesis supporting\nthe argument could be the following law:\n\n\nIf things exist at a given point in time, then at any given previous\nmoment in time things must have existed.\n\n\nThis rule is not saying that existence of a particular object is\neternal, it is saying that the chain of existence goes back\nforever.\n\nThus, the argument can be reformulated in the following way, where\n\\(\\alpha ,\\) \\(\\beta\\) and \\(\\gamma\\) are the premises and \\(\\delta\\)\nis the conclusion:\n\n\n\\(\\alpha :=\\) If things exist at a given point in time, then at\nany given previous moment in time things must have existed.\n\\(\\beta :=\\) Things exist today.\n\\(\\gamma :=\\) The dawn of time is previous to all else.\n\\(\\delta :=\\) Things existed at the dawn of time.\n\n\n\nNow, the premises and the conclusion can be formalized by means of a\ntwo sorted language, \\(\\Sort=\\{ i,\\tau \\}\\), including\nobjects (sort \\(i\\)) and instants of time (sort\n\\(\\tau\\)). The set \\(\\OperSym\\) contains a binary predicate of\nexistence at a given time, \\(E\\), another binary predicate of\nprecedence between instants, \\(P\\), and two individual constants for\ntoday (\\(t\\)) and the dawn of times \\((d)\\). So, in\nthis case, \n\\[\\begin{align}\n\\Rank(E) & =\\langle i,\\tau ,0\\rangle,\\\\\n \\Rank(P) & =\\langle \\tau ,\\tau ,0\\rangle \\textrm{ and}\\\\\n \\Rank(d) & =\\tau =\\Rank(t).\\\\\n \n\\end{align} \\]\n\n\nThe argument now reads: \n\\[\\begin{align}\n\\alpha & :=\\forall x^{\\tau }(\\exists y^{i}Ey^{i}x^{\\tau }\\rightarrow \\forall z^{\\tau }(Pz^{\\tau }x^{\\tau }\\rightarrow \\exists v^{i}Ev^{i}z^{\\tau }))\\\\\n \\beta & :=\\exists y^{i}Ey^{i}t \\\\\n \\gamma & :=\\forall y^{\\tau }\\ Pdy^{\\tau }\\\\\n \\delta & :=\\exists x^{i}Ex^{i}d \n\\end{align} \\]\n\n\nIn many sorted logic, the conclusion is easily obtained from these\nhypotheses by using a deductive calculus (see\n section 2).\n Therefore, the argument is formally correct, once we accept the\nproblematic hypothesis \\(\\alpha\\). In\n section 2.4\n we rewrite the argument to use theorem provers LEO-II and\nLEO-III.\n1.4 Many-sorted Structures\n\nThe semantics of many-sorted logic is rather similar to that of\nclassical first-order logic, because it follows Tarski\u2019s truth\ndefinition to introduce the concept of truth in a structure\n(see Tarski 1933 and Tarski & Vaught 1956; for historical\nclarifications, see Hodges 1986 and the entry on\n Tarski\u2019s truth definitions).\n In our case, the object language is many-sorted logic and\nthe metalanguage is set theory. Set theory is the commonly\nused metalanguage, where relation symbols are interpreted as\nrelations defined over universes (sets) of\nmathematical structures.\n\nIn many-sorted first-order logic, a structure is understood as a tuple\nhaving a family of non-empty sets as domains and a family of\noperations (functions and relations) defined over these domains. These\nrelations and functions are defined according to a given\nsignature.\nExamples of many-sorted structures\n\n\n\nAn appropriate structure \\(\\mathcal{E}\\) for the example in\nThe Book of Perfect Emptiness has two universes:\ninstants of time \\(\\mathbf{A}_{\\tau}\\) and objects \\(\\mathbf{A}_{i}\\).\nIt also has two distinguished instants, today and the dawn of times, a\nbinary relation between objects and instants, and a binary temporal\nrelation of precedence. \n\\[\\mathcal{E}=\\langle \\langle \\mathbf{A}_{i},\\mathbf{A}_{\\tau }\\rangle ,E^{\\mathcal{E}},P^{\\mathcal{E}},t^{\\mathcal{E}},d^{\\mathcal{E}}\\rangle\\]\n\n\nIn such a structure, \\(t^{\\mathcal{E}},d^{\\mathcal{E}}\\in\n\\mathbf{A}_{i}\\), \\(E^{\\mathcal{E}}\\subseteq \\mathbf{A}_{i}\\times\n\\mathbf{A}_{\\tau }\\) and \\(P^{\\mathcal{E}}\\subseteq \\mathbf{A}_{\\tau\n}\\times \\mathbf{A}_{\\tau }\\). \n\n\nA second-order standard structure (or full\nstructure) \n\\[\\mathcal{A}=\\langle \\mathbf{A},\\langle \\wp \\left(\\mathbf{A}^{n}\\right)\\rangle _{n\\in \\mathbb{N}},\\langle f^{\\mathcal{A}}\\rangle _{f\\in \\OperSym}\\rangle\\]\n\n\nis another example of many-sorted structure. This structure includes\nthe domain of individuals \\(\\mathbf{A}\\) as well as a family of second\norder domains of n-ary relations on individuals, \\(\\wp\n(\\mathbf{A}^{n})\\), for each natural number \\(n\\). The relations and\nfunctions in \\(\\langle f^{\\mathcal{A}}\\rangle _{f\\in \\OperSym}\\) are\nfirst-order relations and functions defined over the universe of\nindividuals (for more details about second-order logic, see the entry\non\n second-order and higher-order Logic).\n\n\n\nA second-order general structure \\(\\mathcal{A}=\\langle\n\\mathbf{A},\\langle \\mathbf{A}_{n}\\rangle _{n\\in \\mathbb{N}},\\ldots\n\\rangle\\) could also be seen as many-sorted. As in standard\nstructures, \\(\\mathcal{A}\\) contains the domain of individuals\n\\(\\mathbf{A}\\) as well as domains of n-ary relations for each\nnatural number, \\(\\mathbf{A}_{n}\\subseteq \\wp (\\mathbf{A}^{n})\\). But\nsince \\(\\mathcal{A}\\) is a general structure, the universes\n\\(\\mathbf{A}_{n}\\) are not arbitrarily chosen, for the reason that\nthey must satisfy the Comprehension Schema. Therefore, the\nuniverses are closed under definability (more information on general\nstructures in\n section 4.1).\n\n\nMany-sorted structures\n\nA many-sorted \u03a3-structure \\(\\mathcal{A}\\) has several universes\n(or domains) of objects in a family of non-empty sets\n\\(\\mathbf{A}_{i}\\) (for each \\(i\\in Sort\\)). Structure \\(\\mathcal{A}\\)\ncontains as well: an m-ary relation \\(R^{\\mathcal{A}}\\) for\neach relation symbol \\(R\\), an n-ary function\n\\(f^{\\mathcal{A}}\\) for every n-ary function symbol \\(f\\) and\na distinguish element \\(c^{\\mathcal{A}}\\in \\mathbf{A}_{i}\\) for every\nindividual constant \\(c\\). These relations and functions have to be\nestablished between elements of the family of domains taking into\naccount their values under function\n \\(\\Rank\\).[4]\n\nUsing structure \\(\\mathcal{A}\\) we define in\n section 1.5\n the truth of a sentence \\(\\varphi\\) in this structure, noted as\n\\(\\mathcal{A}\\models \\varphi\\).\n\nWe could add the requirement of empty intersection between different\ndomains. Structures obeying this requirement are called\n\u201cstrict\u201d, otherwise \u201clax\u201d (or\n\u201cliberal\u201d). For strict structures we may consider the\npossibility of having an equality symbol for each sort, \\(\\approx\n_{i}\\), each of them with \\(\\Rank(\\approx _{i})=\\langle\ni,i,0\\rangle\\). We require equality symbols (either strict or liberal)\nto be interpreted as genuine identity, the prototypical relation that\nholds between an object and itself and fails to hold between any two\nother objects.\nRelations of similarity between structures\n\nFor one-sorted structures, it is very common to study different\nrelations between them: homomorphisms, embeddings,\nisomorphisms, substructures and extensions (see Manzano\n1989 [1999: 19\u201333]). One can define these relations for\nmany-sorted structures in a similar vein. An homomorphism\nbetween two structures \\(\\mathcal{A}\\) and \\(\\mathcal{A}^{\\prime }\\)\nwith the same signature is a function \\(\\pi\\) from the union of the\nuniverses of \\(\\mathcal{A}\\) to the union of the universes of\n\\(\\mathcal{A}^{\\prime }\\) satisfying the following conditions:\nFirstly, the restriction of \\(\\pi\\) to \\(\\mathbf{A}_{i}\\) must be a\nfunction from \\(\\mathbf{A}_{i}\\) to \\(\\mathbf{A}_{i}^{\\prime }\\), for\neach \\(i\\in Sort\\). Secondly, if the n-tuple of elements\n\\(\\langle \\mathbf{a}_{i},\\dots ,\\mathbf{a}_{n}\\rangle\\) is in the\nn-ary relation \\(R^{\\mathcal{A}}\\) then \\(\\langle \\pi\n(\\mathbf{a}_{i}),\\dots ,\\pi (\\mathbf{a}_{n})\\rangle\\) is in the\nrelation \\(R^{\\mathcal{A}^{\\prime }}\\). Finally, \n\\[\\pi \\left(f^{\\mathcal{A}}\\left(\\mathbf{a}_{i},\\dots ,\\mathbf{a}_{m}\\right)\\right)=f^{\\mathcal{A}^{\\prime }}\\left(\\pi \\left(\\mathbf{a}_{i}\\right),\\dots ,\\pi \\left(\\mathbf{a}_{m}\\right)\\right)\\]\n\n\nand \\(\\pi (c_{i}^{\\mathcal{A}})=c_{i}^{\\mathcal{A}^{\\prime }}\\).\n\nAn embedding is a homomorphism where the involved functions\nare injective and the second condition works in both directions. An\nisomorphism is an embedding where the defining maps are\nbijections. When the function \\(\\pi\\) is an isomorphism one says that\n\\(\\mathcal{A}\\) and \\(\\mathcal{A}^{\\prime }\\) are isomorphic\nand writes \\(\\mathcal{A}\\cong \\mathcal{A}^{\\prime }\\).\n\nWe say that \\(\\mathcal{A}^{\\prime }\\) is a substructure of\n\\(\\mathcal{A}\\) (equivalently, \\(\\mathcal{A}\\) is an\nextension of \\(\\mathcal{A}^{\\prime }\\)) if and only if the\ninclusion map \\(i\\) (sending every element to itself) is an embedding\nfrom \\(\\mathcal{A}^{\\prime }\\) to \\(\\mathcal{A}\\).\n\nAll the relationships already mentioned are established between\nstructures of the same signature. We can as well define reductions and\nexpansions between structures whose signatures are not the same. Given\na many-sorted structure \\(\\mathcal{A}\\), a reduct\n\\(\\mathcal{A}^{\\prime }\\) of \\(\\mathcal{A}\\) is obtained by simply\nremoving some sorts, function or relation symbols from the signature\nof \\(\\mathcal{A}\\). If \\(\\mathcal{A}^{\\prime }\\) is a reduct of\n\\(\\mathcal{A}\\), then we say that \\(\\mathcal{A}\\) is an\nexpansion of \\(\\mathcal{A}^{\\prime}\\).\n1.5 Semantics\nDenotation of Terms and Satisfaction of Formulas\n\nGiven a language and a structure, both of them sharing the same\nsignature, each closed term of the language will denote an element in\nthe structure and each atomic sentence is either true or false in the\nstructure. Nevertheless, the scope of our definition is widened\nso that each term will receive a denotation and each formula a truth\nvalue. To achieve that, we define\n assignments[5]\n from the set of variables to the domains of the structure, arguments\nand values should be of the same sort. For any individual\n\\(\\mathbf{x}\\in \\mathbf{A}_{i}\\) and variable \\(x^{i}\\) of sort \\(i\\),\nwe use \\(s(\\mathbf{x}/x^{i})\\) to denote the assignment which is like\nassignment \\(s\\) except that the value at \\(x^{i}\\) has to be\n\\(\\mathbf{x}\\).\n\nTo define the important concept of \u201ctruth of a sentence\n\\(\\varphi\\) in a structure \\(\\mathcal{A}\\)\u201d\n\\((\\mathcal{A}\\models \\varphi)\\) we need to define previously the\nconcept of satisfaction of a formula \\(\\varphi\\) in\n\\(\\mathcal{A}\\) under assignment \\(s\\) (noted as\n\\(\\mathcal{A},s\\models \\varphi\\)), as well as the denotation\nof terms.\nDenotation of terms\n\nLet \\(\\mathcal{A}\\) be an L-structure (language and structure\nsharing signature \\(\\Sigma\\)) and \\(s\\) an assignment.\n\\(\\mathcal{I}=\\langle \\mathcal{A},s\\rangle\\) is called an\ninterpretation. The recursive definition of denotation\n\\(\\mathcal{I}(\\tau )\\) of the term \\(\\tau\\) under the interpretation\n\\(\\mathcal{I}\\) is defined in the usual way, as in classical\none-sorted first-order logic. For atomic and complex terms:\n\\(\\mathcal{I}(x^{i})=s(x^{i})\\), \\(\\mathcal{I}(c)=c^{\\mathcal{A}}\\)\nand \n\\[\\mathcal{I}(f\\ \\tau _{1}\\ldots \\tau _{n})=f^{\\mathcal{A}}(\\mathcal{I}(\\tau _{1})\\ldots \\mathcal{I}(\\tau _{n})).\\]\n\n\nIt is easy to check that terms of a certain sort denote individuals of\nthat sort.\n\n\nDefinition (Tarski\u2019s Truth). The definition is\nnearly the same as in classical first-order logic, see the entry on\n classical logic.\n\nFor atomic formulas: \\(\\mathcal{A}, s\\models R\\tau _{1}\\ldots \\tau\n_{n}\\) if and only if \n\\[\\langle \\mathcal{I}(\\tau _{1}),\\ldots ,\\mathcal{I}(\\tau _{n})\\rangle \\in R^{\\mathcal{A}},\\]\n\n\nand \\(\\mathcal{A},s\\models \\tau _{1}\\approx \\tau _{2}\\) if and only if\nboth terms denote the same object in structure \\(\\mathcal{A}\\);\nnamely, \\(\\mathcal{I}(\\tau _{1})=\\mathcal{I}(\\tau _{2})\\).\n\n\nIn many-sorted logic the connectives are standard and, therefore, we\nuse the classical definition of satisfaction for formulas built on\nthem. For quantified formulas such as \\(\\exists x^{i}\\varphi\\) the\ndefinition reads: \\(\\mathcal{A},s\\models \\exists x^{i}\\varphi\\) if and\nonly if there is an \\(\\mathbf{x}\\in \\mathbf{A}_{i}\\) such that\n\\(\\mathcal{A},s(\\mathbf{x}/x^{i})\\models \\varphi\\).\nCoincidence lemma\n\nAs in classical first-order logic, the coincidence lemma holds (see\nthe entry on\n classical logic):\n For any formula \\(\\varphi\\) and assignments \\(s_{1}\\) and \\(s_{2}\\):\nif \\(s_{1}\\) and \\(s_{2}\\) agree on the free variables in \\(\\varphi\\),\nthen \\(\\mathcal{A},s_{1}\\models \\varphi\\) if and only if\n\\(\\mathcal{A},s_{2}\\models \\varphi\\).\n\nFor a formula \\(\\varphi (x_{1},\\ldots ,x_{n})\\) whose free variables\nare in \\(\\{ x_{1},\\ldots ,x_{n}\\}\\) one can write \n\\[\\mathcal{A}\\models \\varphi \\left[ \\mathbf{x}_{1},\\ldots ,\\mathbf{x}_{n}\\right]\\]\n\n\ninstead of \n\\[\\mathcal{A},s\\left( \\mathbf{x}_{1}/x_{1},\\ldots ,\\mathbf{x}_{n}/x_{n}\\right) \\models \\varphi.\\]\n\n\nBy applying the coincidence lemma, we can get rid of assignments when\ndealing with sentences, and so we just write \\(\\mathcal{A}\\models\n\\varphi\\) (instead of \\(\\mathcal{A},s\\models \\varphi\\)). In this case\nwe usually say that \\(\\mathcal{A}\\) is a model of\n\\(\\varphi\\).\n\nFor a set of sentences \\(\\Gamma\\) we say that \\(\\mathcal{A}\\) is a\nmodel of \\(\\Gamma\\) (for short \\(\\mathcal{A}\\models\n\\Gamma\\)), when \\(\\mathcal{A}\\) is a model of every sentence\n\\(\\gamma\\) in \\(\\Gamma\\). Structures and language share signature.\n\nThe abstract schema of semantics could be seen in this way: we have a\nlanguage \\(L\\) and a class of mathematical structures, sharing a given\nsignature \\(\\Sigma\\). Between these mathematical realities we have\njust built a bridge, the notion of truth in a structure. In\none direction, we circulate from sentences to structures where these\nsentences are true; on the other direction, we go from structures to\nsentences which are true in these structures. In the first case, from\na set of sentences \\(\\Gamma\\) of signature \\(\\Sigma\\) we define\n\\(\\Mod(\\Gamma )\\) as the class of structures of signature \\(\\Sigma\\)\nthat are models of \\(\\Gamma\\). In the second, from a structure\n\\(\\mathcal{A}\\) of signature \\(\\Sigma\\) we define \\(\\Th(\\mathcal{A})\\)\n(the theory of \\(\\mathcal{A}\\) ), the infinite set of sentences which\nare true at structure \\(\\mathcal{A}\\) \n\\[\\begin{align}\n\\Mod(\\Gamma ) &=\\{ \\Sigma \\text{ structure }\\mathcal{A}:\\mathcal{A}\\models \\Gamma \\} \\\\\n \\Th(\\mathcal{A}) &= \\{ \\varphi \\in \\Sent(L):\\mathcal{A}\\models \\varphi \\} \n\\end{align}\\]\n\nElementary embedding\n\nIn the previous section, the relations between structures were defined\nwithout resorting to the many-sorted formal language. That is not the\ncase for elementary embedding, another relationship between\nmany-sorted structures of the same signature. An elementary embedding\n\\(\\pi\\) between two \u03a3-structures \\(\\mathcal{A}\\) and\n\\(\\mathcal{A}^{\\prime }\\) is an embedding satisfying: \n\\[ \\mathcal{A\\models \\varphi \\lbrack }\\mathbf{x}_{1},\\ldots, \\mathbf{x}_{n}] \\textrm{ if and only if } \\mathcal{A}^{\\prime }\\mathcal{\\models \\varphi \\lbrack }\\pi (\\mathbf{x}_{1}),\\ldots \\pi (\\mathbf{x}_{n})] \\]\n\n\nfor all \u03a3-formulas \\(\\mathcal{\\varphi (}x_{1},\\ldots\n\\mathbf{,}x_{n})\\) and elements \\(\\mathbf{x}_{1},\\ldots\n,\\mathbf{x}_{n}\\) in the domains of the structure, variables and\nelements with the same sorts.\n\nTwo structures \\(\\mathcal{A}\\) and \\(\\mathcal{B}\\) are \nelementarily equivalent if and only if their theories are the same,\n\\(\\Th(\\mathcal{A})=\\Th(\\mathcal{B})\\).\nSatisfiability, Validity, and Consequence\n\nConcepts of satisfiability, validity and\nconsequence are defined as in classical first-order logic.\nGiven language \\(L\\) of signature \\(\\Sigma\\) and a formula \\(\\varphi\\)\nof \\(L\\): \\(\\varphi\\) is satisfiable if and only if there\nexists a \u03a3-structure \\(\\mathcal{A}\\) and assignment \\(s\\) on it\nsuch that \\(\\mathcal{A},s\\models \\varphi\\) holds; \\(\\varphi\\) is\nvalid (\\(\\models \\varphi\\)) if and only if\n\\(\\mathcal{A},s\\models \\varphi\\) holds for all \\(\\mathcal{A}\\) of\nsignature \\(\\Sigma\\) and any assignment \\(s\\) on \\(\\mathcal{A}\\).\n\nGiven a language \\(L\\) of a given signature \\(\\Sigma\\) we define the\nconsequence relation in this way: \\(\\Gamma \\models \\varphi\\)\nif and only if for every structure \\(\\mathcal{A}\\ \\)(of signature\n\\(\\Sigma\\) ) and assignment \\(s\\) such that \\(\\mathcal{A},s\\models\n\\gamma\\) for all \\(\\gamma \\in \\Gamma\\), we have that\n\\(\\mathcal{A},s\\models \\varphi\\).\n\nIn case \\(\\Gamma\\) and \\(\\varphi\\) were sentences, \\(\\Gamma \\models\n\\varphi\\) can be expressed in this way: \\(\\Mod(\\Gamma )\\subseteq\n\\Mod(\\varphi )\\).\n\n\nTheory: Given a set of sentences \\(\\Gamma\\) of a\nlanguage \\(L\\) we say that \\(\\Gamma\\) is a\n theory[6]\n if and only if it is closed under consequence; that is, for every\n\\(\\varphi \\in \\Sent(L)\\): If \\(\\Gamma \\models \\varphi\\) then \\(\\varphi\n\\in \\Gamma\\).\n\n2. Calculus\n2.1 Deductive Calculi\n\nIt is common in model theory to regard\na logic as comprising at least three different things: a class of\nstructures, a formal language to describe these structures, and a\nsatisfaction relation that determines when a formula of the language\nis true with respect to a given structure. A deductive calculus might be\nadded.\n\nIn fact, any calculus for one-sorted first-order logic can be easily\nextended to a many-sorted one; the only rules which need to be adapted\nare the ones dealing with quantifiers and substitution, as they have\nto take into consideration the variety of sorts admitted. In the entry\n classical logic\n the rules that need to be changed are: introduction and elimination\nof universal quantifier (\\(\\forall \\mathbf{I}\\) and \\(\\forall\n\\mathbf{E}\\)), introduction and elimination of existential quantifier\n(\\(\\exists \\mathbf{I}\\) and \\(\\exists \\mathbf{E}\\)) as well as the\nrules dealing with equality (\\(=\\mathbf{I}\\) and \\(=\\mathbf{E}\\)).\n\nThe sequent calculus presented in Manzano (1996: 240\u2013257) is the\nmany-sorted extension of the one in Ebbinghaus, Flum, and Thomas\n(1984). Hao Wang (1952: 106), one of the pioneering logicians working\non many-sorted logic, already introduced an axiomatic calculus for\nthis logic in his seminal work (see the\n supplement on early history\n for more information).\n\nAs usual, to symbolize derivability of a formula from a set\nof formulas we write, \\(\\Delta \\vdash \\varphi\\). We will write the\nderivability sign \\(\\vdash\\) with a subscript when needed; namely,\n\\(\\vdash _{\\MSL}\\). In any of these calculi the notion of proof is\neffective in the sense that there is a method by which whenever a\nfinite sequence of sequents of formulas is given, it can always be\neffectively determined, whether it is a proof or not. Any of these\ncalculi is undecidable, as there is not an algorithm to check\nif \\(\\vdash \\varphi\\) or not. In fact, it could not be otherwise as\nthe satisfiability problem (i.e., determining validity, or\nequivalently, testing for satisfiability of given formulas) for\nmany-sorted logic is undecidable. So, we are in the same situation\nencountered in one-sorted first-order logic.\n\nOf course, if a calculus is to be helpful it would never allow\nerroneous reasonings: it is not going to drive us from true hypotheses\nto false conclusions. It must be a sound calculus. Further,\nit is highly desirable that all the consequences of a set \\(\\Gamma\\)\nof hypotheses could be derived from \\(\\Gamma\\). That is, we would like\nto have a strongly complete calculus. In our\n section 2.3\n you will find the sketch of such a completeness proof.\nMaximal consistency and the property of having witnesses\n\nAlso standard are the definitions of the syntactic\n concepts;[7]\n namely those of consistency, maximal consistency\nand the property of having witnesses. In the present\ncircumstance, a set of formulas contains witnesses if each\nexistential formula comes with a witness (\\(\\exists x^{i}\\varphi \\in\n\\Delta\\) implies \\(\\varphi (t/x^{i})\\in \\Delta\\) for a term \\(t\\) of\nsort \\(i\\)). All three are properties of formulas and/or sets of\nformulas and in their definition we use derivability; i.e., the\ndeductive calculus.\n\nConsistency can be seen as the syntactic counterpart of\nsatisfiability, in the same sense as \\(\\vdash\\) and \\(\\models\\) would\ncorrespond to one another. In fact, Henkin\u2019s completeness proof\nbasically consists in the construction of a model for each consistent\nset.\n2.2 Completeness Notions\n\nProof and truth are defined by independent methods and it is not\ntrivial, but necessary, to prove that they are extensionally the same.\nThis is the content of the completeness theorem when this\nproperty is predicated of a sound calculus. There is another\nmeaning of completeness, when it is predicate of a theory: A\ntheory \\(\\Gamma\\) is complete when for each sentence, either\n\\(\\varphi\\) or \\(\\lnot \\varphi\\) is a consequence of \\(\\Gamma\\)\n(Manzano 1989 [1999: 118]). Strong completeness of a calculus\nestablishes its sufficiency for capturing the logical consequence;\nnamely, whenever a sentence follows logically from a set of\nhypotheses, there is a proof of this sentence in the calculus,\npossibly using some of these hypotheses. In contrast, weak\ncompleteness says that we have proofs for all validities. In a\n complete[8]\n logic, the expressive power of the language and its computational\nstrength are well balanced. Thus the question about completeness is\nthe question about the equilibrium of the basic components of a logic:\nits semantics and its logical calculus.\n\nSometimes, we merely say that a logic is complete and qualify\nthis property as abstract completeness. In this case, we are\nonly concerned with the computational characteristics of the set of\nlogical truths (validities), all we need to know is that they are\nrecursively enumerable.\n\nSection 3\n presents many-sorted logic as a unifier logic and we describe the\nthree levels process of embedding into MSL as a path to completeness\nof the logic being studied: abstract completeness at the first level,\nstrong completeness at the third.\n2.3 Completeness of Many-sorted Logic\n\nThe completeness proof for a many-sorted calculus could be done by\nfollowing the well known Henkin (1949) strategy for first-order logic.\nThe important issue is to be able to show that each consistent set of\nformulas has a model, and hence syntactic consistency and semantic\nsatisfiability are equivalent (assuming Soundness). The proof\nis performed in basically two steps:\n\n\n\nEvery consistent set of formulas can be extended to a maximal\nconsistent set with witnesses. \n\n\nOnce we have the maximal consistent set with witnesses, we use it as a\nguide to build the precise model described by formulas of this set.\nThe reason being that a maximally consistent set is a very detailed\ndescription of a structure. \n\n\nBy doing that we prove:\n\n\nHenkin\u2019s theorem: If \\(\\Gamma \\subseteq \\\nForm(L)\\) is consistent, then \\(\\Gamma\\) has a countable\n model.[9]\n\n\nThe completeness theorem\n\n\nStrong completeness: If \\(\\Gamma \\models \\varphi\\)\nthen \\(\\Gamma \\vdash \\varphi\\)\n\n\nfollows easily from it.\n\nTo see that Henkin\u2019s theorem implies\nStrong completeness, let us assume the antecedent,\n\\(\\Gamma \\models \\varphi\\). Therefore, \\(\\Gamma \\cup \\{ \\lnot \\varphi\n\\}\\) is not satisfiable, it has no model. Using Henkin\u2019s theorem\nwe conclude that \\(\\Gamma \\cup \\{ \\lnot \\varphi \\}\\) is contradictory\nand so \\(\\Gamma \\cup \\{ \\lnot \\varphi \\} \\vdash \\varphi\\). The\ncalculus rules allow us to get rid of \\(\\lnot \\varphi\\) and infer\n\\(\\Gamma \\vdash \\varphi\\).\n\nAs corollaries of the previous results one gets:\n\n\nWeak completeness: If \\(\\models \\varphi\\) then\n\\(\\vdash \\varphi\\).\n\n\n\nCompactness theorem: \\(\\Gamma\\) has a model iff every\nfinite subset of it has a model.\n\n\n\nL\u00f6wenheim-Skolem: If \\(\\Gamma\\) has a model,\nthen it has a countable model.\n\n\nIn Manzano (1996: 245\u2013257), the completeness theorem is proved\nin its strong sense and for all formulas, not only for sentences.\nCompleteness and its corollaries are proven by following the path\nintroduced by Ebbinghaus, Flum, and Thomas (1984).\n\nIs many-sorted logic a proper (or strict) extension of first-order\nlogic? Lindstr\u00f6m (1969) proves that first-order logic is\ncharacterizable as the strongest logic to possess simultaneously\nCompactness and L\u00f6wenheim-Skolem properties.\nMoreover, first-order logic is the strongest logic where\nL\u00f6wenheim-Skolem holds and its set of valid sentences is\nrecursively enumerable. Therefore, many-sorted logic cannot\nbe considered as a proper extension of first-order logic.\n2.4 Automated Theorem Provers\n\nMany-sorted logic provides a semantical concept of consequence as well\nas a deductive calculus to be used in the mathematical process of\nobtaining conclusions from hypotheses. Now the issue is to automate\nthis reasoning process by building a computer program to conduct\ndeductive inferences.\n\nAs we have already mentioned, soundness is the essential requirement\nof a calculus while completeness guarantees that all the semantical\nconsequences can be established within the calculus and so the set of\nvalidities is recursively enumerable. The most relevant\nproperties for automated deduction are decidability and\ncomplexity. A logic is decidable when there is an algorithm\nthat answer YES or NO in a finite time to the\nquestion: is the formula \\(\\varphi\\) valid? As validity and\nsatisfiability are interdefinible (\\(\\models \\varphi\\) iff \\(\\lnot\n\\varphi\\) is not satisfiable) this problem is often called the\nsatisfiability problem. Among the basic tasks a computer is\nasked for are satisfiability and model checking.\n\nPropositional logic is decidable but first-order logic, many-sorted\nversion included, is undecidable. However, in between propositional\nand first-order logic there are decidable logics, like monadic\npredicate logic (first-order logic whose predicates are all unary\npredicates), as well as decidable\n fragments[10]\n of the undecidable logic. Moreover, among the decidable problems\nthere are degrees of time-space complexity measuring time and memory\nregister used by the computer.\n\nTherefore, in a theorem prover for many-sorted calculus there is no\nguarantee of getting an answer to the question: Does \\(\\Gamma\n\\models \\varphi\\)? However, there are efficient theorem provers\nable to solve the problem in many cases; for instance, when there are\ndecidable fragments to implement. See the entries on\n automated reasoning\n and\n Church\u2019s type theory.\n Section 4 of the entry on Church\u2019s type theory\nis devoted to automation and provides information about\nmachine-oriented proof calculi as well as early proof assistants. An\nexcellent selection of theorem provers for Church\u2019s type theory\nare presented. Among them are LEO-II and LEO-III, the latter is said\nto \u201ccooperate with first-order reasoning tools using\ntranslations to many-sorted logic\u201d.\n\nChurch\u2019s simple type theory usually starts with base types\n\u201ci\u201d (individuals/entities) and \u201co\u201d (Booleans)\nonly and then iteratively defines all function types (such as \u201c\\(\\text{i}\n= > \\text{o}\\)\u201d,  \u201c\\(\\text{i}=>\\text{i}\\)\u201d,\n\u201c\\(\\text{o}=>\\text{o}\\)\u201d,\n\u201c\\(\\text{i}=>(\\text{i}=>\\text{o})\\)\u201d,\netc.) starting from those. But in fact one can have arbitrary many\nbase types \\(i_1\\), \\(i_2\\), \\(i_3\\),\u2026, \\(i_n\\) and apply an\nanalogous construction. These base types \\(i_1\\), \\(i_2\\),\n\\(i_3\\),\u2026, \\(i_n\\) can be considered as sorts.\n\nOur example from the Book of Perfect Emptiness can be\nformalized and checked using the LEO-II and LEO-III provers.\n\n\nthf(sortForObjects, type, (object: $tType)).\n\nthf(sortForTimes, type, (time: $tType)).\n\nthf(constantDawn, type, (dawn: time)).\n\nthf(constantToday, type, (today: time)).\n\nthf(constantIsExistsAt, type, \n\u00a0\u00a0(existsAt: object\\(>\\)time\\(>\\)$o)).\n\nthf(constantPrecedesTo, type, \n\u00a0\u00a0(precedesTo: time\\(>\\)time\\(>\\)$o)).\n\nthf(axiom1, axiom, (![X:time]: \n\u00a0\u00a0((?[Y:object]: (existsAt @Y@X))\n\u00a0\u00a0=\\(>\\) (![Z:time]: ((precedesTo @Z@X) \n\u00a0\u00a0=\\(>\\) (?[V:object]: (existsAt @V@Z))))))).\n\nthf(axiom2, axiom, \n\u00a0\u00a0(?[Y:object]: (existsAt @Y@today))).\n\nthf(axiom3, axiom, \n\u00a0\u00a0(![Y:time]: (precedesTo @dawn@Y))).\n\nthf(conjecture1, conjecture, \n\u00a0\u00a0(?[X:object]: (existsAt @X@dawn))).\n\n\n3. Many-sorted Logic as a Unifying Framework\n3.1 Translations\n\nCurrently, the proliferation of logical systems used in mathematics,\ncomputer science, philosophy, and linguistics makes the relationships\nbetween and their possible translations into one another a pressing\nissue. We saw above that many-sorted logic is a natural logic for\nreasoning about more than one sort of objects. In this section, we\nwill present it as a unifying framework in which we may situate most\nof the many logics available to us. The general plan of translations\ninto MSL is described with some details. Three possible levels of\ntranslations are settled and, at each level, when successfully\nreached, one completeness result is gained: abstract completeness at\nthe first level, strong completeness at the third. Therefore, when a\nlogic is translated into many-sorted logic we only need a unique\ndeductive calculus, the many-sorted one, as well as an efficient\ntheorem prover. In cases like basic propositional modal\nlogic, where formulas could be translated into a decidable\nfragment of first-order logic with only two variables, the translation\nmechanism implies decidability for the modal logic. Moreover, some\nmetaproperties of many-sorted logic can be transferred to the logic\nbeing translated.\n\nTranslations offer a better understanding of the logics being\ntranslated and could be used to compare two logics when they are\ntransformed into theories of a common target logic, many-sorted\nfirst-order logic in our case. It is not a positive answer to the\nquestion \u201cThe One Right Logic?\u201d (see the entry\n classical logic)\n as this question was not posed and it is not in the spirit of this\ntranslation into many-sorted logic. In Modal Logic for Open\nMinds (van Benthem 2010) translations into first-order logic are\nextensively treated and there is a section entitled \u201cDiscussion:\nwhat good is a translation\u201d (2010: 77) where Johan van Benthem\nanalyzes the balance of expressive power and complexity and advocates\nfor a tandem approach to answer the question Does the translation\nST mean that we can forget the modal language and just do first-order\nlogic?\nTranslations\n\nTranslations between logics have been formulated as an ambitious\nparadigm whose tools would serve for handling the existing\nmultiplicity of logics. Some methodologies are proof-oriented, others\nare model-oriented, and finally some others are conceived in purely\nabstract suprastructural terms.\n\n\n\nFrom a proof-theoretical point of view, the style of\ncomparing logics will rest upon deductive calculi. The \u201clabelled\ndeductive systems\u201d of Dov Gabbay (1994 and 1996) emerge.\n\n\n\nFrom a model-theoretical perspective, one will presumably\ncompare logics by defining relations between the structures those\nlogics are attempting to describe, as in the correspondence theory of\nJohan van Benthem (1983, 1984a, and 2010). \n\n\nFrom a suprastructural point of view, we define morphisms\nbetween categories. Among the abstract approaches to logic we\nhighlight the \u201cgeneral logics\u201d of Jos\u00e9 Meseguer\n(1989) as well as the \u201crewriting logic\u201d of Narciso\nMart\u0131\u0301-Oliet and Jos\u00e9 Meseguer (1994). Da Silva,\nD\u2019Ottaviano, and Sette (1999) gave a general definition of\ntranslation between logics according to which logics are characterized\nas sets with consequence relations; translations are hence\nconsequence-relation preserving maps. \n\n\nThe paradigm of logical\n translation[11]\n assumed in this entry belongs to the model-theoretical tradition\nmentioned in item 2 and the target logic is many-sorted logic.\n\nAs far as intensional logic is concerned, let us quote Johan van\nBenthem:\n\n\nGiven any intensional logic, a complete possible-worlds semantics of\nthe usual variety may be viewed as a faithful embedding of that logic\ninto some suitably augmented many-sorted predicate logic (with\nquantification over possible worlds), perhaps provided with some\nsimple auxiliary special-purpose theory for\n\u201caccessibility\u201d, \u201creversal\u201d, and so on. Is\npredicate logic universal in this respect, in that every effectively\naxiomatized intensional logic can be semanticized in this way? (1984b:\n995)\n\n3.2 Correspondence Language for Basic Modal Language\n\nAmong the so called \u201cnon-classical logics\u201d, modal logic\noccupies the first position as its history goes back to Aristotle, as\nwell as Megarians, Stoics, and other Greek philosophers. Over the\nyears it has been used to talk about necessity and possibility, time,\nand computer programs. See the entry on\n modal logic\n as well as Blackburn and van Benthem (2007) and van Benthem\n(2010).\n\nThe features of modal logic most relevant to this entry on many-sorted\nlogic are that truth can be qualified (or relativized) and that modal\nmodels include a universe of what are called \u201cpossible\nworlds\u201d. The classical semantical concept of truth in a\nmodel, written as \\(\\mathcal{A}\\models \\varphi\\) is now replaced\nby truth at a world \\(w\\) in a model \\(\\mathcal{A}\\), written\nas \\(\\mathcal{A},w\\models \\varphi\\).\n\nFormulas in basic propositional modal language are built from\nAtoms, classical connectives and modal operators, \\(\\square\\)\n(box) and \\(\\Diamond\\) (diamond). Modal formulas are interpreted in\nKripke structures \n\\[\\mathcal{A}=\\langle \\mathbf{W},\\mathbf{R},\\langle P^{\\mathcal{A}}\\rangle _{P\\in \\Atom}\\rangle\\]\n\n\nhaving a non-empty domain \\(\\mathbf{W}\\) of states or worlds, a binary\naccessibility relation \\(\\mathbf{R}\\) defined over it, and a\ncollection of subsets of \\(\\mathbf{W}\\) for each atomic proposition\nsymbol \\(P\\). A modal formula \\(\\varphi\\) is true at world \\(w\\) in\nmodel \\(\\mathcal{A}\\) (\\(\\varphi\\) is satisfied in\n\\(\\mathcal{A}\\) at world \\(w\\)) when the following inductive\nconditions apply: \n\\[\\begin{align}\n\\mathcal{A},w & \\models P&& \\text{ iff } w\\in P^{\\mathcal{A}}\\\\\n \\mathcal{A},w&\\not\\models \\bot&& \\text{ for all } w \\\\\n \\mathcal{A},w&\\models \\lnot \\varphi&& \\text{ iff not } \\mathcal{A},w\\models \\varphi\\\\\n \\mathcal{A},w&\\models \\varphi \\land \\psi&& \\text{ iff } \\mathcal{A},w\\models \\varphi \\text{ and } \\mathcal{A},w\\models \\psi \\\\\n \\mathcal{A},w&\\models \\square \\varphi&& \\text{ iff for all } v \\text{ such that } \\langle w,v\\rangle \\in \\mathbf{R}: \\mathcal{A},v\\models \\varphi \n\\end{align} \\]\n\n\nA formula \\(\\varphi\\) is globally true in a model\n\\(\\mathcal{A}\\) if it is satisfied at all worlds in \\(\\mathcal{A}\\)\n(\\(\\mathcal{A}\\models \\varphi\\)). A formula \\(\\varphi\\) is\nvalid if it is globally true at all models (\\(\\models\n\\varphi\\)). The set of validities in the whole class of Kripke models\n(when no restrictions are imposed to the accessibility relation) are\nthe validities of the basic modal logic, also called\nminimal modal logic or System\nK.[12]\n\nBlackburn and van Benthem (2007: 5) note\n\n\nthe internal character of modal satisfaction definition:\nmodal formulas talk about Kripke models from the inside\n\n\nas modal formulas are evaluated at certain points. The intuition is\nthat the modal operator \\(\\square\\) is a kind of universal quantifier and\nmodal structures are first-order relational structures with a binary\nrelation and a collection of subsets of the universe. In a first-order\nlanguage, to talk about these structures one needs a binary relation\nsymbol, \\(S\\), as well as a collection of unary relation symbols. This\nlanguage is called first-order correspondence language\nbecause every basic modal formula corresponds to a first-order\nformula. The standard translation of a modal formula \\(\\varphi\\) is a\nfirst-order formula with one free variable expressing the semantics of\nmodal formulas: \n\\[\\begin{align}\n\\ST_{x}(P)& :=Px\\\\\n \\ST_{x}(\\bot ) & :=x\\not=x \\\\\n \\ST_{x}(\\lnot \\varphi )& :=\\lnot \\ST_{x}(\\varphi )\\\\\n \\ST_{x}(\\varphi \\land \\psi )& :=\\ST_{x}(\\varphi )\\land \\ST_{x}(\\psi ) \\\\\n \\ST_{x}(\\square \\varphi )& :=\\forall y(Sxy\\rightarrow \\lbrack y/x]\\ST_{y}(\\varphi ))\\text{, where }y\\text{ is a new variable.} \n\\end{align} \\]\n\n\nThe idea behind this definition is to express in the correspondence\nlanguage the semantic interpretation of the modal formulas: both\nlanguages are talking about the same structures, as a Kripke structure\ncan be viewed as a plain first-order relational structure. From this\ndefinition the following equivalence is obtained:\n\n\nSwitch Lemma: \\(\\mathcal{A},w\\models \\varphi\\) iff\n\\(\\mathcal{A}\\ \\models \\ST_{x}(\\mathcal{\\varphi )}[x:=w]\\)\n\n\n(the assignment sends variable \\(x\\) to world \\(w\\))\n\nFrom this lemma it is possible to derive Compactness,\nL\u00f6wenheim-Skolem and Enumerability theorems for\nthe basic modal logic (Blackburn & van Benthem 2007: 11) just\nusing the corresponding properties of first-order logic.\n\nThe set of validities of basic modal logic is not only\nrecursively enumerable (as the enumerability theorem proves) but the\nsatisfiability problem is also decidable. We wonder, what is the\ngain in translating a decidable logic into an undecidable one? Are we\nloosing decidability? The answer is that we don\u2019t loose\ndecidability; in fact, one can use translations to prove decidability\nfor basic modal logic.\n\nConcerning translation of basic modal logic into first-order\ncorrespondence language, there are at least two results to\nhighlight:\n\n\n\nThe first relevant result is that basic propositional modal\nlogic can be translated into the two variable\n fragment[13]\n of first-order logic (formulas of first-order logic where only two\nvariables are used) and the satisfiability problem for the two\nvariable fragment is decidable. \n\n\n\n\nThe second relevant result is the Modal Characterization\n Theorem[14]\n establishing, for any first-order formula with a free variable, the\nequivalence between being equivalent to a modal formula and being\ninvariant under bisimulation (see van Benthem 2010: 26\u201327 for a\ndefinition). Bisimulation is a useful result as it can be employed to\nmake a model \\(\\mathcal{A}\\) as small as possible, by bisimulation\nconstraction, as well as to make bigger models. \n\n\nHowever, these results apply to basic modal logic; in that\nlogic we are talking about satisfiability as meaning\n\u201csatisfiable on some model\u201d, no restrictions (like\ntransitivity) are imposed on the accessibility relation. And for any\nmodal logic other than system K we are looking for\nmodels with additional properties. It is true that similar method can\nbe applied with other propositional systems when the relevant\nproperties can be expressed by first-order formulas with only two\nvariables. Nevertheless, transitivity is a clear counter case.\n\nIn\n section 5.2,\n a variety of modal systems are treated (including S4, whose\naccessibility relation is reflexive and transitive) and several\nmetatheorems are proved for them, by using the MSL reservoir. The\ntranslation is defined into a many-sorted first-order logic with a\nsecond-order flavor, as the many-sorted structures used in that\nsection contain the relevant categories of mathematical sets (and\nrelations) definable in the modal logic being translated.\n\nIn the following sections we present translations into many-sorted\nlogic as the path to completeness in three\n stages.[15]\n3.3 General Plan\n\nThe general plan is as follows: The signature of the logic being\nstudied (call it \\(\\XL\\)) is transformed into a many-sorted signature,\nthe expressions of the logic \\(\\XL\\) are translated into\n\\(\\MSL^{\\XL}\\) (a many-sorted language suited for \\(\\XL\\)) and the\nstructures of the logic \\(\\XL\\) are converted into many-sorted\nstructures. Thus, we need to define a recursive function \\(\\Trans\\) to\ndo the translation and a direct conversion of structures,\n\\(\\Conv_{1}.\\)\n\nWith the direct conversion of structures we want to obtain as a result\nthe equivalence of validity in the original structures for \\(\\XL\\),\ncall them simply \\(\\Str(\\XL)\\), with validity of a certain class of\nmany-sorted formulas (the translations) in the class\n\\(\\mathfrak{S}^{\\ast}\\) of converted structures (where\n\\(\\mathfrak{S}^{\\ast}=\\Conv_{1}(\\Str(\\XL))\\)).\n\nNext question to ask is whether or not \\(\\mathfrak{S}^{\\ast}\\) can be\nreplaced by the models of a set \\(\\Delta\\) of many-sorted formulas.\nThus, the key to both definitions, \\(\\Trans\\) and \\(\\Conv_{1}\\), is to\nsimplify the proof of the semantic equivalence, and in this respect\nthe relevance of the results obtained strongly depends on the\npossibility of axiomatizing \\(\\mathfrak{S}^{\\ast}\\). In case you get\nsuch a recursive set of formulas of \\(\\MSL^{\\XL}\\), say \\(\\Delta\\),\n(or at least such that \\(\\mathfrak{S}^{\\ast}\\subseteq \\Mod(\\Delta )\\))\nwe should prove that validity in \\(\\XL\\) is equivalent to consequence\nfrom \\(\\Delta\\) in \\(\\MSL^{\\XL}\\).\n\nIn case you get the set \\(\\Delta\\), a reverse conversion of\nstructures, \\(\\Conv_{2}\\), should be defined. And so, from many-sorted\nmodels of \\(\\Delta\\) we get structures in \\(\\Str(\\XL)\\). Our goal in\ndefining it is to prove that starting from a many-sorted structure\n\\(\\mathcal{B}\\) (a model of \\(\\Delta\\)), a formula \\(\\varphi\\) of\n\\(\\XL\\) is true in \\(\\Conv_{2}(\\mathcal{B)}\\) if and only if the\nuniversal closure of its translation is true at \\(\\mathcal{B}\\).\n3.4 Level One: Representation Theorems\n\nThe logic being studied is \\(\\XL\\) and we define a recursive function\n\\(\\Trans\\) to do translations into \\(\\MSL^{\\XL}\\) as well as a direct\nconversion of structures, \\(\\Conv_{1}\\). Our first goal is to state\nand prove the following:\n\n\nTheorem 1: For every sentence \\(\\varphi\\) of the\n\\(\\XL\\) logic, \n\\[\\models _{\\Str(\\XL)}\\varphi \\text{ in } \\XL \\text{ iff } \\models _{\\mathfrak{S}^{\\ast}}\\forall \\Trans(\\varphi )\\text{ in }\\MSL\\]\n\n\nwhere \\(\\forall \\Trans(\\varphi )\\) is the universal closure of\n\\(\\Trans(\\varphi )\\) and\n\\(\\mathfrak{S}^{\\ast}=\\Conv_{1}\\Str(\\XL)\\).\n\n\nWe wonder, can validity in the class of structures\n\\(\\mathfrak{S}^{\\ast}\\) be replaced by consequence from a set\n\\(\\Delta\\) of many-sorted formulas? The next goal is to find such\na \\(\\Delta\\), at least a set satisfying \\(\\mathfrak{S}^{\\ast}\\subseteq\n\\Mod(\\Delta )\\). To finish level one, one needs to prove a\nRepresentation theorem; namely, a statement of the following\nform:\n\n\nRepresentation theorem: There is a recursive set of\nmany-sorted sentences \\(\\Delta\\), with \\(\\mathfrak{S}^{\\ast}\\subseteq\n\\Mod(\\Delta )\\), and such that \n\\[\\models _{\\Str(\\XL)}\\varphi \\text{ in } \\XL \\text{ iff } \\Delta \\models _{\\Str(\\MSL^{\\XL})}\\forall \\Trans(\\varphi )\\text{ in }\\MSL\\]\n\n\nfor every sentence \\(\\varphi\\) of the \\(\\XL\\) logic.\n\n\nFrom Representation theorem it follows Enumerability for the\nlogic \\(\\XL\\). Namely, the set of validities of \\(\\XL\\) is recursively\nenumerable. Therefore, \\(\\XL\\) is complete in an abstract sense.\n\nRemark: So, we learn that a calculus for \\(\\XL\\) is a\nnatural demand, but we also learn that in MSL we can simulate such a\ncalculus and then we could use a theorem prover for MSL.\n3.5 Level Two: the Main Theorem\n\nWhen the \\(\\XL\\) logic under scrutiny has a concept of logical\nconsequence, we may try to prove the Main theorem; that is,\nthat consequence in \\(\\XL\\) (\\(\\Pi \\models _{\\Str(\\XL)}\\varphi\\)) is\nequivalent to consequence of translations in MSL, modulo the\ntheory \\(\\Delta\\). To prove the main theorem, the reverse conversion\nof structures, \\(\\Conv_{2}\\), should be used. Our goal in defining it\nis to prove the following:\n\n\nLemma 2: For any \\(\\varphi \\in \\Sent(\\XL)\\) and\n\\(\\mathcal{B} \\in \\Mod(\\Delta )\\) \n\\[\\Conv_{2}(\\mathcal{B)}\\models \\varphi \\text{ iff } \\mathcal{B}\\models \\forall \\Trans(\\varphi )\\]\n\n\nwhere \\(\\forall \\Trans(\\varphi )\\) is the universal closure of\n\\(\\Trans(\\varphi )\\).\n\n\nFrom the previous results, our Main Theorem follows:\n\n\nMain Theorem: There is a recursive set \\(\\Delta\n\\subseteq \\Sent(L^{\\ast})\\) with \\(\\mathfrak{S}^{\\ast}\\subseteq\n\\Mod(\\Delta )\\), such that \n\\[\\Pi \\models_{\\Str(\\XL)}\\varphi \\text{ iff } \\Trans(\\Pi )\\cup \\Delta \\models _{\\Str(\\MXL^{\\ast})}\\Trans(\\varphi )\\]\n\n\nfor all \\(\\Pi \\cup \\{\\varphi \\}\\subseteq \\Sent(\\XL)\\).\n\n\n\nCorollary: Compactness and\nL\u00f6wenheim-Skolem for \\(\\XL\\).\n\n\nRemark: We already have Enumerability. Now,\nfrom Main Theorem as well Compactness and\nL\u00f6wenheim-Skolem for \\(\\MSL\\), we easily obtain\nCompactness and L\u00f6wenheim-Skolem for \\(\\XL\\).\nTherefore, the logic under investigation could have a strongly\ncomplete calculus. You can either define it or use the many-sorted\none.\n3.6 Level Three: Deductive Correspondence\n\nWhen the \\(\\XL\\) logic also comes with a deductive calculus, we can\ntry to use the machinery of correspondence to prove, if possible,\nSoundness and Completeness for \\(\\XL\\). In order to\nprove these theorems, one needs to prove a Theorem of deductive\ncorrespondence between the \\(\\XL\\) calculus and the many-sorted\none, modulo \\(\\Delta\\). So, the next goal is to prove:\n\n\nTheorem of deductive correspondence: Let \\(\\Delta\\)\nbe defined as in the Main Theorem, then: \n\\[\\Trans(\\Pi )\\cup \\Delta \\vdash _{\\MSL}\\Trans(\\varphi )\\text{ if and only if } \\Pi \\vdash _{\\XL}\\varphi .\\]\n\n\n\nSince we already have the Main theorem (*), plus\nCompleteness and Soundness for MSL (**), once we get\nthis Theorem of deductive correspondence (***) the picture\nbelow gave us Soundness and Strong Completeness of\n\\(\\XL\\): \n\\[ \\begin{align}\n\\Trans(\\Pi )\\cup \\Delta \\models_{\\Str(\\MSL)} \\Trans(\\varphi ) & \\Longleftrightarrow \\Pi \\models _{\\Str(\\XL)}\\varphi \\tag{*} \\\\\n \\Updownarrow \\qquad\\qquad\\qquad \\tag{**} \\\\\n \\Trans(\\Pi )\\cup \\Delta \\vdash_{\\MSL} \\Trans(\\varphi ) & \\Longleftrightarrow \\Pi \\vdash _{\\XL}\\varphi \\tag{***} \\\\\n \n\\end{align} \\]\n\n\n\nCorollary: Soundness and Strong Completeness\nof \\(\\XL\\): \n\\[\\Pi \\models _{\\Str(\\XL)}\\varphi \\text{ if and only if }\\Pi \\vdash _{\\XL}\\varphi\\]\n\n\n\nRemark: We have reached the end of the road to\ncompleteness, but it is important to stress that we are using the\nalready proven completeness results of MSL to prove strong\ncompleteness for \\(\\XL.\\)\n4. Second-order Logic as Many-sorted Logic\n4.1 Second-order Logic\n\nSecond-order logic, SOL, is a very expressive formal language which\ndiffers from FOL (one-sorted first-order logic) in the following\nrespects: (1) alphabet, (2) standard and non-standard semantics and\n(3) overwhelming expressive power with standard semantics. See the\nentry on\n second-order and higher-order logic\n as well as the entry on\n Church\u2019s type theory.\n\nThe alphabet of second-order logic is obtained by including the\nfirst-order one-sorted variables and adding relation variables that\ncan be quantified.  As a result, in addition to the formula \\(\\forall\nx\\varphi\\) saying\n\u201cfor all individuals \\(\\varphi\\) holds\u201d, we have\nformulas \\(\\forall X\\varphi\\), \\(\\forall X^{2}\\varphi\\), etc. saying\n\u201cfor all properties, \\(\\varphi\\) holds\u201d,\n\u201cfor all binary relations, \\(\\varphi\\) holds\u201d,\netc.\n\nFrom the semantic point of view, to give meaning to the new variables\nwe need new universes whose elements are sets and relations over the\nuniverse of individuals, say \\(\\mathbf{A}.\\) In the so-called\nstandard semantics, a set variable ranges over the power set\nof the individual\u2019s universe, \\(\\wp (\\mathbf{A})\\), and a\nn-ary relation variable ranges over the power set of the\nn-ary Cartesian product of the individual\u2019s universe,\n\\(\\wp (\\mathbf{A}^{n})\\). To put an example of the overwhelming\nexpressive power of second order logic with standard semantics,\nArithmetical induction can be expressed \n\\[\\forall X(Xc\\land \\forall x(Xx\\rightarrow X\\sigma x)\\rightarrow \\forall xXx)\\]\n\n\nand second-order Peano arithmetic (\\(\\PA^{2}\\)) becomes categorical,\nthat is, any two models of \\(\\PA^{2}\\) are isomorphic. However, we pay\na high price for the expressive power, we sacrifice the logic:\nCompactness fails, L\u00f6wenheim-Skolem fails and\nCompleteness fails (both strong and weak).\n\nOf course, the latter results are obtained with standard semantics. In\nHenkin 1950 he announces that the incompleteness problem is solvable\nif \u201ca wider class of models\u201d (non-standard\nmodels) is allowed. Therefore, he introduces: standard structures,\ngeneral structures and frames. The classes of these structures are\nordered by set inclusion \n\\[\\mathfrak{SS}\\subseteq \\mathfrak{GS}\\subseteq \\mathfrak{F}\\]\n\n\nand, accordingly, the sets of validities in each class obey the\nreverse\n order[16]\n \n\\[\\Val_{\\mathfrak{F}}\\subseteq \\Val_{\\mathfrak{GS}}\\subseteq \\Val_{\\mathfrak{SS}}\\]\n\n\nIn the semantics of frames, both sets and relation variables\nare allowed to range over universes which are subsets of standard\nuniverses. Somehow, this condition alone does not guarantee that we\nhave enough sets and relations to deal with the second order\ncapability. We would like to include in the universes all the\ndefinable ones in our formal language. This is a rather natural demand\nimposed to the general models (Henkin models) to\nobtain completeness.\n\nIn fact, with the semantics of frames, the set of validities coincides\nwith the set of sentences derivable in a second-order calculus which\nis just an extension of the first-order one obtained by adding rules\nfor the new quantifiers. This many-sorted calculus was isolated by\nHenkin (1953) in a paper where he introduced the Comprehension\nSchema \n\\[\\exists X^{n}\\forall x_{1}\\ldots x_{n}(X^{n}x_{1}\\ldots x_{n}\\leftrightarrow \\varphi )\\]\n\n\nas a way of getting rid of the complex substitution rule of Church\n(1956). It is clear that, in case the only requirement you impose to\nthe universes of the second-order structure is to be subsets of\nstandard universes, there is no guarantee that they are models of\nComprehension. That is why we need the general structures to\nobey extra rules, universes have to be closed under definability. With\ngeneral structures the set of validities coincides with the set of\nsentences derivable in the second-order calculus. So, we go back to\nthe situation encountered in first-order logic as you recover:\nCompactness, L\u00f6wenheim-Skolem and\nCompleteness.\n\nObviously, SOL with general semantics is less expressive than with\nstandard semantics. For instance, \\(\\forall X(Xx\\leftrightarrow Xy)\\)\nis no longer a definition of genuine identity between individuals. And\nso we take it as primitive and require equality \\(\\approx\\) to be\ninterpreted as identity. For higher types, Axiom of\nExtensionality \n\\[\\forall X^{n}Y^{n}(X^{n}\\approx X^{n}\\leftrightarrow \\forall x_{1}\\ldots x_{n}(X^{n}x_{1}\\ldots x_{n}\\leftrightarrow X^{n}x_{1}\\ldots x_{n}))\\]\n\n\nis added.\n\nWhat is the conclusion of these results? As you know, a logic\nis like a balance scale: you have expressive power in one pan and\ncomputability power in the other. In case you wanted to retain logical\nproperties, you had to change the semantics and lose some expressive\npower, you cannot have both at a maximum, they are \u201coptimal\nimpossible\u201d. One can express the same idea in a more technical\nway by resorting to Lindstr\u00f6m\u2019s results (Lindstr\u00f6m\n1969) mentioned in\n section 2.3.\n\nFor more information on second-order logic, see the entry on\n second-order and higher-order logic,\n as well as Church 1956 and Enderton 1972. Very recommended is Henkin\n1996 as well as some of the papers in The Life and Work of Leon\nHenkin (see Manzano, Sain, & Alonso 2014), in particular:\n\u201cChanging a Semantics, Opportunism or courage?\u201d\n(Andr\u00e9ka, van Benthem, Bezhanishvili and N\u00e9meti 2014),\n\u201cHenkin on Completeness\u201d (Manzano 2014b), and \u201cApril\nthe 19th\u201d (Manzano 2014a).\n4.2 Translation of Formulas and Conversion of Structures\n\nFollowing the instructions in the corresponding section\n (\u00a73.4\n or\n \u00a73.5),\n we define a syntactical translation from SOL to \\(\\MSL^{\\SOL}\\) as\nwell as two conversions of structures, direct and reverse.\n\nFirst of all, we realize that second-order structures are in fact\nmany-sorted with certain peculiarities: in most cases they are what we\ncalled strict, because the intersection between any two\ndifferent universes is empty, but all of them are related, as they are\ndefined over the universe of individuals. Moreover, in the general\nstructures the universes obey certain rules, like being models of\nExtensionality and Comprehension.\n\nLet \\(L\\) be a second-order language with a set \\(\\OperSym\\) of\noperation symbols. If we compare expressions in SOL with expressions\nin a many-sorted logic, we realize that \\(X^{n}x_{1}\\ldots x_{n}\\) is\nnot a formula of many-sorted logic since it is only a string of\nvariables. What we do is to introduce a new many-sorted language,\n\\(\\MSL^{\\SOL}\\), where we retain all the symbols in \\(\\OperSym\\) but\nthe signature is now enlarged with new membership relation symbols,\n\\(\\epsilon _{n}\\), whose interpretations are going to be a kind of\nmembership relations. The many-sorted signature \\(\\Sigma\n^{\\SOL}\\) includes a set \\(\\Sorts\\) whose elements are the types in\nthe SOL structure; namely, 1, and \\(\\langle\\underbrace{ 1,\\ldots ,1}_n ,0\\rangle\\)\nfor all \\(n\\geq\n 1\\).[17]\n\nTherefore, the syntactical translation from SOL to this\n\\(\\MSL^{\\SOL}\\) leaves every formula the same except the atomic\nformulas of the kind mentioned above; i.e.: \n\\[\\Trans^{\\SOL}(X^{n}x_{1}\\ldots x_{n}):=\\epsilon _{n}x_{1}\\ldots x_{n}X^{n}\\]\n\n\nDirect conversion of structures (from \\(\\SOL\\) to\n\\(\\MSL^{\\SOL}\\)): Let us define \\(\\Conv_{1}\\) as a function which\ntakes any structure \\(\\mathcal{A}\\in\\Str(\\SOL)\\) and returns a\nstructure \\(\\mathcal{A}^{\\ast}\\in \\Str(\\MSL^{\\SOL})\\). These\nstructures are basically the same, with the only exception of\nmembership relations we now add. This membership relation symbol of\nthe many-sorted language, \\(\\epsilon _{n}\\), is interpreted as genuine\nmembership, \n\\[\\epsilon _{n}^{\\mathcal{A}^{\\ast}}=\\{\\langle \\mathbf{x}_{1}\\mathbf{,\\ldots ,x}_{n}\\mathbf{,X}^{n}\\rangle \\in \\mathbf{A}^{n}\\times \\mathbf{A}_{n}:\\mathbf{\\langle x}_{1}\\mathbf{,\\ldots ,x}_{n}\\mathbf{\\rangle \\in X}^{n}\\}\\]\n\n\n(where \\(\\mathbf{A}\\) is the universe of individuals, of sort 1, and\n\\(\\mathbf{A}_{n}\\) is the universe of n-ary relations, of\nsort\n \\(\\langle\\underbrace{ 1,\\ldots ,1}_n ,0\\rangle\\), and \n\\(\\mathbf{A}^{n}\\) is\nthe n-ary Cartesian product of \\(\\mathbf{A}\\))\n\nIt is easy to prove the following result.\n\n\nProposition: For every sentence \\(\\varphi\\) of\nSOL: \n\\[\\models _{\\mathcal{G}.\\mathcal{S}}\\varphi \\text{ in }\\SOL\\text{ if and only if }\\models _{\\mathfrak{S}^{\\ast}}\\Trans^{\\SOL}(\\varphi )\\text{ in }\\MSL^{\\SOL}\\]\n\n\n(where \\(\\models _{\\mathcal{G}.\\mathcal{S}}\\varphi\\) means validity\nwith general structures and\n\\(\\mathfrak{S}^{\\ast}=\\Conv_{1}(\\Str(\\SOL))\\))\n\n\nNow we ask, can we axiomatize \\(\\mathfrak{S}^{\\ast}\\)? and\nthe answer is YES. The structures we want to work with are\n\\(\\MSL^{\\SOL}\\) models of Extensionality and\nComprehension with Disjoint universes. Thus, let\n\\(\\Delta\\) be:\n\\[\\begin{align}\n\\Ext^{(n)} & :=\\forall X^{n}Y^{n}(\\forall x_{1}\\ldots x_{n}(\\epsilon _{n}x_{1}\\ldots x_{n}X^{n}\\leftrightarrow \\epsilon _{n}x_{1}\\ldots x_{n}Y^{n})\\\\\n & \\qquad\\qquad \\rightarrow X^{n}\\approx Y^{n}) \\\\\n \\forall \\Comph_{\\varphi }^{(n)} & :=\\forall \\exists X^{n}\\forall x_{1}\\ldots x_{n}(\\epsilon _{n}x_{1}\\ldots x_{n}X^{n}\\leftrightarrow \\varphi ) \\\\\n \\Disj_{n,m} &:=\\lnot \\exists X^{n}Y^{m}X^{n}\\approx Y^{m}\\;(\\text{for }n\\neq m) \\\\\n \n\\end{align}\\]\n\n\nReverse conversion of structures (from \\(\\MSL^{\\SOL}\\) to\n\\(\\SOL\\)): The reverse conversion of structures is done in four\n steps.[18]\n\n\n\nThe structures we want to work with are \\(\\MSL^{\\SOL}\\) models of\nextensionality and comprehension with disjoint universes. So, they\nhave to be models of \\(\\Delta\\). In such a model the universes of sort\n\\(\\langle 1,\\ldots ,1,0\\rangle\\) are not necessarily subsets of \\(\\wp\n(\\mathbf{A}_{1}^{n}).\\) However, \\(\\mathbf{A}_{1}\\) and\n\\(\\mathbf{A}_{\\langle 1,\\ldots ,1,0\\rangle }\\) are related by\n\\(\\epsilon _{n}^{\\mathcal{A}}\\), but this relation doesn\u2019t need\nto be \u201cgenuine\u201d membership. \n\n\nFrom a many-sorted structure \\(\\mathcal{A}\\) of signature \\(\\Sigma\n^{\\SOL}\\) which is a model of \\(\\Delta\\), we pass to another\nmany-sorted structure \\(\\mathcal{B}\\) of the same signature but where\nuniverses of sort \\(\\langle 1,\\ldots ,1,0\\rangle\\) are now subsets of\n\\(\\wp (\\mathbf{B}_{1}^{n})\\) and \\(\\epsilon _{n}^{\\mathcal{B}}\\) is\ngenuine membership. The new many-sorted structure\n\\(\\mathcal{B}\\) is obtained by defining a function \n\\[H:\\Mod(\\Delta )\\rightarrow \\Conv_{1}(\\Str(\\SOL))\\]\n\n\nthat follows the information given in \\(\\epsilon _{n}^{\\mathcal{A}}\\)\nto build \\(\\mathbf{B}_{\\langle 1,\\ldots ,1,0\\rangle }\\), thus\n\\(\\mathcal{B}=H(\\mathcal{A})\\). The new structure is basically a\ngeneral second order structure with the genuine membership\n relation.[19]\n\n\n\nIt is easy to see that the new structure \\(\\mathcal{B}\\) is isomorphic\nto the original \\(\\mathcal{A}\\), so \\(\\mathcal{A}\\approxeq\n\\mathcal{B}\\). \n\n\nFrom a many-sorted structure \\(\\mathcal{B}\\in \\Conv_{1}(\\Str(\\SOL))\\)\nof the kind mentioned above, we define a SOL structure by an easy\nmake-up transformation; namely, erasing the membership relations and\nadapting the signature to a second order one. This is just to reverse\nthe transformation done in \\(\\Conv_{1}\\). \n\n\nThe final result of the reverse conversion is just\n\\(\\Conv_{1}^{-1}(H(\\mathcal{A}))\\) and so we define \\(\\Conv_{2}\\)\naccordingly.\n\n\nDefinition: \\(\\Conv_{2}=\\Conv_{1}^{-1}\\circ H\\).\n\n\nWith all these definitions at hand, we now prove:\n\n\nProposition: for every many-sorted structure\n\\(\\mathcal{C}\\in \\Mod(\\Delta )\\) there is a SOL-structure\n\\(\\Conv_{2}(\\mathcal{C})\\in \\Str(\\SOL)\\) such that\n\n\n\\(\\Conv_{2}(\\mathcal{C})\\) is a model of \\(\\varphi\\) if and only if\n\\(\\mathcal{C}\\) is a model of \\(\\Trans^{\\SOL}(\\varphi)\\)\n\n\nfor all sentences of SOL.\n\n4.3 Semantic Theorems Relating SOL and MSL\n\nBy applying the previous results, it is easy to prove the following\nsemantic theorems:\n\n\nRepresentation theorem: For every sentence\n\\(\\varphi\\) of SOL: \\(\\models _{\\mathfrak{G.S}}\\varphi\\) in SOL\niff \n\\[\\Delta \\models_{\\MSL} \\Trans^{\\SOL}(\\varphi )\\]\n\n\nin \\(\\MSL^{\\SOL}.\\)\n\n\n\nMain theorem: \\(\\Pi \\models\n_{\\mathfrak{G.S}}\\varphi\\) in SOL if and only if \n\\[\\Trans^{\\SOL}(\\Pi )\\cup \\Delta \\models _{\\MSL} \\Trans(\\varphi )\\]\n\n\nin \\(\\MSL^{\\SOL}\\).\n\n\nAs explained in\n section 3.5,\n by using Representation and Main\ntheorems some important metatheorems of MSL can now be transferred to\nSOL.\n\n\nTheorem: SOL with general semantics has the following\nproperties: Enumerability, Compactness and\nL\u00f6wenheim-Skolem.\n\n\nRemark: The enumerability and compactness theorems\ntaken together tell us that the logic under investigation could have a\nstrongly complete calculus. In fact, we could use the many-sorted\ntheory \\(\\Delta\\) to derive SOL theorems in the many-sorted\ncalculus.\n\nHowever, in case we already had a calculus for SOL we can use the\nmachinery of translations to prove its Soundness and\nCompleteness.\n4.4 Soundness and Completeness for SOL\n\nWe just follow the strategy presented on level three (in\n section 3.6)\n of our general plan to prove Soundness and\nCompleteness for SOL calculus. What needs to be proven is the\nfollowing theorem.\n\n\nTheorem of deductive correspondence: \\(\\Pi \\vdash\n_{\\SOL}\\varphi\\) in second order calculus iff \n\\[\\Trans^{\\SOL}(\\Pi )\\cup \\Delta \\vdash _{\\MSL} \\Trans^{\\SOL}\\mathbf{(}\\varphi \\mathbf{)}\\]\n\n\nin many-sorted calculus, MSL.\n\n\nAccording to the general plan, from the\n Main theorem,\n the Deductive correspondence and Soundness and\nStrong Completeness of MSL, we get Completeness and\nSoundness for SOL with general semantics.\n\n\nStrong Completeness and Soundness: \\(\\Pi \\models\n_{\\mathcal{G}. \\mathcal{S}}\\varphi\\) iff \\(\\Pi \\vdash _{\\SOL}\\varphi\\)\nfor all \\(\\Pi \\cup \\{\\varphi \\}\\subseteq \\Sent(L_{2}).\\)\n\n5. Translations Into Many-sorted Logic with a Second-order Appearance\n5.1 General Plan\n\nAs mentioned already, in Henkin 1953 a new calculus for second order\nlogic was defined by eliminating some Substitution Rules from\nthe calculus presented in Church\n 1956[20]\n and introducing Comprehension Schema. In this paper, Henkin\ndefines two calculi \\(F^{\\ast}\\) and \\(F^{\\ast \\ast}\\) (basically,\ncalculi MSL and SOL): the first one is obtained from a first-order\ncalculus by adding rules for the new quantifiers, while the second is\na proper second-order calculus. Both calculi are incomplete with\nstandard semantics. Henkin mentioned that we can obtain a completeness\nresult for the \\(F^{\\ast}\\) calculus with the frame\nsemantics. In fact, we have already seen completeness for MSL and\nthat the second-order calculus is complete with the general\nsemantics.\n\nThere is another interesting idea, appearing explicitly in the 1953\npaper, which is also useful. The idea is: If we weaken comprehension,\nwe obtain a calculus between \\(F^{\\ast}\\) and \\(F^{\\ast \\ast}\\). And\nit is easy to find a semantics for the logic thus defined. Of course,\nthis class of structures is placed between \\(\\mathfrak{F}\\) and\n\\(\\mathfrak{GS}\\). The new logic, call it \\(\\XL\\), will also be\ncomplete; the main reason being that this class of models is again\naxiomatizable.\n\nIn what follows, this idea is exploited in several propositional modal\nlogics as well as in propositional dynamic logic with Kripke\nsemantics (see the entry on\n modal logic\n as well as the entry on\n propositional dynamic logic).\n\nThe second-order appearance mentioned in the title is as follows: when\ndefining the conversion of structures into MSL we will add new\nuniverses containing all the categories of mathematical objects you\ncan talk about in PML (or PDL); therefore, we add all sets and\nrelations defined in these logics with their respective formulas and\nprograms. And so, we are somehow shifting to SOL structures. We can\nadd as well membership relation symbols to the language and membership\nrelations to the structures, as we did in the conversion of SOL into\nMSL; we will end up in MSL but the inspiration is SOL.\n5.2 Propositional Modal Logics as Many-sorted Logic\n\nThe first thing we do is to set a many-sorted language \\(\\MSL^{\\PML}\\)\ncontaining: unary relation symbols for each atomic proposition, \\(P\\in\n\\Atom\\), a binary relation symbol \\(S\\) to represent the accessibility\nrelation, a membership sign, and equality for individuals and sets.\n\\(\\MSL^{\\PML}\\) contains individual variables as well as variables for\nsets. The translation is standard (as in\n section 3.2):\n we express in the target logic \\(\\MSL^{\\PML}\\) the semantical\ninterpretation of the formulas being\n translated.[21]\n In particular, \n\\[\\begin{align}\n\\Trans(P)[u]& :=Pu \\\\\n \\Trans(\\square \\varphi )[u]& :=\\forall v(Suv\\rightarrow \\Trans(\\varphi )[v]) \n\\end{align}\\]\n\n\nThe many-sorted structures we shall use are obtained from the modal\nstructures by adding a universe containing sets of states or worlds.\nGiven a Kripke structure \n\\[\\mathcal{A}=\\langle \\mathbf{W},\\mathbf{R},\\langle P^{\\mathcal{A}}\\rangle _{P\\in \\Atom}\\rangle\\]\n\n\nwe say that \\(\\mathcal{AG}\\) is a general structure built on\n\\(\\mathcal{A}\\) if and only if \n\\[\\mathcal{AG}=\\langle \\mathbf{W},\\mathbf{W}^{\\prime },\\mathbf{R},\\epsilon _{1}^{\\mathcal{A}},\\langle P^{\\mathcal{A}}\\rangle _{P\\in \\Atom}\\rangle\\]\n\n\nwhere \\(\\Def \\subseteq \\mathbf{W}^{\\prime }\\subseteq \\wp\n(\\mathbf{W})\\). The sets \\(\\Def\\) and \\(\\mathbf{W}^{\\prime }\\) contain\nall the members in the family \\(\\langle P^{\\mathcal{A}}\\rangle _{P\\in\n\\Atom}\\) and are closed under several\n operations.[22]\n It can be proved that the set of worlds where a modal formula\n\\(\\varphi\\) is true in a modal structure \\(\\mathcal{A}\\) is the same\nset its translation defines in the general structure \\(\\mathcal{AG}\\)\nbuilt on \\(\\mathcal{A}\\).\n\nLet us use \\(\\mathfrak{G}\\) to refer to the class of all general\nstructures built on modal structures defined as above, our converted\nstructures. It is not difficult to prove that validity of \\(\\varphi\\)\nin PML is equivalent to validity of the universal closure of the\ntranslation of the formula in the class \\(\\mathfrak{G}\\).\nLevel one for Modal Logic K\n\nTo finish the level one of the translation method, we need to\naxiomatize \\(\\mathfrak{G}\\). Is that possible? The answer is\npositive for the minimal logic K (basic modal\nlogic) as we can define a theory \\(\\Delta _{K}\\) with the\nComprehension Axiom \n\\[\\forall \\exists X\\,\\forall u(\\varepsilon _{1}uX\\leftrightarrow \\varphi )\\text{ }\\]\n\n\nworking mainly on many-sorted formulas \\(\\varphi\\) obtained by\ntranslations of modal formulas. As we wanted a second-order\nappearance, Extensionality Axiom is added to \\(\\Delta _{K}\\).\nAs a result, we obtain a Representation Theorem for the\nminimal modal logic, K: \n\\[\\models \\varphi \\text{ in } \\PML \\Longleftrightarrow \\Delta _{K}\\models \\forall u\\Trans(\\varphi )[u]\\text{ in }\\MSL\\]\n\n\n(in logic K the whole class of Kripke structures are used, no\nconditions are imposed on the accessibility relation)\n\nAs explained in\n section 3.4,\n from the previous theorem, Enumerability theorem for modal\nlogic K is achieved. In fact, we already know much more, as\nwe mentioned in\n section 3.2\n that the set of validities in system K is decidable.\nLevel one for Modal Logic S4\n\nIn case we wanted a similar outcome for another modal logic, say\nS4, the set \\(\\Delta _{K}\\) can be extended to a set \\(\\Delta\n_{S4}\\) including as axioms the many-sorted abstract conditions for\naxioms \\(T\\) and 4 (i.e., formulas \\(\\MS(T)\\ \\)and\n \\(\\MS(4)\\)[23]).\n In fact, we can prove that the first-order axioms for reflexivity and\ntransitivity are equivalent to these many-sorted translated\nsentences. \n\\[\\begin{align}\n\\Delta _{K} \\vdash \\MS(T) &\\leftrightarrow \\textrm{Reflexivity} \\\\\n \\Delta _{K} \\vdash \\MS(4) &\\leftrightarrow \\textrm{Transitivity} \n\\end{align}\\]\n\n\nThe Representation Theorem for S4 is easily\nobtained\n\n\n\\(\\models _{\\mathfrak{D}}\\varphi\\) in \\(\\PML \\Longleftrightarrow\n\\Delta _{S4}\\models \\forall u\\Trans(\\varphi )[u]\\) in \\(\\MSL\\)\n\n\n(\\(\\mathfrak{D}\\) is the class of reflexive and transitive Kripke\nmodels)\n\nThese results are relevant when we proceed further to prove the\nMain\n Theorem.[24]\n From this theorem we get for free Compactness and\nL\u00f6wenheim-Skolem for K and S4.\nLevel three for Modal Logics K and S4\n\nIn case we wanted to prove that modal calculi for K and\nS4 (see the entry on\n modal logic)\n are complete by using the completeness of MSL, Deductive\nCorrespondence between the modal logic concerned and its\nmany-sorted counterpart have to be proved. Proving deductive\ncorrespondence from propositional modal logic to many-sorted logic is\neasy \n\\[\\begin{align}\n\\Pi \\vdash _{K}\\varphi & \\Rightarrow \\Trans(\\Pi )\\cup \\Delta _{K}\\vdash \\Trans(\\varphi ) \\\\\n \\Pi \\vdash _{S4}\\varphi & \\Rightarrow \\Trans(\\Pi )\\cup \\Delta _{S4}\\vdash \\Trans(\\varphi ) \n\\end{align} \\]\n\n\nas translations of modal axioms of system K are theorems of\nthe MSL logic, while translations of \\(T\\) and 4 are theorems of\n\\(\\Delta _{S4}\\). To prove the reverse deductive correspondence\nbetween MSL and PML the canonical\n model[25]\n \\(\\mathcal{B}_{K}\\) (or \\(\\mathcal{B}_{S4}\\)) could be used to build\nthe general structure \\(\\mathcal{B}_{K}\\mathfrak{G}\\) (or\n\\(\\mathcal{B}_{S4}\\mathfrak{G}\\)). The final step is reached by using\nthe general structure built onto the canonical model. It is easy to\nprove that the translation of a modal formula \\(\\varphi\\) is true at a\nworld of this structure if and only if formula \\(\\varphi\\) belongs to\nthis world.\n\nTherefore, \n\\[\\begin{align}\n\\mathcal{B}_{K}\\mathfrak{G}\\models \\forall u(\\Trans(\\varphi )[u]) & \\Rightarrow \\vdash _{K}\\varphi \\\\\n \\mathcal{B}_{S4}\\mathfrak{G}\\models \\forall u(\\Trans(\\varphi )[u]) & \\Rightarrow \\vdash _{S4}\\varphi \n\\end{align} \\]\n\n\nThe deductive correspondence between a modal logic and its many-sorted\ncounterpart is achieved \n\\[\\begin{align}\n\\Pi \\vdash _{K}\\varphi & \\Longleftrightarrow \\Trans(\\Pi )\\cup \\Delta _{K}\\vdash \\Trans(\\varphi ) \\\\\n \\Pi \\vdash _{S4}\\varphi & \\Longleftrightarrow \\Trans(\\Pi )\\cup \\Delta _{S4}\\vdash \\Trans(\\varphi ) \n\\end{align} \\]\n\n\nand the soundness and completeness of the modal logics under\ninvestigation is reached by following the strategy explained in\n section 3.6.\nPropositional Dynamic Logic as Many-sorted Logic\n\nA similar method can be applied in Propositional Dynamic Logic (PDL).\nPDL is a modal logic initially designed to talk about states and\ncomputer programs, it has a complete calculus whose axioms include the\nusual ones in modal logic K as well as other axioms\ndescribing the composition of programs (see the entry on\n propositional dynamic logic).\n Among them, it is worth highlighting Axiom 5. This axiom is also\nknown as \u201cinduction axiom\u201d and it is the responsible for\none of the characteristic of PDL, its uncompactness. For this\nreason, the calculus of PDL is sound and complete but only in the weak\nsense.\n\nThe translation of formulas and programs into many-sorted logic is the\nexpected\n one:[26]\n we express in the target logic \\(\\MSL^{\\PDL}\\) the semantical\ninterpretation of the formulas and programs being translated.\n\nFor the conversion of structures, we follow a procedure similar to the\none used in PML: we extend the Kripke model \\(\\mathcal{A}\\) to a\ngeneral structure \\(\\mathcal{AE}\\) built on \\(\\mathcal{A}\\)\n\n\\[\\mathcal{AE}=\\langle \\mathbf{W},\\mathbf{W}^{\\prime },\\mathbf{W}^{\\prime \\prime },\\mathbf{R},\\epsilon _{1}^{\\mathcal{A}},\\epsilon _{2}^{\\mathcal{A}},\\langle P^{\\mathcal{A}}\\rangle _{P\\in \\Atom}\\rangle\\]\n\n\nThe novelty is that now we have another domain \\(\\mathbf{W}^{\\prime\n\\prime }\\) to include the binary relations defined by programs. Using\nthese structures, one can prove that validity of a dynamic formula is\nequivalent to the validity of the universal closure of its translation\nin the class \\(\\mathcal{E}\\) of all many sorted structures obtained in\nthis way. The representation theorem is also available, once we define\nthe theory \\(\\Delta _{\\PDL}\\). This theory includes as axioms the\nmany-sorted abstract conditions for the PDL axioms,\nExtensionality (both for sets and relations) as well as\nComprehension axiom for sets and relations defined by\ntranslations of formulas and programs.\n\nAt the end of the process, one can prove not only the semantical\nequivalence of validities in PDL with consequences from \\(\\Delta\n_{\\PDL}\\) of the universal closure of their translations, but also\nthat the dynamic calculus proves as theorems all the formulas whose\ntranslations are theorems of our theory \\(\\Delta _{\\PDL}\\).\n\n\\[\\begin{align}\n\\models \\varphi & \\Longleftrightarrow \\Delta _{\\PDL}\\models \\forall u\\Trans(\\varphi )[u] \\\\\n \\vdash _{\\PDL}\\varphi & \\Longleftrightarrow \\Delta _{\\PDL}\\vdash _{\\MSL}\\forall u\\Trans(\\varphi )[u] \n\\end{align} \\]\n\n\nWeak completeness follows\n directly.[27]\n6. Further Results\n6.1 Reduction of Many-sorted Logic to One-sorted Logic\n\nIt is commonplace (Wang 1952, Feferman 1968, and Enderton 1972) to\npresent many-sorted logic as easily convertible to one-sorted\nfirst-order logic. In Hao Wang (1952), the equivalence is built on\nprovability while in Enderton\u2019s book it has a semantical\ncharacter.\n\nHere we point out that many-sorted reduces to classical first-order\nlogic (one-sorted) in the following sense: given a many-sorted\nstructure \\(\\mathcal{A}\\), every many-sorted sentence true at\n\\(\\mathcal{A}\\) has a translation into one-sorted first order logic\nthat is true at \\(\\mathcal{A}^{\\ast}\\), where \\(\\mathcal{A}^{\\ast}\\)\nis the result of unifying all the sorts in \\(\\mathcal{A}\\). From this\nresult we obtain the equivalence between consequences in both logics,\nmodulo a theory \\(\\Pi\\) easily defined.\nSyntactic translation\n\nFor the syntactic translation (known as \u201crelativization of\nquantifiers\u201d), let \\(L\\) be a many-sorted language of signature\n\\(\\Sigma\\), and let \\(\\OperSym\\) be its set of operation symbols. We\nthus need an one-sorted language \\(L^{\\ast}\\) with \n\\[\\OperSym^{\\ast} = \\OperSym\\cup \\{Q_{i}:i\\in \\Sort\\}.\\]\n\n\nVariables of \\(L\\) will be treated as variables of \\(L^{\\ast}\\),\nforgetting about sorts. The difference between the many-sorted\nlanguage \\(L\\) and the corresponding one-sorted one, \\(L^{\\ast}\\), is\nthat we add new unary relation symbols \\(Q_{i}\\), for each \\(i\\in\n\\Sort\\). Moreover, the symbols in \\(\\OperSym\\) of \\(L\\) are also in\n\\(L^{\\ast}\\) but while in the former language they have arity and\nsorts, in the latter they only have arity.\n\nThe translation, \\(\\Trans\\), leaves every term and formula unaltered,\nwith the only exception of quantified expressions that are\nrelativized: \n\\[ \\Trans(\\exists x^{i}\\phi ) := \\exists x^{i}(Q^{i}x^{i}\\land \\Trans(\\phi )) \\]\n\n\nExample: As an example we will use the already\npresented argument from the Book of Perfect\nEmptiness. In one-sorted first order logic we can introduce\nthis language: \n\\[\\begin{align}\nExy & :=x \\textit{ exists at instant } y \\\\\n Pxy & :=x \\textit{ is previous to } y \\\\\n Ox & :=x \\textit{ is an object} \\\\\n Ix & := x \\textit{ is a time} \\\\\n d & := \\textit{the dawn of times} \\\\\n t &:= \\textit{today}\\\\\n \n\\end{align} \\]\n\n\nAs you see, instead of using different sorts of variables, we add two\nnew unary predicates, \\(O\\) and \\(I\\). We formalize the argument\nas: \n\\[\\begin{align}\n\\alpha & :=\\forall x(Ix\\land \\exists y(Oy\\land Eyx)\\rightarrow \\forall z(Iz\\land Pzx\\rightarrow \\exists v(Ov\\land Evz))) \\label{primerorden} \\\\\n \\beta & :=\\exists y(Oy\\land Eyt)\\\\\n \\gamma &:=\\forall y(Iy\\rightarrow Pdy)\\\\\n \\delta & :=\\exists x(Ox\\land Exd) \n\\end{align} \\]\n\n\nIn order to derive the conclusion, we will need as well an extra\nhypothesis saying that the dawn of times and today\nare both times, \\((Id\\land It)\\). We could add several formulas\nrelating our new predicates: \n\n\\[\\begin{align} \\forall x(Ox\n&\\rightarrow \\lnot Ix)\\\\ \\forall x\\,\\forall y(Exy&\\rightarrow\nOx\\land Iy) \\\\ \\forall x\\,\\forall y(Pxy&\\rightarrow Ix\\land Iy)\\\\\n \n\\end{align} \\]\n\nConversion of many-sorted structures into one-sorted ones\n\nFor any many-sorted structure \\(\\mathcal{A}\\) of signature \\(\\Sigma\\)\nwe construct its corresponding one-sorted structure\n\\(\\mathcal{A}^{\\ast}\\) by something called \u201cunification of\ndomains\u201d.\n\nThe domain of \\(\\mathcal{A}^{\\ast}\\) is the union of the individuals\ndomains of \\(\\mathcal{A}\\), the interpretation of the new unary\npredicates \\(Q_{i}\\) corresponds to the old domains \\(\\mathbf{A}_{i}\\)\nand so this information is kept. The interpretation of the rest of\nelements in \\(\\OperSym\\) is similar to the one they have in the\nmany-sorted structure \\(\\mathcal{A}\\). The only difficulty concerns\noperation symbols with \\(\\Rank(f)=\\langle i_{1},\\ldots\n,i_{n},i_{0}\\rangle\\) and \\(i_{0}\\not=0\\) because now the universe is\nthe union of the universes and function \\(f^{\\mathcal{A}^{\\ast}}\\)\nneeds to give values to all of then. It is worth noting that for every\n\\(f^{\\mathcal{A}}\\) there are many different operations extending it,\nwhich means that there are different one-sorted structures generated\nby the above\n conversion.[28]\n\nThe following theorem holds for any of these extended structures.\n\n\nTheorem: Let \\(\\mathcal{A}\\) be a many-sorted\nstructure, \\(\\mathcal{A}^{\\ast}\\) one of its one-sorted counterparts,\n\\(L\\) a language for \\(\\mathcal{A}\\), and \\(\\varphi\\) some sentence in\n\\(L\\). Then \n\\[\\mathcal{A}\\models \\varphi \\ \\Longleftrightarrow \\ \\mathcal{A}^{\\ast}\\models \\Trans(\\varphi ).\\]\n\n\n\nWe have seen that many-sorted structures are always convertible into\none-sorted ones and now we consider the other direction.\nConversion of one-sorted structures into many-sorted ones\n\nIs any one-sorted structure \\(\\mathcal{E}\\) of signature \\(\\Sigma\n^{\\ast}\\) convertible into a many-sorted one of signature\n\\(\\Sigma\\)? The answer is negative, as there are two problems\nthat could stop the conversion: the first one is that in a many-sorted\nstructure all the universes should be nonempty and our idea is to take\nfor each sort \\(i\\) the unary relation \\(Q_{i}^{\\mathcal{E}}\\) as\nuniverse of sort \\(i\\) and so we need it to be nonempty; the second\ndifficulty concerns operation symbols with \\(\\Rank(f)=\\langle\ni_{1},\\ldots i_{n},i_{0}\\rangle\\) whose interpretation in structure\n\\(\\mathcal{E}\\) is just an n-ary function, but we need the\nvalues of \\(f^{\\mathcal{E}}\\upharpoonright\n(Q_{i_{1}}^{\\mathcal{E}}\\times \\ldots \\times\nQ_{i_{n}}^{\\mathcal{E}})\\) to be in \\(Q_{i_{0}}^{\\mathcal{E}}\\).\n\nWhat we do is to formulate in the one-sorted language three conditions\nwhose validity in a model makes it easily convertible into a\nmany-sorted one. Let \\(\\Pi\\) be the set of all sentences of the\nfollowing forms:\n\n\\(\\exists x\\ Q_{i}x\\), for each \\(i\\in \\Sort\\)\n\\(\\forall x_{1}\\ldots x_{n}(Q_{i_{1}}x_{1}\\land \\ldots \\land\nQ_{i_{n}}x_{n}\\rightarrow Q_{i_{0}}(f\\ x_{1}\\ldots x_{n}))\\), where\n\\(\\Rank(f)=\\langle i_{1},\\ldots ,i_{n},i_{0}\\rangle\\), \\(f\\in\n\\OperSym\\)\n\\(Q_{i}c\\), for each \\(c\\in \\OperSym\\) with \\(\\Rank(c)=i\\).\n\n\nNotice that the structure \\(\\mathcal{A}^{\\ast}\\) of the previous\ntheorem is a model of \\(\\Pi\\). Moreover, a one-sorted model of\n\\(\\Pi\\), \\(\\mathcal{E}\\), is easily convertible into a many-sorted\none, \\(\\mathcal{E}^{\\ddag }\\). We take \\(Q_{i}^{\\mathcal{E}}\\) as the\nuniverse of sort \\(i\\), strict relations and functions are obtained as\nrestrictions to the corresponding domains to obtain relations and\nfunctions with the desired\n sorts.[29]\n Due to the axioms in \\(\\Pi\\), construction of \\(\\mathcal{E}^{\\ddag\n}\\) can be carried out. It is now easy to obtain the following\nresult.\n\n\nMain Theorem: Let \\(\\Gamma \\cup \\{\\varphi \\}\\subseteq\n\\Sent(L)\\). \n\\[\\Gamma \\models _{\\MSL}\\varphi \\text{ if and only if } \\Trans(\\Gamma )\\cup \\Pi \\models _{\\FOL}\\Trans(\\varphi )\\]\n\n\n\nWe are using \\(\\models _{\\MSL}\\) and \\(\\models _{\\FOL}\\) to\ndistinguish between consequence in many-sorted logic and in one-sorted\nlogic.\n\nThe previous theorem allows us to infer the following three semantic\ntheorems for MSL from the corresponding one-sorted results:\nCompactness theorem, Enumerability theorem and\nL\u00f6wenheim-Skolem theorem (see Enderton 1972: 281). But\nwe have obtained them already as we have proven completeness for MSL\n (section 2.3).\n Obviously, from the many-sorted theorems we get the one-sorted\nversion for free.\n\nHowever, other theorems about many-sorted logic are not\nstraightforwardly obtained from their one-sorted versions. In\nparticular, interpolation in MSL requires its own proof (see\n section 6.2).\n The concept of interpretability plays an important role for a\ncomparison between one-sorted and many-sorted theories (see\n section 6.3\n and Hook 1985). Unfortunately, interpretablity between many-sorted\ntheories is not obtained from their one-sorted counterparts.\nConcerning the comparison, deductions in a many-sorted proof system\nare usually shorter than the derivations we get in a one-sorted\ncalculus, that is one of the reasons why many-sorted logic is so\nfrequently used in Computer Science (Meinke & Tucker 1993).\n6.2 The Interpolation Theorem\n\nThe Interpolation Theorem, which according to Wilfrid Hodges has\n\u201cthe longest pedigree of any theorem of model\n theory\u201d,[30]\n plays a relevant role in logic. In the first place, several important\nresults such us Beth\u2019s definability theorem and Robinson theorem\ncould be obtained directly from it (see the entry\n first-order model theory).\n In the second place, interpolation can be seen as a central logical\nproperty which \u201chas been used to reveal a deep harmony between\nsyntax and semantics\u201d (Feferman 2008: 341).\n\nThe one-sorted version of interpolation was proved by William Craig in\n1957a. Roger Lyndon (1959) gave a generalization of Craig\u2019s\ntheorem and, in 1968, Feferman extended the latter formulation to\nmany-sorted logic (see Feferman 2008: 349). Obviously, the one-sorted\nversion is a special case of the many-sorted one. However, many-sorted\ninterpolation cannot be straightforwardly transferred from the\none-sorted case.\n\nThe idea for Craig\u2019s 1957 proof of the Interpolation Theorem\nrests on the completeness theorem for one-sorted first-order logic.\nThe reason is that interpolation \u201clies\u201d somehow in the\nintersection of proof theory (as it follows from some metatheorems\nabout the calculus) and model theory (because of its applications).\nHenkin showed that the other way round also holds: completeness can be\nimmediately obtained from a extended\n version[31]\n of Craig-Lyndon\u2019s theorem.\n\nThe syntactical formulation of Craig\u2019s interpolation theorem\nreads as follows: If \\(\\varphi\\) and \\(\\psi\\) are sentences and\n\\(\\vdash \\varphi \\rightarrow \\psi\\), then:\n\n\\(\\Rel(\\varphi )\\cap \\Rel(\\psi )\\not=\\varnothing\\) implies that\nthere is an \u201cintermediate\u201d formula \\(\\theta\\) such that\n\\(\\vdash \\varphi \\rightarrow \\theta\\) and \\(\\vdash \\theta \\rightarrow\n\\psi\\) (\\(\\theta\\) is a sentence such that \\(\\Rel(\\theta )\\subseteq\n\\Rel(\\varphi )\\cap \\Rel(\\psi )\\)) and\n\\(\\Rel(\\varphi )\\cap \\Rel(\\psi )=\\varnothing\\) implies \\(\\vdash\n\\lnot \\varphi\\) or \\(\\vdash \\psi\\),\n\n\nwhere \\(\\Rel(\\alpha)\\) is the set of relational symbols in \\(\\alpha\\).\nThe intuition behind is as follows: during the process of proving the\nconditional formula \\(\\varphi \\rightarrow \\psi\\), we make use of what\nis today known as an \u201cinterpolant\u201d, \\(\\theta\\), a kind of\nsyllogism middle term that finally disappears.\n\nThe theorem cannot be established for many-sorted logic by simply\ntranslating \\(\\varphi\\) and \\(\\psi\\) to the corresponding formulas of\na one-sorted language. It is easy to see that the logical form of a\nconstructed interpolant for \\(\\vdash \\Trans(\\varphi )\\rightarrow\n\\Trans(\\psi )\\) is not necessarily equivalent to a translation of a\nmany-sorted formula. This is why we said that this result could not be\nstraightforwardly transferred from the one-sorted case (see Otto 2000\nfor more details).\n\nAs in one-sorted logic, the interpolation lemma for a many-sorted\nlogic can be proven in model-theoretic style (as in Kreisel &\nKrivine 1967) or in proof-theoretical style, as in\n Feferman.[32]\n\nFeferman\u2019s proof of interpolation is obtained directly as a\ncorollary of one of his theorems for sequents (see Feferman 1968:\n56\u201362; Theorem 4.3) and its applications are model-theoretical,\nwhat reveals again the peculiar centrality of interpolation.\n6.3 Interpretability and Theoretical Equivalence\n\nAnother notion not immediately transferable from FOL to MSL is that of\ninterpretability. Interpretability is a good criterion for\nfixing a comparison between theories \\(T\\) and \\(T^{\\prime }\\), for it\nis characterized either in terms of \u201cuniform definability of\nmodels\u201d or of \u201cthe existence of an interpretation map\nwhich preserves logical form and provability\u201d (Mceldowney 2020:\n15). It is also helpful for proving consistency, as \\(T^{\\prime }\\) is\nproved to be consistent when interpreted in a consistent \\(T\\).\nHowever, interpretability between theories of a many-sorted signature\ndoes not guarantee interpretability between their (one-sorted)\ntranslations.\n\nMceldowney (2020) argues that the concept of bi-interpretability is\nthe best measure of theoretical equivalence in MSL. The oldest\ncriterion for theoretical equivalence between first-order theories\nwith the same signature is the notion of definitional\nequivalence (see Eilenberg & Mac Lane 1942, 1945 and Glymour\n1971). Therefore, the necessity of a many-sorted counterpart was\napparent. As a result, a debate on the nature of equivalence in MSL\nhas taken place since 2016. Barrett and Halvorson (2016) generalizes\nthe idea of definitional extension to the concept of Morita\nextension: intuitively, \\(T^+\\) is a Morita extension of \\(T\\)\niff both \\(T\\) and \\(T^+\\) are MSL theories and \\(T^+\\) \u201csays no\nmore\u201d than the original theory (see 2016: 565 for formal\ndetails).\n\nThus, they claim that theoretical equivalence in MSL is to have a\ncommon Morita extension (this is called \u201cMorita\nequivalence\u201d). It is worth recalling at this point that the\nMorita extension \\(T^{+}\\) of \\(T\\) might be constructed by adding new\nsort symbols to the signature of \\(T\\) together with the corresponding\nexplicit\n definitions[33]\n to the axioms. There are several ways to carry out this extension:\nthe new sort \\(\\tau\\) can be introduced as a subsort,\nproduct, coproduct and quotient sort (see\nBarrett & Halvorson 2016: 563\u201364). Morita equivalence has\nalso been used to try to clarify what is known in the literature as\nQuine\u2019s conjecture on many-sorted logic (see Barrett &\nHalvorson 2017).\n\nNevertheless, according to Mceldowney (2020), a nuanced concept of\nMorita equivalence is just a special case of bi-interpretability. For\nthis reason, he opted for a notion of equivalence in MSL based on\ninterpretability rather than Morita extensions (see pp. 404-407 in\nMceldowney 2020). In fact, as pointed out in Friedman and Visser\n(2014), bi-interpretability preserves finite axiomatizability,\ndecidability, and \u03ba-categoricity.\n6.4 Extension of Many-sorted Logic to Sort Logic\n\nApart from its reduction to one-sorted logic, many-sorted first-order\nlogic can be extended. Sort logic is a many-sorted\nsecond-order logic in which it is allowed to quantify over new sorts,\n\u201clooking outside\u201d the structure where the formula is being\ninterpreted. Then, besides adding sorts to a second-order logic, we\nmay include a new logical symbol \\(\\widetilde{\\exists }\\) to quantify\nover new sorts.\n\nIn Sort logic, well-formed formulas involving\n\\(\\widetilde{\\exists }\\) must respect a New Sort Condition\n(V\u00e4\u00e4n\u00e4nen 2014: 175) to guarantee that the domains\nwhere free variables in \\(\\varphi\\) are interpreted do not interfere\nwith the scope of the quantifier \\(\\widetilde{\\exists}\\). The only\nnovelty concerns interpretation of formulas with the new\nquantifier,\n\n\n\\(\\mathcal{M},s\\models \\widetilde{\\exists }X\\varphi\\) if and only if\n\\(\\mathcal{M}^{\\prime },s(\\mathbf{X}/X)\\models \\varphi\\) for some\nX-expansion \\(\\mathcal{M}^{\\prime }\\) of \\(\\mathcal{M}\\) and\nsome \\(\\mathbf{X}\\in \\wp (\\mathbf{M}_{i_{1}}^{\\prime }\\times \\ldots\n\\times \\mathbf{M}_{i_{r}}^{\\prime })\\) (where variable \\(X\\) is of\nsort \\(\\langle i_{1},\\ldots ,i_{r},0\\rangle)\\)\n\n\nIn this definition, model \\(\\mathcal{M}^{\\prime }\\) is considered an\nX-expansion of \\(\\mathcal{M}\\) iff it includes as many new\nuniverses (\\(\\mathbf{M}_{i_{1}}^{\\prime },\\ldots\n,\\mathbf{M}_{i_{r}}^{\\prime }\\)) as the sorts of \\(X\\) requires.\nMoreover, the restriction of \\(\\mathcal{M}^{\\prime }\\) to the old ones\nis \\(\\mathcal{M}\\).\n\nFor instance, the formula \n\\[\\widetilde{\\exists }X\\,\\forall x\\,\\forall y(Xxy\\land Xyx\\rightarrow x=y)\\]\n\n\nsays that there exists a new sort with a new anti-symmetric relation;\nsomehow we are saying that anti-symmetry is a consistent concept as it\ncan be exemplified.\n\nAn axiomatic calculus for sort logic was introduced in\nV\u00e4\u00e4n\u00e4nen (2014), as an extension of the second-order\ncase. For this reason, he incorporated a second Comprehension\nAxiom related to \\(\\widetilde{\\exists}\\) together with some\nrestrictions concerning the rules of proof when formulas with the new\nquantifier \\(\\widetilde{\\exists }\\) are involved (see 2014:\n176\u2013177).\n\nAs it occurs in every higher-order logic, completeness and compactness\nfail for sort logic with standard semantics. Fortunately, it is\npossible to build a Henkin structure satisfying both\nComprehension axioms and to move to general semantics. Changing\nsemantics in this way results in the recovery of completeness for the\nmentioned calculus, as V\u00e4\u00e4n\u00e4nen (2014: 179\u201380)\nhas remarked. The proof found its inspiration in that of\nHenkin\u2019s (1950) for type theory.\n\nV\u00e4\u00e4n\u00e4nen (2014: 181) applied sort logic to Foundations\nof Mathematics. He proposed the notion of truth in a structure\n\\(\\mathcal{A}\\) characterizable in sort logic, making a new\ndistinction between general truth \\(\\models \\varphi\\) and specific\ntruth in those structures. Whenever general truth is reduced to\nspecific truth, we can use the calculus to prove the satisfiability of\na formula. Under certain constraints, any class of structures closed\nunder isomorphism is definable in sort logic (see Kennedy &\nV\u00e4\u00e4n\u00e4nen 2021, Theorem 19). Thus,\nV\u00e4\u00e4n\u00e4nen argues that sort logic is an\n\u201calternative way of looking at mathematics\u201d, where, unlike\nset theory, \u201cdefinition rather than construction is the\nfocus\u201d (2014: 185). It is also an interesting tool for studying\nLogicality and model classes (Kennedy &\nV\u00e4\u00e4n\u00e4nen 2021).\n",
    "bibliography": {
        "categories": [],
        "cat_ref_text": {
            "ref_list": [
                "Abadi, Aharon, Alexander Rabinovich, and Mooly Sagiv, 2007,\n\u201cDecidable Fragments of Many-Sorted Logic\u201d, in <em>Logic\nfor Programming, Artificial Intelligence, and Reasoning</em>, Nachum\nDershowitz and Andrei Voronkov (eds.), (Lecture Notes in Computer\nScience 4790), Berlin, Heidelberg: Springer Berlin Heidelberg,\n17\u201331. doi:10.1007/978-3-540-75560-9_4",
                "Andr\u00e9ka, Hajnal, Istv\u00e1n N\u00e9meti, and Johan van\nBenthem, 1998, \u201cModal Languages and Bounded Fragments of\nPredicate Logic\u201d, <em>Journal of Philosophical Logic</em>,\n27(3): 217\u2013274. doi:10.1023/A:1004275029985",
                "Andr\u00e9ka, Hajnal, Johan van Benthem, Nick Bezhanishvili, and\nIstv\u00e1n N\u00e9meti, 2014, \u201cChanging a Semantics:\nOpportunism or Courage?\u201d, in Manzano, Sain, and Alonso 2014:\n307\u2013337. doi:10.1007/978-3-319-09719-0_20",
                "Aranda, V\u00edctor, 2022, \u201cCompleteness: From Husserl to\nCarnap\u201d, <em>Logica Universalis</em>, 16(1\u20132):\n57\u201383. doi:10.1007/s11787-021-00283-4",
                "Barrett, Thomas William and Hans Halvorson, 2016, \u201cMorita\nEquivalence\u201d, <em>The Review of Symbolic Logic</em>, 9(3):\n556\u2013582. doi:10.1017/S1755020316000186",
                "\u2013\u2013\u2013, 2017, \u201cQuine\u2019s Conjecture on\nMany-Sorted Logic\u201d, <em>Synthese</em>, 194(9): 3563\u20133582.\ndoi:10.1007/s11229-016-1107-z",
                "Blackburn, Patrick and Johan van Benthem, 2007, \u201cModal\nLogic: A Semantic Perspective\u201d, in Blackburn, van Benthem, and\nWolter 2007: 1\u201384. doi:10.1016/S1570-2464(07)80004-8",
                "Blackburn, Patrick, Johan van Benthem, and Frank Wolter (eds.),\n2007, <em>Handbook of Modal Logic</em>, (Studies in Logic and\nPractical Reasoning 3), Amsterdam/Boston: Elsevier.\n [<a href=\"https://www.csc.liv.ac.uk/~frank/MLHandbook/\" target=\"other\">Blackburn, van Benthem, and Wolter 2007 available online</a>]",
                "van Benthem, Johan, 1983, <em>Modal Logic and Classical\nLogic</em>, (Indices 3), Napoli: Bibliopolis.",
                "\u2013\u2013\u2013, 1984a, \u201cCorrespondence Theory\u201d,\nin <em>Handbook of Philosophical Logic</em>, D. Gabbay and F.\nGuenthner (eds.), Dordrecht: Springer Netherlands, 167\u2013247.\ndoi:10.1007/978-94-009-6259-0_4",
                "\u2013\u2013\u2013, 1984b, \u201cReview: B. J. Copeland. On\nWhen a Semantics Is Not a Semantics: Some Reasons for Disliking the\nRoutley\u2013Semantics for Relevance Logic. <em>Journal of\nPhilosophical Logic</em>, Vol. 8 (1979), pp. 399\u2013413\u201d,\n<em>Journal of Symbolic Logic</em>, 49(3): 994\u2013995.\ndoi:10.2307/2274161",
                "\u2013\u2013\u2013, 2010, <em>Modal Logic for Open Minds</em>,\n(CSLI Lecture Notes 199), Stanford, CA: CSLI Publications.",
                "Carnielli, Walter A., Marcelo E. Coniglio, and Itala M. L.\nD\u2019Ottaviano, 2009, \u201cNew Dimensions on Translations Between\nLogics\u201d, <em>Logica Universalis</em>, 3(1): 1\u201318.\ndoi:10.1007/s11787-009-0002-5",
                "Church, Alonzo, 1956, <em>Introduction to Mathematical Logic,\nVolume 1</em>, (Princeton Mathematical Series 17), Princeton, NJ:\nPrinceton University Press. [Note: this was a new revised edition from\na 1944 edition published as an <em>Annals of Mathematics Studies</em>\nvolume (no. 13).]",
                "Craig, William, 1957a, \u201cLinear Reasoning. A New Form of the\nHerbrand-Gentzen Theorem\u201d, <em>Journal of Symbolic Logic</em>,\n22(3): 250\u2013268. doi:10.2307/2963593",
                "\u2013\u2013\u2013, 1957b, \u201cThree Uses of the\nHerbrand-Gentzen Theorem in Relating Model Theory and Proof\nTheory\u201d, <em>Journal of Symbolic Logic</em>, 22(3):\n269\u2013285. doi:10.2307/2963594",
                "da Silva, Jairo J., Itala Mar\u0131\u0301a L. D\u2019Ottaviano,\nand A. M. Sette, 1999, \u201cTranslations between Logics\u201d, in\n<em>Models, Algebras, and Proofs</em>, Xavier Caicedo and Carlos H.\nMontenegro (eds.), (Lecture Notes in Pure and Applied Mathematics\n203), New York: Marcel Dekker, 435\u2013448.",
                "D\u2019Ottaviano, Itala M. Loffredo and H\u00e9rcules de\nAra\u00fajo Feitosa, 2019, \u201cTranslations Between Logics: A\nSurvey\u201d, in <em>Philosophy of Logic and Mathematics: Proceedings\nof the 41st International Ludwig Wittgenstein Symposium</em>, Gabriele\nM. Mras, Paul Weingartner, and Bernhard Ritter (eds.), Boston/Berlin:\nDe Gruyter, 71\u201390. doi:10.1515/9783110657883-005",
                "Ebbinghaus, Heinz-Dieter, J\u00f6rg Flum, and Wolfgang Thomas,\n1984, <em>Mathematical Logic</em>, (Undergraduate Texts in\nMathematics), New York: Springer-Verlag.",
                "Eilenberg, Samuel and Saunders MacLane, 1942, \u201cGroup\nExtensions and Homology\u201d, <em>The Annals of Mathematics</em>,\n43(4): 757\u2013831. doi:10.2307/1968966",
                "\u2013\u2013\u2013, 1945, \u201cGeneral Theory of Natural\nEquivalences\u201d, <em>Transactions of the American Mathematical\nSociety</em>, 58(2): 231\u2013294.",
                "Enderton, Herbert B., 1972, <em>A Mathematical Introduction to\nLogic</em>, New York: Academic Press.",
                "Feferman, Solomon, 1968, \u201cLectures on Proof Theory\u201d,\nin <em>Proceedings of the Summer School in Logic Leeds, 1967</em>, M.\nH. L\u00f6b (ed.), (Lecture Notes in Mathematics 70),\nBerlin/Heidelberg: Springer Berlin Heidelberg, 1\u2013107.\ndoi:10.1007/BFb0079094",
                "\u2013\u2013\u2013, 1974, \u201cApplications of many-sorted\ninterpolation theorems\u201d, in <em>Proceedings of the Tarski\nSymposium</em>, L. Henkin, J. Addison, C. Chang, W. Craig, D. Scott\nand R. Vaught (eds.), (Proceedings of Symposia in Pure Mathematics,\n25), Providence, RI: AMS, pp. 205\u2013224.",
                "\u2013\u2013\u2013, 2008, \u201cHarmonious Logic:\nCraig\u2019s Interpolation Theorem and Its Descendants\u201d,\n<em>Synthese</em>, 164(3): 341\u2013357.\ndoi:10.1007/s11229-008-9354-2",
                "\u2013\u2013\u2013, 2016, \u201cMany-sorted first-order model\ntheory as a conceptual framework for biological and other complex\ndynamical systems\u201d, Keynote address to the <em>AMS/ASL session\non applications of Logic, Model Theory, and Theoretical Computer\nScience to System Biology</em>, Seattle, 9 January 2016.\n [<a href=\"http://math.stanford.edu/%7Efeferman/papers/Manysorted_logic_for_SB.pdf\" target=\"other\">Feferman 2016 draft available online</a>]",
                "Friedman, Harvey and Visser, Albert, 2014, \u201cWhen\nbi-interpretability implies synonymy\u201d, <em>Logic Group Preprint\nSeries</em>, 320: 1\u201319.",
                "Gabbay, Dov M. (ed.), 1994, <em>What Is a Logical System?</em>,\n(Studies in Logic and Computation 4), Oxford: Clarendon Press.",
                "\u2013\u2013\u2013, 1996, <em>Labelled Deductive Systems,\nVolume 1</em>, (Oxford Logic Guides 33), Oxford: Oxford University\nPress.",
                "Gilmore, Paul, 1958, \u201cAn addition to \u2018Logic of\nMany-Sorted Theories\u2019\u201d, <em>Compositio Mathematica</em>,\n13: 277\u2013281.",
                "Glymour, Clark, 1971, \u201cTheoretical Realism and Theoretical\nEquivalence\u201d, in <em>PSA: Proceedings of the Biennial Meeting of\nthe Philosophy of Science Association, 1970</em>, Roger C. Buck and\nRobert S. Cohen (eds.), (Boston Studies in the Philosophy of Science\n8), Dordrecht: Springer Netherlands, 275\u2013288.\ndoi:10.1007/978-94-010-3142-4_19",
                "G\u00f6del, Kurt, 1931, \u201c\u00dcber formal unentscheidbare\nS\u00e4tze der Principia Mathematica und verwandter Systeme I\u201d,\n<em>Monatshefte f\u00fcr Mathematik und Physik</em>, 38\u201338(1):\n173\u2013198. doi:10.1007/BF01700692",
                "Grzegorczyk, Andrzej, 1955, \u201cThe Systems of Le\u015bniewski\nin Relation to Contemporary Logical Research\u201d, <em>Studia\nLogica</em>, 3(1): 77\u201395. doi:10.1007/BF02067248",
                "Henkin, Leon, 1949, \u201cThe Completeness of the First-Order\nFunctional Calculus\u201d, <em>Journal of Symbolic Logic</em>, 14(3):\n159\u2013166. doi:10.2307/2267044",
                "\u2013\u2013\u2013, 1950, \u201cCompleteness in the Theory of\nTypes\u201d, <em>Journal of Symbolic Logic</em>, 15(2): 81\u201391.\ndoi:10.2307/2266967",
                "\u2013\u2013\u2013, 1953, \u201cBanishing the Rule of\nSubstitution for Functional Variables\u201d, <em>Journal of Symbolic\nLogic</em>, 18(3): 201\u2013208. doi:10.2307/2267403",
                "\u2013\u2013\u2013, 1963a, \u201cA Theory of Prepositional\nTypes\u201d, <em>Fundamenta Mathematicae</em>, 52(3): 323\u2013344.\ndoi:10.4064/fm-52-3-323-344",
                "\u2013\u2013\u2013, 1963b, \u201cAn Extension of the\nCraig-Lyndon Interpolation Theorem\u201d, <em>Journal of Symbolic\nLogic</em>, 28(3): 201\u2013216. doi:10.2307/2271066",
                "\u2013\u2013\u2013, 1996, \u201cThe Discovery of My\nCompleteness Proofs\u201d, <em>Bulletin of Symbolic Logic</em>, 2(2):\n127\u2013158. doi:10.2307/421107",
                "Herbrand, Jacques, 1930, <em>Recherches sur la th\u00e9orie de\nla d\u00e9monstration</em>, PhD thesis, University of Paris.",
                "Hodges, Wilfrid, 1986, \u201cTruth in a Structure\u201d,\n<em>Proceedings of the Aristotelian Society</em>, 86(1):\n135\u2013152. doi:10.1093/aristotelian/86.1.135",
                "\u2013\u2013\u2013, 1993, <em>Model Theory</em>, Cambridge/New\nYork: Cambridge University Press. doi:10.1017/CBO9780511551574",
                "\u2013\u2013\u2013, 1998, \u201cThe Laws of Distribution for\nSyllogisms\u201d, <em>Notre Dame Journal of Formal Logic</em>, 39(2):\n221\u2013230. doi:10.1305/ndjfl/1039293064",
                "Hook, Julian L., 1985, \u201cA Note on Interpretations of\nMany-Sorted Theories\u201d, <em>Journal of Symbolic Logic</em>,\n50(2): 372\u2013374. doi:10.2307/2274223",
                "Kennedy, Juliette and V\u00e4\u00e4n\u00e4nen, Jouko, 2021,\n\u201cLogicality and Model Classes\u201d, <em>The Bulletin of\nSymbolic Logic</em>, 27(4): 385\u2013414.\ndoi:10.1017/bsl.2021.42",
                "Kreisel, Georg and J. L. Krivine, 1967, <em>\u00c9l\u00e9ments\nde logique math\u00e9matique, th\u00e9orie des\nmod\u00e8les</em> (Monographies de la Soci\u00e9t\u00e9\nmath\u00e9matique de France 3), Paris: Dunod; translated as\n<em>Elements of Mathematical Logic: Model Theory</em> (Studies in\nLogic and the Foundations of Mathematics), Amsterdam: North Holland,\n1967.",
                "Langford, C. H., 1939, \u201cReview: Arnold Schmidt.\n\u2018\u00dcber deduktive Theorien mit mehreren Sorten von\nGrunddingen\u2019, <em>Mathematische Annalen</em>, 115. 4\n(1938), pp. 485\u2013506\u201d, <em>Journal of Symbolic Logic</em>,\n4(2): 98\u201398. doi:10.2307/2269080",
                "Liezi, (\u5217\u5b50, <em>El libro de la perfecta\nvacuidad</em>), Barcelona: Kairos, 1982. Translated directly from\nChinese by I\u00f1aki Preciado. Example translated to English for\nthis Entry by Ulises Tind\u00f3n.",
                "Lindstr\u00f6m, Per, 1969, \u201cOn Extensions of Elementary\nLogic\u201d, <em>Theoria</em>, 35(1): 1\u201311.\ndoi:10.1111/j.1755-2567.1969.tb00356.x",
                "Lyndon, Roger C., 1959, \u201cAn Interpolation Theorem in the\nPredicate Calculus\u201d, <em>Pacific Journal of Mathematics</em>,\n9(1): 129\u2013142.",
                "Manzano, Mar\u00eda, 1989 [1999], <em>Teor\u00eda de\nmodelos</em>, Madrid: Alianza Editorial. Translated as <em>Model\nTheory</em>, Ruy J. G. B. de Queiroz (trans.), (Oxford Logic Guides\n37), Oxford/New York: Clarendon Press\u202f; Oxford University Press,\n1999.",
                "\u2013\u2013\u2013, 1993, \u201cIntroduction to Many-sorted\nlogic\u201d, Meinke and Tucker 1993: 3\u201386.",
                "\u2013\u2013\u2013, 1996, <em>Extensions of First Order\nLogic</em>, (Cambridge Tracts in Theoretical Computer Science 19),\nCambridge/New York: Cambridge University Press.",
                "\u2013\u2013\u2013, 2014a, \u201cApril the 19th\u201d, in\nManzano, Sain, and Alonso 2014: 265\u2013278.\ndoi:10.1007/978-3-319-09719-0_18",
                "\u2013\u2013\u2013, 2014b, \u201cHenkin on\nCompleteness\u201d, in Manzano, Sain, and Alonso 2014: 149\u2013175.\ndoi:10.1007/978-3-319-09719-0_12",
                "Manzano, Maria and Enrique Alonso, 2014, \u201cCompleteness: From\nG\u00f6del to Henkin\u201d, <em>History and Philosophy of Logic</em>,\n35(1): 50\u201375. doi:10.1080/01445340.2013.816555",
                "Manzano, Mar\u00eda, Ildik\u00f3 Sain, and Enrique Alonso\n(eds.), 2014, <em>The Life and Work of Leon Henkin</em>, (Studies in\nUniversal Logic), Cham: Springer International Publishing.\ndoi:10.1007/978-3-319-09719-0",
                "Mart\u00ed-Oliet, Narciso and Jos\u00e9 Meseguer, 1994,\n\u201cGeneral Logics and Logical Frameworks\u201d, in <em>What Is a\nLogical System?</em>, Dov M. Gabbay (ed.), Oxford: Clarendon Press,\n355\u2013391.",
                "Mceldowney, Paul Anh, 2020, \u201cOn Morita Equivalence and\nInterpretability\u201d, <em>The Review of Symbolic Logic</em>, 13(2):\n388\u2013415. doi:10.1017/S1755020319000303",
                "Meinke, Karl and John Tucker (eds.), 1993, <em>Many-Sorted Logic\nand Its Applications</em>, (Wiley Professional Computing),\nChichester/New York: Wiley.",
                "Meseguer, Jos\u00e9, 1989, \u201cGeneral Logics\u201d, in\n<em>Logic Colloquium\u201987: Proceedings of the Colloquium Held in\nGranada</em>, H.-D. Ebbinghaus, J. Fernandez-Prida, M. Garrido, D.\nLascar, and M. Rodriquez Artalejo (eds.), (Studies in Logic and the\nFoundations of Mathematics 129), Amsterdam: North-Holland,\n275\u2013329. doi:10.1016/S0049-237X(08)70132-0",
                "Otto, Martin, 2000, \u201cAn Interpolation Theorem\u201d,\n<em>Bulletin of Symbolic Logic</em>, 6(4): 447\u2013462.\ndoi:10.2307/420966",
                "Quine, Willard Van Orman, 1940, <em>Mathematical Logic</em>, New\nYork: W. W. Norton &amp; Company.",
                "Schmidt, Arnold, 1938, \u201c\u00dcber deduktive Theorien mit\nmehreren Sorten von Grunddingen\u201d, <em>Mathematische\nAnnalen</em>, 115(4): 485\u2013506. doi:10.1007/BF01448954",
                "Tarski, Alfred, 1933 [1983], <em>Poj\u0119cie prawdy w\nj\u0119zykach nauk dedukcyjnych</em>, (Prace Towarzystwa Naukowego\nWarszawskiego, Wydzial III Nauk Matematyczno-Fizycznych, 34), Warsaw:\nNak\u0142adem Towarzystwa Naukowego Warszawskiego. Translated as\n\u201cThe Concept of Truth in Formalized Languages\u201d, J.H.\nWoodger (trans.), in <em>Logic, Semantics, Metamathematics</em>,\nsecond edition, J. Corcoran (ed.), Indianapolis, IN: Hackett, 1983,\n152\u2013278.",
                "Tarski, Alfred and Robert Lawson Vaught, 1956, \u201cArithmetical\nExtensions of Relational Systems\u201d, <em>Compositio\nMathematica</em>, 13: 81\u2013102.",
                "V\u00e4\u00e4n\u00e4nen, Jouko, 1979, \u201cAbstract Logic and\nSet Theory. I. Definability\u201d, in <em>Logic Colloquium \u201978:\nProceedings of the Colloquium Held in Mons</em>, Maurice Boffa,\nDirkvan Dalen, and Kenneth Mcaloon (eds.), (Studies in Logic and the\nFoundations of Mathematics 97), Amsterdam: Elsevier, 391\u2013421.\ndoi:10.1016/S0049-237X(08)71637-9",
                "\u2013\u2013\u2013, 1982, \u201cAbstract Logic and Set Theory.\nII. Large Cardinals\u201d, <em>Journal of Symbolic Logic</em>, 47(2):\n335\u2013346. doi:10.2307/2273145",
                "\u2013\u2013\u2013, 2014, \u201cSort Logic and Foundations of\nMathematics\u201d, in <em>Infinity and Truth</em>, by Chitat Chong,\nQi Feng, Theodore A Slaman, and W Hugh Woodin, (Lecture Notes Series,\nInstitute for Mathematical Sciences, National University of Singapore\n25), Singapore: World Scientific, 171\u2013186.\ndoi:10.1142/9789814571043_0005",
                "Wang, Hao, 1952, \u201cLogic of Many-Sorted Theories\u201d,\n<em>Journal of Symbolic Logic</em>, 17(2): 105\u2013116.\ndoi:10.2307/2266241"
            ]
        },
        "raw_text": "<div id=\"bibliography\">\n<h2 id=\"Bib\">Bibliography</h2>\n<ul class=\"hanging\">\n<li>Abadi, Aharon, Alexander Rabinovich, and Mooly Sagiv, 2007,\n\u201cDecidable Fragments of Many-Sorted Logic\u201d, in <em>Logic\nfor Programming, Artificial Intelligence, and Reasoning</em>, Nachum\nDershowitz and Andrei Voronkov (eds.), (Lecture Notes in Computer\nScience 4790), Berlin, Heidelberg: Springer Berlin Heidelberg,\n17\u201331. doi:10.1007/978-3-540-75560-9_4</li>\n<li>Andr\u00e9ka, Hajnal, Istv\u00e1n N\u00e9meti, and Johan van\nBenthem, 1998, \u201cModal Languages and Bounded Fragments of\nPredicate Logic\u201d, <em>Journal of Philosophical Logic</em>,\n27(3): 217\u2013274. doi:10.1023/A:1004275029985</li>\n<li>Andr\u00e9ka, Hajnal, Johan van Benthem, Nick Bezhanishvili, and\nIstv\u00e1n N\u00e9meti, 2014, \u201cChanging a Semantics:\nOpportunism or Courage?\u201d, in Manzano, Sain, and Alonso 2014:\n307\u2013337. doi:10.1007/978-3-319-09719-0_20</li>\n<li>Aranda, V\u00edctor, 2022, \u201cCompleteness: From Husserl to\nCarnap\u201d, <em>Logica Universalis</em>, 16(1\u20132):\n57\u201383. doi:10.1007/s11787-021-00283-4</li>\n<li>Barrett, Thomas William and Hans Halvorson, 2016, \u201cMorita\nEquivalence\u201d, <em>The Review of Symbolic Logic</em>, 9(3):\n556\u2013582. doi:10.1017/S1755020316000186</li>\n<li>\u2013\u2013\u2013, 2017, \u201cQuine\u2019s Conjecture on\nMany-Sorted Logic\u201d, <em>Synthese</em>, 194(9): 3563\u20133582.\ndoi:10.1007/s11229-016-1107-z</li>\n<li>Blackburn, Patrick and Johan van Benthem, 2007, \u201cModal\nLogic: A Semantic Perspective\u201d, in Blackburn, van Benthem, and\nWolter 2007: 1\u201384. doi:10.1016/S1570-2464(07)80004-8</li>\n<li>Blackburn, Patrick, Johan van Benthem, and Frank Wolter (eds.),\n2007, <em>Handbook of Modal Logic</em>, (Studies in Logic and\nPractical Reasoning 3), Amsterdam/Boston: Elsevier.\n [<a href=\"https://www.csc.liv.ac.uk/~frank/MLHandbook/\" target=\"other\">Blackburn, van Benthem, and Wolter 2007 available online</a>]</li>\n<li>van Benthem, Johan, 1983, <em>Modal Logic and Classical\nLogic</em>, (Indices 3), Napoli: Bibliopolis.</li>\n<li>\u2013\u2013\u2013, 1984a, \u201cCorrespondence Theory\u201d,\nin <em>Handbook of Philosophical Logic</em>, D. Gabbay and F.\nGuenthner (eds.), Dordrecht: Springer Netherlands, 167\u2013247.\ndoi:10.1007/978-94-009-6259-0_4</li>\n<li>\u2013\u2013\u2013, 1984b, \u201cReview: B. J. Copeland. On\nWhen a Semantics Is Not a Semantics: Some Reasons for Disliking the\nRoutley\u2013Semantics for Relevance Logic. <em>Journal of\nPhilosophical Logic</em>, Vol. 8 (1979), pp. 399\u2013413\u201d,\n<em>Journal of Symbolic Logic</em>, 49(3): 994\u2013995.\ndoi:10.2307/2274161</li>\n<li>\u2013\u2013\u2013, 2010, <em>Modal Logic for Open Minds</em>,\n(CSLI Lecture Notes 199), Stanford, CA: CSLI Publications.</li>\n<li>Carnielli, Walter A., Marcelo E. Coniglio, and Itala M. L.\nD\u2019Ottaviano, 2009, \u201cNew Dimensions on Translations Between\nLogics\u201d, <em>Logica Universalis</em>, 3(1): 1\u201318.\ndoi:10.1007/s11787-009-0002-5</li>\n<li>Church, Alonzo, 1956, <em>Introduction to Mathematical Logic,\nVolume 1</em>, (Princeton Mathematical Series 17), Princeton, NJ:\nPrinceton University Press. [Note: this was a new revised edition from\na 1944 edition published as an <em>Annals of Mathematics Studies</em>\nvolume (no. 13).]</li>\n<li>Craig, William, 1957a, \u201cLinear Reasoning. A New Form of the\nHerbrand-Gentzen Theorem\u201d, <em>Journal of Symbolic Logic</em>,\n22(3): 250\u2013268. doi:10.2307/2963593</li>\n<li>\u2013\u2013\u2013, 1957b, \u201cThree Uses of the\nHerbrand-Gentzen Theorem in Relating Model Theory and Proof\nTheory\u201d, <em>Journal of Symbolic Logic</em>, 22(3):\n269\u2013285. doi:10.2307/2963594</li>\n<li>da Silva, Jairo J., Itala Mar\u0131\u0301a L. D\u2019Ottaviano,\nand A. M. Sette, 1999, \u201cTranslations between Logics\u201d, in\n<em>Models, Algebras, and Proofs</em>, Xavier Caicedo and Carlos H.\nMontenegro (eds.), (Lecture Notes in Pure and Applied Mathematics\n203), New York: Marcel Dekker, 435\u2013448.</li>\n<li>D\u2019Ottaviano, Itala M. Loffredo and H\u00e9rcules de\nAra\u00fajo Feitosa, 2019, \u201cTranslations Between Logics: A\nSurvey\u201d, in <em>Philosophy of Logic and Mathematics: Proceedings\nof the 41st International Ludwig Wittgenstein Symposium</em>, Gabriele\nM. Mras, Paul Weingartner, and Bernhard Ritter (eds.), Boston/Berlin:\nDe Gruyter, 71\u201390. doi:10.1515/9783110657883-005</li>\n<li>Ebbinghaus, Heinz-Dieter, J\u00f6rg Flum, and Wolfgang Thomas,\n1984, <em>Mathematical Logic</em>, (Undergraduate Texts in\nMathematics), New York: Springer-Verlag.</li>\n<li>Eilenberg, Samuel and Saunders MacLane, 1942, \u201cGroup\nExtensions and Homology\u201d, <em>The Annals of Mathematics</em>,\n43(4): 757\u2013831. doi:10.2307/1968966</li>\n<li>\u2013\u2013\u2013, 1945, \u201cGeneral Theory of Natural\nEquivalences\u201d, <em>Transactions of the American Mathematical\nSociety</em>, 58(2): 231\u2013294.</li>\n<li>Enderton, Herbert B., 1972, <em>A Mathematical Introduction to\nLogic</em>, New York: Academic Press.</li>\n<li>Feferman, Solomon, 1968, \u201cLectures on Proof Theory\u201d,\nin <em>Proceedings of the Summer School in Logic Leeds, 1967</em>, M.\nH. L\u00f6b (ed.), (Lecture Notes in Mathematics 70),\nBerlin/Heidelberg: Springer Berlin Heidelberg, 1\u2013107.\ndoi:10.1007/BFb0079094</li>\n<li>\u2013\u2013\u2013, 1974, \u201cApplications of many-sorted\ninterpolation theorems\u201d, in <em>Proceedings of the Tarski\nSymposium</em>, L. Henkin, J. Addison, C. Chang, W. Craig, D. Scott\nand R. Vaught (eds.), (Proceedings of Symposia in Pure Mathematics,\n25), Providence, RI: AMS, pp. 205\u2013224.</li>\n<li>\u2013\u2013\u2013, 2008, \u201cHarmonious Logic:\nCraig\u2019s Interpolation Theorem and Its Descendants\u201d,\n<em>Synthese</em>, 164(3): 341\u2013357.\ndoi:10.1007/s11229-008-9354-2</li>\n<li>\u2013\u2013\u2013, 2016, \u201cMany-sorted first-order model\ntheory as a conceptual framework for biological and other complex\ndynamical systems\u201d, Keynote address to the <em>AMS/ASL session\non applications of Logic, Model Theory, and Theoretical Computer\nScience to System Biology</em>, Seattle, 9 January 2016.\n [<a href=\"http://math.stanford.edu/%7Efeferman/papers/Manysorted_logic_for_SB.pdf\" target=\"other\">Feferman 2016 draft available online</a>]</li>\n<li>Friedman, Harvey and Visser, Albert, 2014, \u201cWhen\nbi-interpretability implies synonymy\u201d, <em>Logic Group Preprint\nSeries</em>, 320: 1\u201319.</li>\n<li>Gabbay, Dov M. (ed.), 1994, <em>What Is a Logical System?</em>,\n(Studies in Logic and Computation 4), Oxford: Clarendon Press.</li>\n<li>\u2013\u2013\u2013, 1996, <em>Labelled Deductive Systems,\nVolume 1</em>, (Oxford Logic Guides 33), Oxford: Oxford University\nPress.</li>\n<li>Gilmore, Paul, 1958, \u201cAn addition to \u2018Logic of\nMany-Sorted Theories\u2019\u201d, <em>Compositio Mathematica</em>,\n13: 277\u2013281.</li>\n<li>Glymour, Clark, 1971, \u201cTheoretical Realism and Theoretical\nEquivalence\u201d, in <em>PSA: Proceedings of the Biennial Meeting of\nthe Philosophy of Science Association, 1970</em>, Roger C. Buck and\nRobert S. Cohen (eds.), (Boston Studies in the Philosophy of Science\n8), Dordrecht: Springer Netherlands, 275\u2013288.\ndoi:10.1007/978-94-010-3142-4_19</li>\n<li>G\u00f6del, Kurt, 1931, \u201c\u00dcber formal unentscheidbare\nS\u00e4tze der Principia Mathematica und verwandter Systeme I\u201d,\n<em>Monatshefte f\u00fcr Mathematik und Physik</em>, 38\u201338(1):\n173\u2013198. doi:10.1007/BF01700692</li>\n<li>Grzegorczyk, Andrzej, 1955, \u201cThe Systems of Le\u015bniewski\nin Relation to Contemporary Logical Research\u201d, <em>Studia\nLogica</em>, 3(1): 77\u201395. doi:10.1007/BF02067248</li>\n<li>Henkin, Leon, 1949, \u201cThe Completeness of the First-Order\nFunctional Calculus\u201d, <em>Journal of Symbolic Logic</em>, 14(3):\n159\u2013166. doi:10.2307/2267044</li>\n<li>\u2013\u2013\u2013, 1950, \u201cCompleteness in the Theory of\nTypes\u201d, <em>Journal of Symbolic Logic</em>, 15(2): 81\u201391.\ndoi:10.2307/2266967</li>\n<li>\u2013\u2013\u2013, 1953, \u201cBanishing the Rule of\nSubstitution for Functional Variables\u201d, <em>Journal of Symbolic\nLogic</em>, 18(3): 201\u2013208. doi:10.2307/2267403</li>\n<li>\u2013\u2013\u2013, 1963a, \u201cA Theory of Prepositional\nTypes\u201d, <em>Fundamenta Mathematicae</em>, 52(3): 323\u2013344.\ndoi:10.4064/fm-52-3-323-344</li>\n<li>\u2013\u2013\u2013, 1963b, \u201cAn Extension of the\nCraig-Lyndon Interpolation Theorem\u201d, <em>Journal of Symbolic\nLogic</em>, 28(3): 201\u2013216. doi:10.2307/2271066</li>\n<li>\u2013\u2013\u2013, 1996, \u201cThe Discovery of My\nCompleteness Proofs\u201d, <em>Bulletin of Symbolic Logic</em>, 2(2):\n127\u2013158. doi:10.2307/421107</li>\n<li>Herbrand, Jacques, 1930, <em>Recherches sur la th\u00e9orie de\nla d\u00e9monstration</em>, PhD thesis, University of Paris.</li>\n<li>Hodges, Wilfrid, 1986, \u201cTruth in a Structure\u201d,\n<em>Proceedings of the Aristotelian Society</em>, 86(1):\n135\u2013152. doi:10.1093/aristotelian/86.1.135</li>\n<li>\u2013\u2013\u2013, 1993, <em>Model Theory</em>, Cambridge/New\nYork: Cambridge University Press. doi:10.1017/CBO9780511551574</li>\n<li>\u2013\u2013\u2013, 1998, \u201cThe Laws of Distribution for\nSyllogisms\u201d, <em>Notre Dame Journal of Formal Logic</em>, 39(2):\n221\u2013230. doi:10.1305/ndjfl/1039293064</li>\n<li>Hook, Julian L., 1985, \u201cA Note on Interpretations of\nMany-Sorted Theories\u201d, <em>Journal of Symbolic Logic</em>,\n50(2): 372\u2013374. doi:10.2307/2274223</li>\n<li>Kennedy, Juliette and V\u00e4\u00e4n\u00e4nen, Jouko, 2021,\n\u201cLogicality and Model Classes\u201d, <em>The Bulletin of\nSymbolic Logic</em>, 27(4): 385\u2013414.\ndoi:10.1017/bsl.2021.42</li>\n<li>Kreisel, Georg and J. L. Krivine, 1967, <em>\u00c9l\u00e9ments\nde logique math\u00e9matique, th\u00e9orie des\nmod\u00e8les</em> (Monographies de la Soci\u00e9t\u00e9\nmath\u00e9matique de France 3), Paris: Dunod; translated as\n<em>Elements of Mathematical Logic: Model Theory</em> (Studies in\nLogic and the Foundations of Mathematics), Amsterdam: North Holland,\n1967.</li>\n<li>Langford, C. H., 1939, \u201cReview: Arnold Schmidt.\n\u2018\u00dcber deduktive Theorien mit mehreren Sorten von\nGrunddingen\u2019, <em>Mathematische Annalen</em>, 115. 4\n(1938), pp. 485\u2013506\u201d, <em>Journal of Symbolic Logic</em>,\n4(2): 98\u201398. doi:10.2307/2269080</li>\n<li>Liezi, (\u5217\u5b50, <em>El libro de la perfecta\nvacuidad</em>), Barcelona: Kairos, 1982. Translated directly from\nChinese by I\u00f1aki Preciado. Example translated to English for\nthis Entry by Ulises Tind\u00f3n.</li>\n<li>Lindstr\u00f6m, Per, 1969, \u201cOn Extensions of Elementary\nLogic\u201d, <em>Theoria</em>, 35(1): 1\u201311.\ndoi:10.1111/j.1755-2567.1969.tb00356.x</li>\n<li>Lyndon, Roger C., 1959, \u201cAn Interpolation Theorem in the\nPredicate Calculus\u201d, <em>Pacific Journal of Mathematics</em>,\n9(1): 129\u2013142.</li>\n<li>Manzano, Mar\u00eda, 1989 [1999], <em>Teor\u00eda de\nmodelos</em>, Madrid: Alianza Editorial. Translated as <em>Model\nTheory</em>, Ruy J. G. B. de Queiroz (trans.), (Oxford Logic Guides\n37), Oxford/New York: Clarendon Press\u202f; Oxford University Press,\n1999.</li>\n<li>\u2013\u2013\u2013, 1993, \u201cIntroduction to Many-sorted\nlogic\u201d, Meinke and Tucker 1993: 3\u201386.</li>\n<li>\u2013\u2013\u2013, 1996, <em>Extensions of First Order\nLogic</em>, (Cambridge Tracts in Theoretical Computer Science 19),\nCambridge/New York: Cambridge University Press.</li>\n<li>\u2013\u2013\u2013, 2014a, \u201cApril the 19th\u201d, in\nManzano, Sain, and Alonso 2014: 265\u2013278.\ndoi:10.1007/978-3-319-09719-0_18</li>\n<li>\u2013\u2013\u2013, 2014b, \u201cHenkin on\nCompleteness\u201d, in Manzano, Sain, and Alonso 2014: 149\u2013175.\ndoi:10.1007/978-3-319-09719-0_12</li>\n<li>Manzano, Maria and Enrique Alonso, 2014, \u201cCompleteness: From\nG\u00f6del to Henkin\u201d, <em>History and Philosophy of Logic</em>,\n35(1): 50\u201375. doi:10.1080/01445340.2013.816555</li>\n<li>Manzano, Mar\u00eda, Ildik\u00f3 Sain, and Enrique Alonso\n(eds.), 2014, <em>The Life and Work of Leon Henkin</em>, (Studies in\nUniversal Logic), Cham: Springer International Publishing.\ndoi:10.1007/978-3-319-09719-0</li>\n<li>Mart\u00ed-Oliet, Narciso and Jos\u00e9 Meseguer, 1994,\n\u201cGeneral Logics and Logical Frameworks\u201d, in <em>What Is a\nLogical System?</em>, Dov M. Gabbay (ed.), Oxford: Clarendon Press,\n355\u2013391.</li>\n<li>Mceldowney, Paul Anh, 2020, \u201cOn Morita Equivalence and\nInterpretability\u201d, <em>The Review of Symbolic Logic</em>, 13(2):\n388\u2013415. doi:10.1017/S1755020319000303</li>\n<li>Meinke, Karl and John Tucker (eds.), 1993, <em>Many-Sorted Logic\nand Its Applications</em>, (Wiley Professional Computing),\nChichester/New York: Wiley.</li>\n<li>Meseguer, Jos\u00e9, 1989, \u201cGeneral Logics\u201d, in\n<em>Logic Colloquium\u201987: Proceedings of the Colloquium Held in\nGranada</em>, H.-D. Ebbinghaus, J. Fernandez-Prida, M. Garrido, D.\nLascar, and M. Rodriquez Artalejo (eds.), (Studies in Logic and the\nFoundations of Mathematics 129), Amsterdam: North-Holland,\n275\u2013329. doi:10.1016/S0049-237X(08)70132-0</li>\n<li>Otto, Martin, 2000, \u201cAn Interpolation Theorem\u201d,\n<em>Bulletin of Symbolic Logic</em>, 6(4): 447\u2013462.\ndoi:10.2307/420966</li>\n<li>Quine, Willard Van Orman, 1940, <em>Mathematical Logic</em>, New\nYork: W. W. Norton &amp; Company.</li>\n<li>Schmidt, Arnold, 1938, \u201c\u00dcber deduktive Theorien mit\nmehreren Sorten von Grunddingen\u201d, <em>Mathematische\nAnnalen</em>, 115(4): 485\u2013506. doi:10.1007/BF01448954</li>\n<li>Tarski, Alfred, 1933 [1983], <em>Poj\u0119cie prawdy w\nj\u0119zykach nauk dedukcyjnych</em>, (Prace Towarzystwa Naukowego\nWarszawskiego, Wydzial III Nauk Matematyczno-Fizycznych, 34), Warsaw:\nNak\u0142adem Towarzystwa Naukowego Warszawskiego. Translated as\n\u201cThe Concept of Truth in Formalized Languages\u201d, J.H.\nWoodger (trans.), in <em>Logic, Semantics, Metamathematics</em>,\nsecond edition, J. Corcoran (ed.), Indianapolis, IN: Hackett, 1983,\n152\u2013278.</li>\n<li>Tarski, Alfred and Robert Lawson Vaught, 1956, \u201cArithmetical\nExtensions of Relational Systems\u201d, <em>Compositio\nMathematica</em>, 13: 81\u2013102.</li>\n<li>V\u00e4\u00e4n\u00e4nen, Jouko, 1979, \u201cAbstract Logic and\nSet Theory. I. Definability\u201d, in <em>Logic Colloquium \u201978:\nProceedings of the Colloquium Held in Mons</em>, Maurice Boffa,\nDirkvan Dalen, and Kenneth Mcaloon (eds.), (Studies in Logic and the\nFoundations of Mathematics 97), Amsterdam: Elsevier, 391\u2013421.\ndoi:10.1016/S0049-237X(08)71637-9</li>\n<li>\u2013\u2013\u2013, 1982, \u201cAbstract Logic and Set Theory.\nII. Large Cardinals\u201d, <em>Journal of Symbolic Logic</em>, 47(2):\n335\u2013346. doi:10.2307/2273145</li>\n<li>\u2013\u2013\u2013, 2014, \u201cSort Logic and Foundations of\nMathematics\u201d, in <em>Infinity and Truth</em>, by Chitat Chong,\nQi Feng, Theodore A Slaman, and W Hugh Woodin, (Lecture Notes Series,\nInstitute for Mathematical Sciences, National University of Singapore\n25), Singapore: World Scientific, 171\u2013186.\ndoi:10.1142/9789814571043_0005</li>\n<li>Wang, Hao, 1952, \u201cLogic of Many-Sorted Theories\u201d,\n<em>Journal of Symbolic Logic</em>, 17(2): 105\u2013116.\ndoi:10.2307/2266241</li>\n</ul>\n</div>"
    },
    "related_entries": {
        "entry_list": [
            "logic: classical",
            "logic: modal",
            "logic: propositional dynamic",
            "logic: second-order and higher-order",
            "model theory",
            "model theory: first-order",
            "reasoning: automated",
            "Tarski, Alfred: truth definitions",
            "type theory: Church\u2019s type theory"
        ],
        "entry_link": [
            {
                "../logic-classical/": "logic: classical"
            },
            {
                "../logic-modal/": "logic: modal"
            },
            {
                "../logic-dynamic/": "logic: propositional dynamic"
            },
            {
                "../logic-higher-order/": "logic: second-order and higher-order"
            },
            {
                "../model-theory/": "model theory"
            },
            {
                "../modeltheory-fo/": "model theory: first-order"
            },
            {
                "../reasoning-automated/": "reasoning: automated"
            },
            {
                "../tarski-truth/": "Tarski, Alfred: truth definitions"
            },
            {
                "../type-theory-church/": "type theory: Church\u2019s type theory"
            }
        ]
    },
    "academic_tools": {
        "listed_text": [
            "<img alt=\"sep man icon\" src=\"../../symbols/sepman-icon.jpg\"/>",
            "<a href=\"https://plato.stanford.edu/cgi-bin/encyclopedia/archinfo.cgi?entry=logic-many-sorted\" target=\"other\">How to cite this entry</a>.",
            "<img alt=\"sep man icon\" src=\"../../symbols/sepman-icon.jpg\"/>",
            "<a href=\"https://leibniz.stanford.edu/friends/preview/logic-many-sorted/\" target=\"other\">Preview the PDF version of this entry</a> at the\n <a href=\"https://leibniz.stanford.edu/friends/\" target=\"other\">Friends of the SEP Society</a>.",
            "<img alt=\"inpho icon\" src=\"../../symbols/inpho.png\"/>",
            "<a href=\"https://www.inphoproject.org/entity?sep=logic-many-sorted&amp;redirect=True\" target=\"other\">Look up topics and thinkers related to this entry</a>\n at the Internet Philosophy Ontology Project (InPhO).",
            "<img alt=\"phil papers icon\" src=\"../../symbols/pp.gif\"/>",
            "<a href=\"https://philpapers.org/sep/logic-many-sorted/\" target=\"other\">Enhanced bibliography for this entry</a>\nat <a href=\"https://philpapers.org/\" target=\"other\">PhilPapers</a>, with links to its database."
        ],
        "listed_links": [
            {
                "https://plato.stanford.edu/cgi-bin/encyclopedia/archinfo.cgi?entry=logic-many-sorted": "How to cite this entry"
            },
            {
                "https://leibniz.stanford.edu/friends/preview/logic-many-sorted/": "Preview the PDF version of this entry"
            },
            {
                "https://leibniz.stanford.edu/friends/": "Friends of the SEP Society"
            },
            {
                "https://www.inphoproject.org/entity?sep=logic-many-sorted&redirect=True": "Look up topics and thinkers related to this entry"
            },
            {
                "https://philpapers.org/sep/logic-many-sorted/": "Enhanced bibliography for this entry"
            },
            {
                "https://philpapers.org/": "PhilPapers"
            }
        ]
    },
    "other_internet_resources": {
        "listed_text": [],
        "listed_links": []
    }
}