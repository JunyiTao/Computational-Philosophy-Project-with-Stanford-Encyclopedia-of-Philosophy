{
    "main_text": "Computational Complexity: Functions Computable in Practice\n4. Computational Complexity: Functions Computable in Practice\n\n\nDuring World War II, Turing helped design and build a specialized\ncomputing device called the Bombe at Bletchley Park. He used the Bombe\nto crack the German \u201cEnigma\u201d code, greatly aiding the\nAllied cause [Hodges, 1992]. By the 1960\u2019s computers were widely\navailable in industry and at universities. As algorithms were\ndeveloped to solve myriad problems, some mathematicians and scientists\nbegan to classify algorithms according to their efficiency and to\nsearch for best algorithms for certain problems. This was the\nbeginning of the modern theory of computation.\n\n\nIn this section we are dealing with complexity instead of\ncomputability, and all the Turing machines that we consider will halt\non all their inputs. Rather than accepting by halting, we will assume\nthat a Turing machine accepts by outputting \u201c1\u201d and rejects by\noutputting \u201c0\u201d, thus we redefine the set accepted by a total machine,\n\\(M\\),\n\n\\[\nL(M) = \\{n \\mid M(n) = 1\\}.\n\\]\n\n\n\nThe time that an algorithm takes depends on the input and the\nmachine on which it is run. The first important insight in complexity\ntheory is that a good measure of the complexity of an algorithm is its\nasymptotic worst-case complexity as a function of the size of the\ninput, \\(n\\).\n\n\nFor an input, \\(w\\), let \\(n = \\lvert w\\rvert\\) be the length of\n\\(w\\). Following [Hartmanis, 1989] we say that a Turing machine\n\\(M\\) runs in time \\(T(n)\\) if for all \\(w\\) of length \\(n,\nM(w)\\) takes at most \\(T(n)\\) steps and then halts. This is called\nworst-case complexity because \\(T(n)\\) must be as large as the time\ntaken by any input of length \\(n\\).\n\n\nFor any function \\(T : \\mathbf{N} \\rightarrow \\mathbf{N}\\), let\n\n\\[\n\\TIME[T(n)] = \\{ A \\mid A = L(M) \\text{ for some }\n  M \\text{ that runs in time } T(n)\\}.\n\\]\n\n\n\nAlan Cobham and Jack Edmonds identified the complexity class, \\(\\P\\), of\nproblems recognizable in some polynomial amount of time, as being an\nexcellent mathematical wrapper of the class of feasible \nproblems\u2014those problems all of whose moderately-sized instances can be\nfeasibly recognized,\n\n\\[\n \\P = \\bigcup_{i=1,2,\\ldots} \\TIME[n^{i}]\n\\]\n\n\n\nAny problem not in \\(\\P\\) is certainly not feasible. On the other hand,\nnatural problems that have algorithms in \\(\\P\\), tend to eventually have\nalgorithms discovered for them that are actually feasible.\n\n\nMany important complexity classes besides P have been defined and\nstudied; a few of these are \\(\\NP\\), \\(\\PSPACE\\), and \\(\\EXPTIME\\).\n\\(\\PSPACE\\) consists of those problems solvable using some polynomial\namount of memory space. \\(\\EXPTIME\\) is the set of problems solvable in\ntime \\(2^{p(n)}\\) for some polynomial, \\(p\\).\n\n\nPerhaps the most interesting of the above classes is NP:\nnondeterministic polynomial time. The definition comes not from a real\nmachine, but rather a mathematical abstraction. A nondeterministic\nTuring machine, \\(N\\), makes a choice (guess) of one of two\npossible actions at each step. If, on input \\(w\\), some sequence\nof these choices leads to acceptance, then we say that\n\\(\\mathbf{N}\\) accepts \\(w\\), and we say the\nnondeterministic time taken by \\(\\mathbf{N}\\) on input\n\\(w\\), is just the number of steps taken in the sequence that\nleads to acceptance. A nondeterministic machine is not charged for all\nthe other possible choices it might have made, just the single sequence\nof correct choices.\n\n\nNP is sometimes described as the set of problems, \\(S\\), that\nhave short proofs of membership. For example, suppose we are given a\nlist of \\(m\\) large natural numbers: \\(a_{1},\n\\ldots ,a_{m}\\), and a target number,\n\\(t\\). This is an instance of the Subset Sum problem: is there a\nsubset of the \\(m\\) numbers whose sum is exactly \\(t\\)? This\nproblem is easy to solve in nondeterministic linear time: for each\n\\(i\\), we guess whether or not to take \\(a_{i}\\).\nNext we add up all the numbers we decided to take and if the sum is\nequal to \\(t\\) then accept. Thus the nondeterministic time is\nlinear, i.e., some constant times the length of the input, \\(n\\).\nHowever there is no known (deterministic) way to solve this problem in\ntime less than exponential in \\(n\\).\n",
    "section_title": "4. Computational Complexity: Functions Computable in Practice",
    "entry_title": "Computability and Complexity",
    "hierarchy_title": "Computability and Complexity || Computational Complexity: Functions Computable in Practice",
    "tokenized_text": [
        "computational",
        "complexity",
        "function",
        "computable",
        "practice",
        "computational",
        "complexity",
        "function",
        "computable",
        "practice",
        "world",
        "war",
        "ii",
        "turing",
        "helped",
        "design",
        "build",
        "specialized",
        "computing",
        "device",
        "called",
        "bombe",
        "bletchley",
        "park",
        "used",
        "bombe",
        "crack",
        "german",
        "enigma",
        "code",
        "greatly",
        "aiding",
        "allied",
        "cause",
        "hodges",
        "computer",
        "widely",
        "available",
        "industry",
        "university",
        "algorithm",
        "developed",
        "solve",
        "myriad",
        "problem",
        "mathematician",
        "scientist",
        "began",
        "classify",
        "algorithm",
        "according",
        "efficiency",
        "search",
        "best",
        "algorithm",
        "certain",
        "problem",
        "beginning",
        "modern",
        "theory",
        "computation",
        "section",
        "dealing",
        "complexity",
        "instead",
        "computability",
        "turing",
        "machine",
        "consider",
        "halt",
        "input",
        "rather",
        "accepting",
        "halting",
        "assume",
        "turing",
        "machine",
        "accepts",
        "outputting",
        "reject",
        "outputting",
        "thus",
        "redefine",
        "set",
        "accepted",
        "total",
        "machine",
        "m",
        "l",
        "n",
        "mid",
        "n",
        "time",
        "algorithm",
        "take",
        "depends",
        "input",
        "machine",
        "run",
        "first",
        "important",
        "insight",
        "complexity",
        "theory",
        "good",
        "measure",
        "complexity",
        "algorithm",
        "asymptotic",
        "worstcase",
        "complexity",
        "function",
        "size",
        "input",
        "n",
        "input",
        "w",
        "let",
        "n",
        "lvert",
        "wrvert",
        "length",
        "w",
        "following",
        "hartmanis",
        "say",
        "turing",
        "machine",
        "m",
        "run",
        "time",
        "n",
        "w",
        "length",
        "n",
        "w",
        "take",
        "n",
        "step",
        "halt",
        "called",
        "worstcase",
        "complexity",
        "n",
        "must",
        "large",
        "time",
        "taken",
        "input",
        "length",
        "n",
        "function",
        "mathbf",
        "n",
        "rightarrow",
        "mathbf",
        "n",
        "let",
        "time",
        "n",
        "mid",
        "l",
        "text",
        "text",
        "run",
        "time",
        "n",
        "alan",
        "cobham",
        "jack",
        "edmonds",
        "identified",
        "complexity",
        "class",
        "p",
        "problem",
        "recognizable",
        "polynomial",
        "amount",
        "time",
        "excellent",
        "mathematical",
        "wrapper",
        "class",
        "feasible",
        "problemsthose",
        "problem",
        "whose",
        "moderatelysized",
        "instance",
        "feasibly",
        "recognized",
        "p",
        "bigcup_",
        "i",
        "ldots",
        "time",
        "n",
        "problem",
        "p",
        "certainly",
        "feasible",
        "hand",
        "natural",
        "problem",
        "algorithm",
        "p",
        "tend",
        "eventually",
        "algorithm",
        "discovered",
        "actually",
        "feasible",
        "many",
        "important",
        "complexity",
        "class",
        "besides",
        "p",
        "defined",
        "studied",
        "np",
        "pspace",
        "exptime",
        "pspace",
        "consists",
        "problem",
        "solvable",
        "using",
        "polynomial",
        "amount",
        "memory",
        "space",
        "exptime",
        "set",
        "problem",
        "solvable",
        "time",
        "p",
        "n",
        "polynomial",
        "p",
        "perhaps",
        "interesting",
        "class",
        "np",
        "nondeterministic",
        "polynomial",
        "time",
        "definition",
        "come",
        "real",
        "machine",
        "rather",
        "mathematical",
        "abstraction",
        "nondeterministic",
        "turing",
        "machine",
        "n",
        "make",
        "choice",
        "guess",
        "one",
        "two",
        "possible",
        "action",
        "step",
        "input",
        "w",
        "sequence",
        "choice",
        "lead",
        "acceptance",
        "say",
        "mathbf",
        "n",
        "accepts",
        "w",
        "say",
        "nondeterministic",
        "time",
        "taken",
        "mathbf",
        "n",
        "input",
        "w",
        "number",
        "step",
        "taken",
        "sequence",
        "lead",
        "acceptance",
        "nondeterministic",
        "machine",
        "charged",
        "possible",
        "choice",
        "might",
        "made",
        "single",
        "sequence",
        "correct",
        "choice",
        "np",
        "sometimes",
        "described",
        "set",
        "problem",
        "s",
        "short",
        "proof",
        "membership",
        "example",
        "suppose",
        "given",
        "list",
        "m",
        "large",
        "natural",
        "number",
        "a_",
        "ldots",
        "a_",
        "target",
        "number",
        "t",
        "instance",
        "subset",
        "sum",
        "problem",
        "subset",
        "m",
        "number",
        "whose",
        "sum",
        "exactly",
        "t",
        "problem",
        "easy",
        "solve",
        "nondeterministic",
        "linear",
        "time",
        "i",
        "guess",
        "whether",
        "take",
        "a_",
        "next",
        "add",
        "number",
        "decided",
        "take",
        "sum",
        "equal",
        "t",
        "accept",
        "thus",
        "nondeterministic",
        "time",
        "linear",
        "ie",
        "constant",
        "time",
        "length",
        "input",
        "n",
        "however",
        "known",
        "deterministic",
        "way",
        "solve",
        "problem",
        "time",
        "le",
        "exponential",
        "n"
    ]
}