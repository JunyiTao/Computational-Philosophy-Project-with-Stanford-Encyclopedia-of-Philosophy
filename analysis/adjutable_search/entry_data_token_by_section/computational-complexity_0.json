{
    "main_text": "On computational complexity\n1. On computational complexity\nCentral to the development of computational complexity theory is the notion of a decision problem. Such a problem corresponds to a set \\(X\\) in which we wish to decide membership. For instance the problem \\(\\sc{PRIMES}\\) corresponds to the subset of the natural numbers which are prime \u2013 i.e. \\(\\{n \\in \\mathbb{N} \\mid n \\text{ is prime}\\}\\). Decision problems are typically specified in the form of questions about a class of mathematical objects whose positive instances determine the set in question \u2013 e.g.\n\\(\\sc{SAT}\\ \\) Given a formula \\(\\phi\\) of propositional logic, does there exist a satisfying assignment for \\(\\phi\\)?\n\\(\\sc{TRAVELING}\\ \\sc{SALESMAN}\\ (\\sc{TSP}) \\ \\) Given a list of cities \\(V\\), the integer distance \\(d(u,v)\\) between each pair of cities \\(u,v \\in V\\), and a budget  \\(b \\in \\mathbb{N}\\), is there a tour visiting each city exactly once and returning to the starting city of total distance \\(\\leq b\\)?\n\\(\\sc{INTEGER}\\ \\sc{PROGRAMMING}\\ \\) Given an \\(n \\times m\\) integer matrix \\(A\\) and an \\(n\\)-dimensional vector of integers \\(\\vec{b}\\), does there exist an \\(m\\)-dimensional vector \\(\\vec{x}\\) of integers such that \\(A \\vec{x} = b\\)?\n\\(\\sc{PERFECT} \\ \\sc{MATCHING}\\ \\) Given a finite bipartite graph \\(G \\), does there exist a perfect matching in \\(G \\)?  (\\(G\\) is bipartite just in case its vertices can be partitioned into two disjoints sets \\(U\\) and \\(V\\) such that all of its edges \\(E \\) connect a vertex in \\(U\\) to one in \\(V\\).   A matching is a subset of edges  \\(M \\subseteq E\\) no two members of which share a common vertex.  \\(M\\) is perfect if it matches all vertices.)\nThese problems are typical of those studied in complexity theory in two fundamental respects.  First, they are all effectively decidable.  This is to say that they may all be decided in the \u2018in principle\u2019 sense studied in computability theory \u2013 i.e. by an effective procedure which halts in finitely many steps for all inputs.  Second, they arise in contexts in which we are interested in solving not only isolated instances of the problem in question, but rather in developing methods which allow it to be efficiently solved on a mass scale \u2013 i.e. for all instances in which we might be practically concerned.  Such interest often arises in virtue of the relationship of computational problems to practical tasks which we seek to analyze using the methods of discrete mathematics.  For example, instances of \\(\\sc{SAT}\\) arise when we wish to check the consistency of a set of specifications (e.g. those which might arise in scheduling the sessions of a conference or  designing a circuit board), instances of \\(\\sc{TSP}\\) and \\(\\sc{INTEGER}\\ \\sc{PROGRAMMING}\\) arise in many logistical and planning applications, instances of \\(\\sc{PERFECT} \\ \\sc{MATCHING}\\) arise when we wish to find an optimal means of pairing candidates with jobs, \n etc.[1] \n The resources involved in carrying out an algorithm to decide an instance of a problems can typically be measured in terms of the number of processor cycles (i.e. elementary computational steps) and the amount of memory space (i.e. storage for auxiliary calculations) which are required to return a solution.   The methods of complexity theory can be useful not only in deciding how we can most efficiently expend such resources, but also in helping us to distinguish which effectively decidable problems possess efficient decision methods in the first place.  In this regard, it is traditional to distinguish pre-theoretically between the class of feasibly decidable problems  \u2013 i.e. those which can be solved in practice by an efficient algorithm \u2013 and the class of intractable problems \u2013 i.e. those which lack such algorithms and may thus be regarded as intrinsically difficult to decide (despite possibly being decidable in principle). The significance of this distinction is most readily appreciated by considering some additional examples.\n",
    "section_title": "1. On computational complexity",
    "entry_title": "Computational Complexity Theory",
    "hierarchy_title": "Computational Complexity Theory || On computational complexity",
    "tokenized_text": [
        "computational",
        "complexity",
        "computational",
        "complexity",
        "central",
        "development",
        "computational",
        "complexity",
        "theory",
        "notion",
        "decision",
        "problem",
        "problem",
        "corresponds",
        "set",
        "x",
        "wish",
        "decide",
        "membership",
        "instance",
        "problem",
        "sc",
        "prime",
        "corresponds",
        "subset",
        "natural",
        "number",
        "prime",
        "ie",
        "n",
        "in",
        "mathbb",
        "n",
        "mid",
        "n",
        "text",
        "prime",
        "decision",
        "problem",
        "typically",
        "specified",
        "form",
        "question",
        "class",
        "mathematical",
        "object",
        "whose",
        "positive",
        "instance",
        "determine",
        "set",
        "question",
        "eg",
        "sc",
        "sat",
        "given",
        "formula",
        "phi",
        "propositional",
        "logic",
        "exist",
        "satisfying",
        "assignment",
        "phi",
        "sc",
        "traveling",
        "sc",
        "salesman",
        "sc",
        "tsp",
        "given",
        "list",
        "city",
        "v",
        "integer",
        "distance",
        "u",
        "v",
        "pair",
        "city",
        "u",
        "v",
        "in",
        "v",
        "budget",
        "b",
        "in",
        "mathbb",
        "n",
        "tour",
        "visiting",
        "city",
        "exactly",
        "returning",
        "starting",
        "city",
        "total",
        "distance",
        "leq",
        "b",
        "sc",
        "integer",
        "sc",
        "programming",
        "given",
        "n",
        "times",
        "m",
        "integer",
        "matrix",
        "a",
        "n",
        "dimensional",
        "vector",
        "integer",
        "vec",
        "b",
        "exist",
        "m",
        "dimensional",
        "vector",
        "vec",
        "x",
        "integer",
        "vec",
        "x",
        "b",
        "sc",
        "perfect",
        "sc",
        "matching",
        "given",
        "finite",
        "bipartite",
        "graph",
        "g",
        "exist",
        "perfect",
        "matching",
        "g",
        "g",
        "bipartite",
        "case",
        "vertex",
        "partitioned",
        "two",
        "disjoints",
        "set",
        "u",
        "v",
        "edge",
        "e",
        "connect",
        "vertex",
        "u",
        "one",
        "v",
        "matching",
        "subset",
        "edge",
        "subseteq",
        "e",
        "two",
        "member",
        "share",
        "common",
        "vertex",
        "m",
        "perfect",
        "match",
        "vertex",
        "problem",
        "typical",
        "studied",
        "complexity",
        "theory",
        "two",
        "fundamental",
        "respect",
        "first",
        "effectively",
        "decidable",
        "say",
        "may",
        "decided",
        "principle",
        "sense",
        "studied",
        "computability",
        "theory",
        "ie",
        "effective",
        "procedure",
        "halt",
        "finitely",
        "many",
        "step",
        "input",
        "second",
        "arise",
        "context",
        "interested",
        "solving",
        "isolated",
        "instance",
        "problem",
        "question",
        "rather",
        "developing",
        "method",
        "allow",
        "efficiently",
        "solved",
        "mass",
        "scale",
        "ie",
        "instance",
        "might",
        "practically",
        "concerned",
        "interest",
        "often",
        "arises",
        "virtue",
        "relationship",
        "computational",
        "problem",
        "practical",
        "task",
        "seek",
        "analyze",
        "using",
        "method",
        "discrete",
        "mathematics",
        "example",
        "instance",
        "sc",
        "sat",
        "arise",
        "wish",
        "check",
        "consistency",
        "set",
        "specification",
        "eg",
        "might",
        "arise",
        "scheduling",
        "session",
        "conference",
        "designing",
        "circuit",
        "board",
        "instance",
        "sc",
        "tsp",
        "sc",
        "integer",
        "sc",
        "programming",
        "arise",
        "many",
        "logistical",
        "planning",
        "application",
        "instance",
        "sc",
        "perfect",
        "sc",
        "matching",
        "arise",
        "wish",
        "find",
        "optimal",
        "mean",
        "pairing",
        "candidate",
        "job",
        "etc",
        "resource",
        "involved",
        "carrying",
        "algorithm",
        "decide",
        "instance",
        "problem",
        "typically",
        "measured",
        "term",
        "number",
        "processor",
        "cycle",
        "ie",
        "elementary",
        "computational",
        "step",
        "amount",
        "memory",
        "space",
        "ie",
        "storage",
        "auxiliary",
        "calculation",
        "required",
        "return",
        "solution",
        "method",
        "complexity",
        "theory",
        "useful",
        "deciding",
        "efficiently",
        "expend",
        "resource",
        "also",
        "helping",
        "u",
        "distinguish",
        "effectively",
        "decidable",
        "problem",
        "posse",
        "efficient",
        "decision",
        "method",
        "first",
        "place",
        "regard",
        "traditional",
        "distinguish",
        "pretheoretically",
        "class",
        "feasibly",
        "decidable",
        "problem",
        "ie",
        "solved",
        "practice",
        "efficient",
        "algorithm",
        "class",
        "intractable",
        "problem",
        "ie",
        "lack",
        "algorithm",
        "may",
        "thus",
        "regarded",
        "intrinsically",
        "difficult",
        "decide",
        "despite",
        "possibly",
        "decidable",
        "principle",
        "significance",
        "distinction",
        "readily",
        "appreciated",
        "considering",
        "additional",
        "example"
    ]
}