{
    "main_text": "Logics as consequence relations\n2. Logics as consequence relations\n\nIn this section we define what propositional logics are and explain\nthe basic concepts relating to them. We will call the propositional\nlogics (as defined below) simply logic systems.\n\nOne of the main traits of the consequence relations we study in logic\nis their formal character. This roughly means that if a sentence \\(a\\)\nfollows from a set of sentences \\(X\\)\nand we have another sentence \\(b\\) and another set of\nsentences \\(Y\\) that share the same form with \\(a\\)\nand \\(X\\) respectively, then \\(b\\)\nalso follows from \\(Y\\). In\npropositional logics this boils down to saying that if we uniformly\nreplace basic sub-sentences of the sentences in \\(X \\cup \\{a\\}\\) by\nother sentences obtaining \\(Y\\) and \\(b\\),\nthen \\(b\\) follows from \\(Y\\).\n(The reader can find more information on the idea of\nformality in the entry\n Logical Consequence.)\n\nTo turn the idea of the formal character of logics into a rigorous\ndefinition we need to introduce the concept of propositional language\nand the concept of substitution.\n\nA propositional language (a language, for short) \\(L\\) is a set of\nconnectives, that is, a set of symbols each one of which has an arity\n\\(n\\) that tells us in case that \\(n = 0\\) that the\nsymbol is a propositional constant, and in case that \\(n \\gt 0\\)\nwhether the connective is unary, binary, ternary, etc. For example\n\\(\\{\\wedge , \\vee , \\rightarrow , \\bot , \\top \\}\\) is (or can be) the\nlanguage of several logics, like classical and intuitionistic,\n\\((\\bot\\) and \\(\\top\\) are 0-ary and the other connectives are\nbinary), \\(\\{\\neg , \\wedge , \\vee \\rightarrow , \\Box , \\Diamond \\}\\)\nis the language of several modal logics, \\((\\neg , \\Box , \\Diamond\\)\nare unary and the other connectives binary) and \\(\\{ \\wedge , \\vee ,\n\\rightarrow , * , \\top , \\bot , 1, 0\\}\\) is the language of\nmany-valued logics and also of a fragment of linear logic \\((\\bot ,\n\\top , 1\\), and 0 are propositional constants and the other symbols\nbinary connectives).\n\nGiven a language \\(L\\) and a set of propositional\nvariables \\(V\\) (which is disjoint from \\(L)\\), the\nformulas of \\(L\\), or \\(L\\)-formulas,\nare defined inductively as\nfollows:\n\nEvery variable is a formula.\nEvery 0-ary symbol is a formula.\nIf \\(*\\) is a connective and \\(n \\gt 0\\) is its\narity, then for all formulas \\(\\phi_1 ,\\ldots ,\\phi_n, * \\phi_1 \\ldots\n\\phi_n\\) is also a formula.\n\n\nA substitution \\(\\sigma\\) for \\(L\\) is a map\nfrom the set of variables \\(V\\) to the set of formulas\nof \\(L\\). It tells us which formula must replace which\nvariable when we perform the substitution. If \\(p\\) is\na variable, then \\(\\sigma(p)\\) denotes the formula that the\nsubstitution \\(\\sigma\\) assigns to \\(p\\). The result of\napplying a substitution \\(\\sigma\\) to a formula \\(\\phi\\) is the\nformula \\(\\bsigma(\\phi)\\) obtained from \\(\\phi\\) by simultaneously\nreplacing the variables in \\(\\phi\\), say \\(p_1 , \\ldots ,p_k\\), by,\nrespectively, the formulas \\(\\sigma(p_1), \\ldots ,\\sigma(p_k)\\). In\nthis way, a substitution \\(\\sigma\\) gives a unique map \\(\\bsigma\\)\nfrom the set of formulas to itself that satisfies\n\n\\(\\bsigma(p) = \\sigma(p)\\), for every variable \\(p\\),\n\\(\\bsigma(\\dagger) = \\dagger\\), for every 0-ary connective\n\\(\\dagger\\),\n\\(\\bsigma(* \\phi_1 \\ldots \\phi_n) = * \\bsigma(\\phi_1)\\ldots\n\\bsigma(\\phi_n)\\), for every connective \\(*\\) of arity\n\\(n \\gt 0\\) and formulas \\(\\phi_1 , \\ldots ,\\phi_n\\).\n\n\nA formula \\(\\psi\\) is a substitution instance of a formula\n\\(\\phi\\) if there is a substitution \\(\\sigma\\) such that when applied\nto \\(\\phi\\) gives \\(\\psi\\), that is, if \\(\\bsigma(\\phi) = \\psi\\).\n\nIn order to avoid unnecessary complications we will assume in the\nsequel that all the logics use the same denumerable set \\(V\\) of\nvariables, so that the definition of formula of \\(L\\)\ndepends only on \\(L\\). A logic system (or\nlogic for short) is given by a language \\(L\\)\nand a consequence relation \\(\\vdash\\) on the set of formulas of \\(L\\)\nthat is formal in the sense that for every\nsubstitution \\(\\sigma\\), every set of formulas \\(\\Gamma\\) and every\nformula \\(\\phi\\), \n\n\\[ \\textrm{if } \\Gamma \\vdash \\phi, \\textrm{ then } \\bsigma[\\Gamma] \\vdash\\bsigma(\\phi) \\]\n\n\nwhere \\(\\bsigma[\\Gamma]\\) is the set of the formulas obtained by\napplying the substitution \\(\\sigma\\) to the formulas in \\(\\Gamma\\).\nThe consequence relations on the set of formulas of a language that\nsatisfy this property are called structural and also\nsubstitution-invariant in the literature. They were\nconsidered for the first time in \u0141o\u015b & Suszko 1958.\nTarski only explicitly considered closed sets also closed under\nsubstitution instances for some consequence relations; he never\nconsidered (at least explicitly) the substitution invariance condition\nfor consequence relations.\n\nWe will refer to logic systems by the letter \\(\\bL\\) with possible\nsubindices, and we set \\(\\bL = \\langle L, \\vdash_{\\bL } \\rangle\\) and\n\\(\\bL_n = \\langle L_n, \\vdash_{\\bL_n } \\rangle\\) with the\nunderstanding that \\(L \\; (L_n)\\) is the language of \\(\\bL \\;(\\bL_n)\\)\nand \\(\\vdash_{\\bL }\\; (\\vdash_{\\bL_n })\\) its consequence relation. A\nlogic system \\(\\bL\\) is finitary if \\(\\vdash_{\\bL}\\) is a\nfinitary consequence relation.\n\nThe consequence relation of a logic system can be given in several\nways, some using proof-theoretic tools, others semantic means. A\nsubstitution-invariant consequence relation can be defined using a\nproof system like a Hilbert-style axiom system, a Gentzen-style\nsequent calculus or a natural deduction style calculus, etc. One can\nalso define a substitution-invariant consequence relation semantically\nusing a class of mathematical objects (algebras, Kripke models,\ntopological models, etc.) and a satisfaction relation.\n\nIf \\(\\bL_1 = \\langle L,\\vdash_{\\bL_1 } \\rangle\\) is a logic system\nwith \\(\\vdash_{\\bL_1}\\) defined by a proof-system and \\(\\bL_2 =\n\\langle L, \\vdash_{\\bL_2 } \\rangle\\) is a logic system over the same\nlanguage with \\(\\vdash_{\\bL_2}\\) defined semantically, we say that the\nproof-system used to define \\(\\vdash_{\\bL_1}\\) is sound for\nthe semantics used to define \\(\\vdash_{\\bL_2}\\) if \\(\\vdash_{\\bL_1}\\)\nis included in \\(\\vdash_{\\bL_2}\\), namely if \\(\\Gamma \\vdash_{\\bL_1 }\n\\phi\\) implies \\(\\Gamma \\vdash_{\\bL_2 } \\phi\\). If the other inclusion\nholds the proof-system is said to be complete with respect to\nthe semantics that defines \\(\\vdash_{\\bL_2}\\), that is, when \\(\\Gamma\n\\vdash_{\\bL_2 } \\phi\\) implies \\(\\Gamma \\vdash_{\\bL_1 } \\phi\\).\n\nA set of \\(L\\)-formulas \\(\\Gamma\\) is called a\ntheory of a logic system \\(\\bL\\), or \\(\\bL\\)-theory, if it is\nclosed under the relation \\(\\vdash_{\\bL}\\), that is, if whenever\n\\(\\Gamma \\vdash_{\\bL } \\phi\\) it also holds that \\(\\phi \\in \\Gamma\\).\nIn other words, the theories of \\(\\bL\\) are the closed sets of the\nconsequence operation \\(C_{\\vdash_{ \\bL}}\\) on the set of \\(L\\)-formulas.\nIn order to simplify the notation we denote\nthis consequence operation by \\(C_{\\bL}\\). A formula \\(\\phi\\) is a\ntheorem (or validity) of \\(\\bL\\) if \\(\\varnothing \\vdash_{\\bL\n} \\phi\\). Then \\(C_{\\bL }(\\varnothing)\\) is the set of theorems of\n\\(\\bL\\) and is the least theory of \\(\\bL\\). The set of all theories of\n\\(\\bL\\) will be denoted by \\(\\tTH(\\bL)\\).\nGiven a logic system \\(\\bL\\), the consequence operation \\(C_{\\bL}\\) is substitution-invariant, which means that for every set of \\(L\\)-formulas \\(\\Gamma\\) and every substitution \\(\\sigma, \\bsigma[C_{\\bL}(\\Gamma)] \\subseteq C_{\\bL}(\\bsigma[\\Gamma]\\)). Moreover, for every theory \\(T\\) of \\(\\bL\\) we have a new consequence \\(C_{\\bL }^T\\) operation defined as follows: \\[C_{\\bL }^T (\\Gamma) = C_{\\bL }(T \\cup \\Gamma)\\] that is, \\(C_{\\bL }^T (\\Gamma)\\) is the set of formulas that follow from \\(\\Gamma\\) and \\(T\\) according to \\(\\bL\\). It turns out that \\(T\\) is closed under substitutions if and only if \\(C_{\\bL }^T\\) is substitution-invariant.\n\nIf \\(\\bL\\) is a logic system and \\(\\Gamma , \\Delta\\) are sets of \\(L\\)-formulas,\nwe will use the notation \\(\\Gamma\n\\vdash_{\\bL } \\Delta\\) to state that for every \\(\\psi \\in \\Delta ,\n\\Gamma \\vdash_{\\bL } \\psi\\). Thus \\(\\Gamma \\vdash_{\\bL } \\Delta\\) if\nand only if \\(\\Delta \\subseteq C_{\\bL }(\\Gamma)\\).\nIf \\(\\bL = \\langle L, \\vdash_{\\bL } \\rangle\\) and \\(\\bL' = \\langle L', \\vdash_{\\bL' } \\rangle\\) are logic systems whose languages satisfy that  \\(L'\\subseteq L\\) (hence all the \\(L'\\)-formulas are \\(L\\)-formulas) and   \\[\\Gamma \\vdash_{\\bL' } \\phi \\txtiff \\Gamma \\vdash_{\\bL } \\phi,\\] for every set of \\(L'\\)-formulas \\(\\Gamma\\) and every \\(L'\\)-formula \\(\\phi\\) we say that \\(\\bL'\\) is a fragment \\(\\bL\\) (in fact, the \\(\\bL'\\)-fragment) and   that \\(\\bL\\) is an expansion of \\(\\bL'\\).\n",
    "section_title": "2. Logics as consequence relations",
    "entry_title": "Algebraic Propositional Logic",
    "hierarchy_title": "Algebraic Propositional Logic || Logics as consequence relations",
    "tokenized_text": [
        "logic",
        "consequence",
        "relation",
        "logic",
        "consequence",
        "relation",
        "section",
        "define",
        "propositional",
        "logic",
        "explain",
        "basic",
        "concept",
        "relating",
        "call",
        "propositional",
        "logic",
        "defined",
        "simply",
        "logic",
        "system",
        "one",
        "main",
        "trait",
        "consequence",
        "relation",
        "study",
        "logic",
        "formal",
        "character",
        "roughly",
        "mean",
        "sentence",
        "a",
        "follows",
        "set",
        "sentence",
        "x",
        "another",
        "sentence",
        "b",
        "another",
        "set",
        "sentence",
        "y",
        "share",
        "form",
        "a",
        "x",
        "respectively",
        "b",
        "also",
        "follows",
        "y",
        "propositional",
        "logic",
        "boil",
        "saying",
        "uniformly",
        "replace",
        "basic",
        "subsentences",
        "sentence",
        "x",
        "cup",
        "a",
        "sentence",
        "obtaining",
        "y",
        "b",
        "b",
        "follows",
        "y",
        "reader",
        "find",
        "information",
        "idea",
        "formality",
        "entry",
        "logical",
        "consequence",
        "turn",
        "idea",
        "formal",
        "character",
        "logic",
        "rigorous",
        "definition",
        "need",
        "introduce",
        "concept",
        "propositional",
        "language",
        "concept",
        "substitution",
        "propositional",
        "language",
        "language",
        "short",
        "l",
        "set",
        "connective",
        "set",
        "symbol",
        "one",
        "arity",
        "n",
        "tell",
        "u",
        "case",
        "n",
        "symbol",
        "propositional",
        "constant",
        "case",
        "n",
        "gt",
        "whether",
        "connective",
        "unary",
        "binary",
        "ternary",
        "etc",
        "example",
        "wedge",
        "vee",
        "rightarrow",
        "bot",
        "top",
        "language",
        "several",
        "logic",
        "like",
        "classical",
        "intuitionistic",
        "bot",
        "top",
        "ary",
        "connective",
        "binary",
        "neg",
        "wedge",
        "vee",
        "rightarrow",
        "box",
        "diamond",
        "language",
        "several",
        "modal",
        "logic",
        "neg",
        "box",
        "diamond",
        "unary",
        "connective",
        "binary",
        "wedge",
        "vee",
        "rightarrow",
        "top",
        "bot",
        "language",
        "manyvalued",
        "logic",
        "also",
        "fragment",
        "linear",
        "logic",
        "bot",
        "top",
        "propositional",
        "constant",
        "symbol",
        "binary",
        "connective",
        "given",
        "language",
        "l",
        "set",
        "propositional",
        "variable",
        "v",
        "disjoint",
        "l",
        "formula",
        "l",
        "l",
        "formulas",
        "defined",
        "inductively",
        "follows",
        "every",
        "variable",
        "formula",
        "every",
        "ary",
        "symbol",
        "formula",
        "connective",
        "n",
        "gt",
        "arity",
        "formula",
        "phi_",
        "ldots",
        "phi_n",
        "phi_",
        "ldots",
        "phi_n",
        "also",
        "formula",
        "substitution",
        "sigma",
        "l",
        "map",
        "set",
        "variable",
        "v",
        "set",
        "formula",
        "l",
        "tell",
        "u",
        "formula",
        "must",
        "replace",
        "variable",
        "perform",
        "substitution",
        "p",
        "variable",
        "sigma",
        "p",
        "denotes",
        "formula",
        "substitution",
        "sigma",
        "assigns",
        "p",
        "result",
        "applying",
        "substitution",
        "sigma",
        "formula",
        "phi",
        "formula",
        "bsigma",
        "phi",
        "obtained",
        "phi",
        "simultaneously",
        "replacing",
        "variable",
        "phi",
        "say",
        "p_",
        "ldots",
        "p_k",
        "respectively",
        "formula",
        "sigma",
        "p_",
        "ldots",
        "sigma",
        "p_k",
        "way",
        "substitution",
        "sigma",
        "give",
        "unique",
        "map",
        "bsigma",
        "set",
        "formula",
        "satisfies",
        "bsigma",
        "p",
        "sigma",
        "p",
        "every",
        "variable",
        "p",
        "bsigma",
        "dagger",
        "dagger",
        "every",
        "ary",
        "connective",
        "dagger",
        "bsigma",
        "phi_",
        "ldots",
        "phi_n",
        "bsigma",
        "phi_",
        "ldots",
        "bsigma",
        "phi_n",
        "every",
        "connective",
        "arity",
        "n",
        "gt",
        "formula",
        "phi_",
        "ldots",
        "phi_n",
        "formula",
        "psi",
        "substitution",
        "instance",
        "formula",
        "phi",
        "substitution",
        "sigma",
        "applied",
        "phi",
        "give",
        "psi",
        "bsigma",
        "phi",
        "psi",
        "order",
        "avoid",
        "unnecessary",
        "complication",
        "assume",
        "sequel",
        "logic",
        "use",
        "denumerable",
        "set",
        "v",
        "variable",
        "definition",
        "formula",
        "l",
        "depends",
        "l",
        "logic",
        "system",
        "logic",
        "short",
        "given",
        "language",
        "l",
        "consequence",
        "relation",
        "vdash",
        "set",
        "formula",
        "l",
        "formal",
        "sense",
        "every",
        "substitution",
        "sigma",
        "every",
        "set",
        "formula",
        "gamma",
        "every",
        "formula",
        "phi",
        "textrm",
        "gamma",
        "vdash",
        "phi",
        "textrm",
        "bsigma",
        "gamma",
        "vdashbsigma",
        "phi",
        "bsigma",
        "gamma",
        "set",
        "formula",
        "obtained",
        "applying",
        "substitution",
        "sigma",
        "formula",
        "gamma",
        "consequence",
        "relation",
        "set",
        "formula",
        "language",
        "satisfy",
        "property",
        "called",
        "structural",
        "also",
        "substitutioninvariant",
        "literature",
        "considered",
        "first",
        "time",
        "\u0142o\u015b",
        "suszko",
        "tarski",
        "explicitly",
        "considered",
        "closed",
        "set",
        "also",
        "closed",
        "substitution",
        "instance",
        "consequence",
        "relation",
        "never",
        "considered",
        "least",
        "explicitly",
        "substitution",
        "invariance",
        "condition",
        "consequence",
        "relation",
        "refer",
        "logic",
        "system",
        "letter",
        "bl",
        "possible",
        "subindices",
        "set",
        "bl",
        "langle",
        "l",
        "vdash_",
        "bl",
        "rangle",
        "bl_n",
        "langle",
        "l_n",
        "vdash_",
        "bl_n",
        "rangle",
        "understanding",
        "l",
        "l_n",
        "language",
        "bl",
        "bl_n",
        "vdash_",
        "bl",
        "vdash_",
        "bl_n",
        "consequence",
        "relation",
        "logic",
        "system",
        "bl",
        "finitary",
        "vdash_",
        "bl",
        "finitary",
        "consequence",
        "relation",
        "consequence",
        "relation",
        "logic",
        "system",
        "given",
        "several",
        "way",
        "using",
        "prooftheoretic",
        "tool",
        "others",
        "semantic",
        "mean",
        "substitutioninvariant",
        "consequence",
        "relation",
        "defined",
        "using",
        "proof",
        "system",
        "like",
        "hilbertstyle",
        "axiom",
        "system",
        "gentzenstyle",
        "sequent",
        "calculus",
        "natural",
        "deduction",
        "style",
        "calculus",
        "etc",
        "one",
        "also",
        "define",
        "substitutioninvariant",
        "consequence",
        "relation",
        "semantically",
        "using",
        "class",
        "mathematical",
        "object",
        "algebra",
        "kripke",
        "model",
        "topological",
        "model",
        "etc",
        "satisfaction",
        "relation",
        "bl_",
        "langle",
        "l",
        "vdash_",
        "bl_",
        "rangle",
        "logic",
        "system",
        "vdash_",
        "bl_",
        "defined",
        "proofsystem",
        "bl_",
        "langle",
        "l",
        "vdash_",
        "bl_",
        "rangle",
        "logic",
        "system",
        "language",
        "vdash_",
        "bl_",
        "defined",
        "semantically",
        "say",
        "proofsystem",
        "used",
        "define",
        "vdash_",
        "bl_",
        "sound",
        "semantics",
        "used",
        "define",
        "vdash_",
        "bl_",
        "vdash_",
        "bl_",
        "included",
        "vdash_",
        "bl_",
        "namely",
        "gamma",
        "vdash_",
        "bl_",
        "phi",
        "implies",
        "gamma",
        "vdash_",
        "bl_",
        "phi",
        "inclusion",
        "hold",
        "proofsystem",
        "said",
        "complete",
        "respect",
        "semantics",
        "defines",
        "vdash_",
        "bl_",
        "gamma",
        "vdash_",
        "bl_",
        "phi",
        "implies",
        "gamma",
        "vdash_",
        "bl_",
        "phi",
        "set",
        "l",
        "formulas",
        "gamma",
        "called",
        "theory",
        "logic",
        "system",
        "bl",
        "bl",
        "theory",
        "closed",
        "relation",
        "vdash_",
        "bl",
        "whenever",
        "gamma",
        "vdash_",
        "bl",
        "phi",
        "also",
        "hold",
        "phi",
        "in",
        "gamma",
        "word",
        "theory",
        "bl",
        "closed",
        "set",
        "consequence",
        "operation",
        "c_",
        "vdash_",
        "bl",
        "set",
        "l",
        "formulas",
        "order",
        "simplify",
        "notation",
        "denote",
        "consequence",
        "operation",
        "c_",
        "bl",
        "formula",
        "phi",
        "theorem",
        "validity",
        "bl",
        "varnothing",
        "vdash_",
        "bl",
        "phi",
        "c_",
        "bl",
        "varnothing",
        "set",
        "theorem",
        "bl",
        "least",
        "theory",
        "bl",
        "set",
        "theory",
        "bl",
        "denoted",
        "tth",
        "bl",
        "given",
        "logic",
        "system",
        "bl",
        "consequence",
        "operation",
        "c_",
        "bl",
        "substitutioninvariant",
        "mean",
        "every",
        "set",
        "l",
        "formulas",
        "gamma",
        "every",
        "substitution",
        "sigma",
        "bsigma",
        "c_",
        "bl",
        "gamma",
        "subseteq",
        "c_",
        "bl",
        "bsigma",
        "gamma",
        "moreover",
        "every",
        "theory",
        "t",
        "bl",
        "new",
        "consequence",
        "c_",
        "bl",
        "t",
        "operation",
        "defined",
        "follows",
        "c_",
        "bl",
        "t",
        "gamma",
        "c_",
        "bl",
        "cup",
        "gamma",
        "c_",
        "bl",
        "t",
        "gamma",
        "set",
        "formula",
        "follow",
        "gamma",
        "t",
        "according",
        "bl",
        "turn",
        "t",
        "closed",
        "substitution",
        "c_",
        "bl",
        "t",
        "substitutioninvariant",
        "bl",
        "logic",
        "system",
        "gamma",
        "delta",
        "set",
        "l",
        "formulas",
        "use",
        "notation",
        "gamma",
        "vdash_",
        "bl",
        "delta",
        "state",
        "every",
        "psi",
        "in",
        "delta",
        "gamma",
        "vdash_",
        "bl",
        "psi",
        "thus",
        "gamma",
        "vdash_",
        "bl",
        "delta",
        "delta",
        "subseteq",
        "c_",
        "bl",
        "gamma",
        "bl",
        "langle",
        "l",
        "vdash_",
        "bl",
        "rangle",
        "bl",
        "langle",
        "l",
        "vdash_",
        "bl",
        "rangle",
        "logic",
        "system",
        "whose",
        "language",
        "satisfy",
        "lsubseteq",
        "l",
        "hence",
        "l",
        "formulas",
        "l",
        "formulas",
        "gamma",
        "vdash_",
        "bl",
        "phi",
        "txtiff",
        "gamma",
        "vdash_",
        "bl",
        "phi",
        "every",
        "set",
        "l",
        "formulas",
        "gamma",
        "every",
        "l",
        "formula",
        "phi",
        "say",
        "bl",
        "fragment",
        "bl",
        "fact",
        "bl",
        "fragment",
        "bl",
        "expansion",
        "bl"
    ]
}