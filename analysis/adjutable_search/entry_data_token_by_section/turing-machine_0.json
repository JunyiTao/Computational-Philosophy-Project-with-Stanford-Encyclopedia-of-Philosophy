{
    "main_text": "Definitions of the Turing Machine || Turing\u2019s Definition\n1.1 Turing\u2019s Definition\n\nTuring introduced Turing machines in the context of research into the\nfoundations of mathematics. More particularly, he used these abstract\ndevices to prove that there is no effective general method or\nprocedure to solve, calculate or compute every instance of the\nfollowing problem:\n\n\nEntscheidungsproblem The problem to decide\nfor every statement in first-order logic (the so-called restricted\nfunctional calculus, see the entry on\n classical logic\n for an introduction) whether or not it is derivable in that\nlogic.\n\n\nNote that in its original form (Hilbert & Ackermann 1928), the\nproblem was stated in terms of validity rather than derivability.\nGiven G\u00f6del\u2019s completeness theorem (G\u00f6del 1929)\nproving that there is an effective procedure (or not) for derivability\nis also a solution to the problem in its validity form. In order to\ntackle this problem, one needs a formalized notion of \u201ceffective\nprocedure\u201d and Turing\u2019s machines were intended to do\nexactly that.\n\nA Turing machine then, or a computing machine as Turing\ncalled it, in Turing\u2019s original definition is a machine capable\nof a finite set of configurations \\(q_{1},\\ldots,q_{n}\\) (the\nstates of the machine, called m-configurations by Turing). It\nis supplied with a one-way infinite and one-dimensional tape divided\ninto squares each capable of carrying exactly one symbol. At any\nmoment, the machine is scanning the content of one square\nr which is either blank (symbolized by \\(S_0\\)) or contains a\nsymbol \\(S_{1},\\ldots ,S_{m}\\) with \\(S_1 = 0\\) and \\(S_2 =\n1\\).\n\nThe machine is an automatic machine (a-machine) which means\nthat at any given moment, the behavior of the machine is completely\ndetermined by the current state and symbol (called the\nconfiguration) being scanned. This is the so-called\ndeterminacy condition\n (Section 3).\n These a-machines are contrasted with the so-called choice\nmachines for which the next state depends on the decision of an\nexternal device or operator (Turing 1936\u20137: 232). A Turing\nmachine is capable of three types of action:\n\nPrint \\(S_i\\), move one square to the left (L) and go to\nstate \\(q_{j}\\)\nPrint \\(S_i\\), move one square to the right (R) and go to\nstate \\(q_{j}\\)\nPrint \\(S_i\\), do not move (N) and go to state\n\\(q_{j}\\)\n\n\nThe \u2018program\u2019 of a Turing machine can then be written as a\nfinite set of quintuples of the form:  \n\n\\[q_{i}S_{j}S_{i,j}M_{i,j}q_{i,j}\\]\n\n\nWhere \\(q_i\\) is the current state, \\(S_j\\) the content of the square\nbeing scanned, \\(S_{i,j}\\) the new content of the square; \\(M_{i,j}\\)\nspecifies whether the machine is to move one square to the left, to\nthe right or to remain at the same square, and \\(q_{i,j}\\) is the next\nstate of the machine. These quintuples are also called the transition\nrules of a given machine. The Turing machine \\(T_{\\textrm{Simple}}\\)\nwhich, when started from a blank tape, computes the sequence\n\\(S_0S_1S_0S_1\\ldots\\) is then given by\n Table 1.\n\n\nTable 1: Quintuple representation of\n\\(T_{\\textrm{Simple}}\\) \n\n\\[\n\\begin{align}\\hline\n;q_{1}S_{0}S_{0}Rq_{2}\\\\\n;q_{1}S_{1}S_{0}Rq_{2}\\\\\n;q_{2}S_{0}S_{1}Rq_{1}\\\\\n;q_{2}S_{1}S_{1}Rq_{1}\\\\\\hline\n\\end{align}\n\\]\n\n\n\nNote that \\(T_{\\textrm{Simple}}\\) will never enter a configuration\nwhere it is scanning \\(S_1\\) so that two of the four quintuples are\nredundant. Another typical format to represent Turing machines and\nwhich was also used by Turing is the transition table.\n Table 2\n gives the transition table of \\(T_{\\textrm{Simple}}\\).\n\n\nTable 2: Transition table for\n\\(T_{\\textrm{Simple}}\\)\n\n\n\n\n\\(S_0\\)\n\\(S_1\\) \n\n\\(q_1\\)\n\\(S_{0}\\opR q_{2}\\)\n\\(S_{0}\\opR q_{2}\\) \n\n\\(q_2\\)\n\\(S_{1}\\opR q_{1}\\)\n\\(S_{1}\\opR q_{1}\\)  \n\n\n\nWhere current definitions of Turing machines usually have only one\ntype of symbols (usually just 0 and 1; it was proven by Shannon that\nany Turing machine can be reduced to a binary Turing machine (Shannon\n1956)) Turing, in his original definition of so-called computing\nmachines, used two kinds of symbols: the figures which\nconsist entirely of 0s and 1s and the so-called symbols of the\nsecond kind. These are differentiated on the Turing machine tape\nby using a system of alternating squares of figures and symbols of the\nsecond kind. One sequence of alternating squares contains the figures\nand is called the sequence of F-squares. It contains the\nsequence computed by the machine; the other is called the\nsequence of E-squares. The latter are used to mark\nF-squares and are there to \u201cassist the memory\u201d\n(Turing 1936\u20137: 232). The content of the E-squares is\nliable to change. F-squares however cannot be changed which\nmeans that one cannot implement algorithms whereby earlier computed\ndigits need to be changed. Moreover, the machine will never print a\nsymbol on an F-square if the F-square preceding it has\nnot been computed yet. This usage of F and E-squares can\nbe quite useful (see\n Sec. 2.3)\n but, as was shown by Emil L. Post, it results in a number of\ncomplications (see\n Sec. 1.2).\n\nThere are two important things to notice about the Turing machine\nsetup. The first concerns the definition of the machine itself, namely\nthat the machine\u2019s tape is potentially infinite. This\ncorresponds to an assumption that the memory of the machine is\n(potentially) infinite. The second concerns the definition of Turing\ncomputable, namely that a function will be Turing computable if there\nexists a set of instructions that will result in a Turing machine\ncomputing the function regardless of the amount of time it takes. One\ncan think of this as assuming the availability of potentially infinite\ntime to complete the computation.\n\nThese two assumptions are intended to ensure that the definition of\ncomputation that results is not too narrow. This is, it ensures that\nno computable function will fail to be Turing-computable solely\nbecause there is insufficient time or memory to complete the\ncomputation. It follows that there may be some Turing computable\nfunctions which may not be carried out by any existing computer,\nperhaps because no existing machine has sufficient memory to carry out\nthe task. Some Turing computable functions may not ever be computable\nin practice, since they may require more memory than can be built\nusing all of the (finite number of) atoms in the universe. If we\nmoreover assume that a physical computer is a finite realization of\nthe Turing machine, and so that the Turing machine functions as a good\nformal model for the computer, a result which shows that a function is\nnot Turing computable is very strong, since it implies that no\ncomputer that we could ever build could carry out the computation. In\nSection 2.4, it is shown that there are functions which are not\nTuring-computable.\n",
    "section_title": "1.1 Turing\u2019s Definition",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Definitions of the Turing Machine || Turing\u2019s Definition",
    "tokenized_text": [
        "definition",
        "turing",
        "machine",
        "turing",
        "definition",
        "turing",
        "definition",
        "turing",
        "introduced",
        "turing",
        "machine",
        "context",
        "research",
        "foundation",
        "mathematics",
        "particularly",
        "used",
        "abstract",
        "device",
        "prove",
        "effective",
        "general",
        "method",
        "procedure",
        "solve",
        "calculate",
        "compute",
        "every",
        "instance",
        "following",
        "problem",
        "entscheidungsproblem",
        "problem",
        "decide",
        "every",
        "statement",
        "firstorder",
        "logic",
        "socalled",
        "restricted",
        "functional",
        "calculus",
        "see",
        "entry",
        "classical",
        "logic",
        "introduction",
        "whether",
        "derivable",
        "logic",
        "note",
        "original",
        "form",
        "hilbert",
        "ackermann",
        "problem",
        "stated",
        "term",
        "validity",
        "rather",
        "derivability",
        "given",
        "g\u00f6del",
        "completeness",
        "theorem",
        "g\u00f6del",
        "proving",
        "effective",
        "procedure",
        "derivability",
        "also",
        "solution",
        "problem",
        "validity",
        "form",
        "order",
        "tackle",
        "problem",
        "one",
        "need",
        "formalized",
        "notion",
        "effective",
        "procedure",
        "turing",
        "machine",
        "intended",
        "exactly",
        "turing",
        "machine",
        "computing",
        "machine",
        "turing",
        "called",
        "turing",
        "original",
        "definition",
        "machine",
        "capable",
        "finite",
        "set",
        "configuration",
        "q_",
        "ldots",
        "q_",
        "n",
        "state",
        "machine",
        "called",
        "mconfigurations",
        "turing",
        "supplied",
        "oneway",
        "infinite",
        "onedimensional",
        "tape",
        "divided",
        "square",
        "capable",
        "carrying",
        "exactly",
        "one",
        "symbol",
        "moment",
        "machine",
        "scanning",
        "content",
        "one",
        "square",
        "r",
        "either",
        "blank",
        "symbolized",
        "s_",
        "contains",
        "symbol",
        "s_",
        "ldots",
        "s_",
        "s_",
        "s_",
        "machine",
        "automatic",
        "machine",
        "amachine",
        "mean",
        "given",
        "moment",
        "behavior",
        "machine",
        "completely",
        "determined",
        "current",
        "state",
        "symbol",
        "called",
        "configuration",
        "scanned",
        "socalled",
        "determinacy",
        "condition",
        "section",
        "amachines",
        "contrasted",
        "socalled",
        "choice",
        "machine",
        "next",
        "state",
        "depends",
        "decision",
        "external",
        "device",
        "operator",
        "turing",
        "turing",
        "machine",
        "capable",
        "three",
        "type",
        "action",
        "print",
        "s_i",
        "move",
        "one",
        "square",
        "left",
        "l",
        "go",
        "state",
        "q_",
        "j",
        "print",
        "s_i",
        "move",
        "one",
        "square",
        "right",
        "r",
        "go",
        "state",
        "q_",
        "j",
        "print",
        "s_i",
        "move",
        "n",
        "go",
        "state",
        "q_",
        "j",
        "program",
        "turing",
        "machine",
        "written",
        "finite",
        "set",
        "quintuple",
        "form",
        "q_",
        "s_",
        "j",
        "s_",
        "j",
        "m_",
        "j",
        "q_",
        "j",
        "q_i",
        "current",
        "state",
        "s_j",
        "content",
        "square",
        "scanned",
        "s_",
        "j",
        "new",
        "content",
        "square",
        "m_",
        "j",
        "specifies",
        "whether",
        "machine",
        "move",
        "one",
        "square",
        "left",
        "right",
        "remain",
        "square",
        "q_",
        "j",
        "next",
        "state",
        "machine",
        "quintuple",
        "also",
        "called",
        "transition",
        "rule",
        "given",
        "machine",
        "turing",
        "machine",
        "t_",
        "textrm",
        "simple",
        "started",
        "blank",
        "tape",
        "computes",
        "sequence",
        "s_s_s_s_ldots",
        "given",
        "table",
        "table",
        "quintuple",
        "representation",
        "t_",
        "textrm",
        "simple",
        "begin",
        "align",
        "hline",
        "q_",
        "s_",
        "s_",
        "rq_",
        "q_",
        "s_",
        "s_",
        "rq_",
        "q_",
        "s_",
        "s_",
        "rq_",
        "q_",
        "s_",
        "s_",
        "rq_",
        "hline",
        "end",
        "align",
        "note",
        "t_",
        "textrm",
        "simple",
        "never",
        "enter",
        "configuration",
        "scanning",
        "s_",
        "two",
        "four",
        "quintuple",
        "redundant",
        "another",
        "typical",
        "format",
        "represent",
        "turing",
        "machine",
        "also",
        "used",
        "turing",
        "transition",
        "table",
        "table",
        "give",
        "transition",
        "table",
        "t_",
        "textrm",
        "simple",
        "table",
        "transition",
        "table",
        "t_",
        "textrm",
        "simple",
        "s_",
        "s_",
        "q_",
        "s_",
        "opr",
        "q_",
        "s_",
        "opr",
        "q_",
        "q_",
        "s_",
        "opr",
        "q_",
        "s_",
        "opr",
        "q_",
        "current",
        "definition",
        "turing",
        "machine",
        "usually",
        "one",
        "type",
        "symbol",
        "usually",
        "proven",
        "shannon",
        "turing",
        "machine",
        "reduced",
        "binary",
        "turing",
        "machine",
        "shannon",
        "turing",
        "original",
        "definition",
        "socalled",
        "computing",
        "machine",
        "used",
        "two",
        "kind",
        "symbol",
        "figure",
        "consist",
        "entirely",
        "socalled",
        "symbol",
        "second",
        "kind",
        "differentiated",
        "turing",
        "machine",
        "tape",
        "using",
        "system",
        "alternating",
        "square",
        "figure",
        "symbol",
        "second",
        "kind",
        "one",
        "sequence",
        "alternating",
        "square",
        "contains",
        "figure",
        "called",
        "sequence",
        "fsquares",
        "contains",
        "sequence",
        "computed",
        "machine",
        "called",
        "sequence",
        "esquares",
        "latter",
        "used",
        "mark",
        "fsquares",
        "assist",
        "memory",
        "turing",
        "content",
        "esquares",
        "liable",
        "change",
        "fsquares",
        "however",
        "changed",
        "mean",
        "one",
        "implement",
        "algorithm",
        "whereby",
        "earlier",
        "computed",
        "digit",
        "need",
        "changed",
        "moreover",
        "machine",
        "never",
        "print",
        "symbol",
        "fsquare",
        "fsquare",
        "preceding",
        "computed",
        "yet",
        "usage",
        "f",
        "esquares",
        "quite",
        "useful",
        "see",
        "sec",
        "shown",
        "emil",
        "l",
        "post",
        "result",
        "number",
        "complication",
        "see",
        "sec",
        "two",
        "important",
        "thing",
        "notice",
        "turing",
        "machine",
        "setup",
        "first",
        "concern",
        "definition",
        "machine",
        "namely",
        "machine",
        "tape",
        "potentially",
        "infinite",
        "corresponds",
        "assumption",
        "memory",
        "machine",
        "potentially",
        "infinite",
        "second",
        "concern",
        "definition",
        "turing",
        "computable",
        "namely",
        "function",
        "turing",
        "computable",
        "exists",
        "set",
        "instruction",
        "result",
        "turing",
        "machine",
        "computing",
        "function",
        "regardless",
        "amount",
        "time",
        "take",
        "one",
        "think",
        "assuming",
        "availability",
        "potentially",
        "infinite",
        "time",
        "complete",
        "computation",
        "two",
        "assumption",
        "intended",
        "ensure",
        "definition",
        "computation",
        "result",
        "narrow",
        "ensures",
        "computable",
        "function",
        "fail",
        "turingcomputable",
        "solely",
        "insufficient",
        "time",
        "memory",
        "complete",
        "computation",
        "follows",
        "may",
        "turing",
        "computable",
        "function",
        "may",
        "carried",
        "existing",
        "computer",
        "perhaps",
        "existing",
        "machine",
        "sufficient",
        "memory",
        "carry",
        "task",
        "turing",
        "computable",
        "function",
        "may",
        "ever",
        "computable",
        "practice",
        "since",
        "may",
        "require",
        "memory",
        "built",
        "using",
        "finite",
        "number",
        "atom",
        "universe",
        "moreover",
        "assume",
        "physical",
        "computer",
        "finite",
        "realization",
        "turing",
        "machine",
        "turing",
        "machine",
        "function",
        "good",
        "formal",
        "model",
        "computer",
        "result",
        "show",
        "function",
        "turing",
        "computable",
        "strong",
        "since",
        "implies",
        "computer",
        "could",
        "ever",
        "build",
        "could",
        "carry",
        "computation",
        "section",
        "shown",
        "function",
        "turingcomputable"
    ]
}