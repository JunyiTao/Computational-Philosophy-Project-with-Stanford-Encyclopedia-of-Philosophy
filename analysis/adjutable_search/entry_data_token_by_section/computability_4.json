{
    "main_text": "Turing Machines || Computable Functions and Enumerability\n2.3 Computable Functions and Enumerability\n\n\nSince a Turing machine might not halt on certain inputs, we have to\nbe careful in how we define functions computable by Turing machines.\nLet the natural numbers, \\(\\mathbf{N}\\), be the set\n\\(\\{0,1,2,\\ldots \\}\\) and let us consider Turing machines as partial\nfunctions from \\(\\mathbf{N}\\) to \\(\\mathbf{N}\\).\n\n\nLet \\(M\\) be a Turing machine and \\(n\\) a natural number.\nWe say that \\(M\\)\u2019s tape contains the number\n\\(n\\), if \\(M\\)\u2019s tape begins with a binary\nrepresentation of the number \\(n\\) (with no unnecessary leading\n0\u2019s) followed by just blank symbols from there on.\n\n\nIf we start the Turing machine \\(M\\) on a tape containing\n\\(n\\) and it eventually halts with its tape containing \\(m\\),\nthen we say that \\(M\\) on input \\(n\\), computes \\(m:\nM(n) = m\\). If, when we start \\(M\\) on\ninput \\(n\\), it either never halts, or when it halts, its tape\ndoes not contain a natural number, e.g., because it has leading 0\u2019s, or\ndigits interspersed with blank symbols, then we say that\n\\(M(n)\\) is undefined, in symbols: \\(M(n)\n=\\nearrow\\).\n We can thus\nassociate with each Turing machine, \\(M\\), a partial\nfunction, \\(M: \\mathbf{N} \\rightarrow \\mathbf{N} \\cup \\{\\nearrow\\}\\). We say that\nthe function \\(M\\) is total if for all\n\\(n\\in \\mathbf{N}\\), \\(M(n) \\in \\mathbf{N}\\), i.e., M\\((n)\\) is always defined.\n\n\nNow we can formally define what it means for a set to be\nrecursively enumerable (r.e.) which we earlier described\ninformally. Let \\(S \\subseteq \\mathbf{N}\\). Then \\(S\\)\nis r.e. if and only if there is some Turing machine, \\(M\\), such\nthat \\(S\\) is the image of the function computed by \\(M\\), in\nsymbols,\n\n\\[\nS = \\{M(n) \\mid n \\in \\mathbf{N}; M(n) \\ne\\nearrow\\}.\n\\]\n\n\n\nThus, \\(S\\) is r.e. just if it can be listed out by some Turing\nmachine. Suppose that \\(S\\) is r.e. and its elements are\nenumerated by Turing machine \\(M\\) as above. We can then describe\nanother Turing machine, \\(P\\), which, on input \\(n\\), runs\n\\(M\\) in a round-robin fashion on all its possible inputs until\neventually \\(M\\) outputs \\(n\\). If this happens then\n\\(P\\) halts and outputs \u201c1\u201d, i.e., \\(P(n)=1\\). If\n\\(n \\not\\in S\\), then\n\\(M\\) will never output \\(n\\), so \\(P(n)\\) will\nnever halt, i.e., \\(P(n)=\\nearrow\\).\n\n\n\nLet the notation \\(P(n)\\downarrow\\) mean that Turing\nmachine \\(P\\) on input \\(n\\) eventually halts. For a Turing\nmachine, \\(P\\), define \\(L(P)\\), the set\naccepted by \\(P\\), to be those numbers \\(n\\) such that\n\\(P\\) on input \\(n\\) eventually halts,\n\n\\[\nL(P) = \\{n \\mid P(n)\\downarrow \\}.\n\\]\n\n\n\nThe above argument shows that if a set \\(S\\) is r.e. then it is\naccepted by some Turing machine, \\(P\\), i.e., \\(S = L(P)\\). The\nconverse of this statement holds as well.  That is, \\(S\\) is r.e. if\nand only if it is accepted by some Turing machine, \\(P\\).\n\n\nWe say that a set, \\(S\\), is decidable if and only if there\nis a total Turing machine, \\(M\\), that decides for all \\(n \\in\n\\mathbf{N}\\) whether or not \\(n \\in S\\). Think of \u201c1\u201d as\n\u201cyes\u201d and \u201c0\u201d as \u201cno\u201d. For all\n\\(n\\in \\mathbf{N}\\), if \\(n \\in S\\), then \\(M(n) = 1\\), i.e., \\(M\\) on\ninput \\(n\\) eventually halts and outputs \u201cyes\u201d, whereas if\n\\(n \\not\\in S\\), then \\(M(n) = 0\\), i.e., \\(M\\) on input \\(n\\)\neventually halts and outputs \u201cno\u201d. Synonyms for decidable\nare:\ncomputable, solvable, and recursive.\n\n\nFor \\(S \\subseteq \\mathbf{N}\\), the complement of\n\\(S\\) is \\(\\mathbf{N} - S\\), i.e., the set of all\nnatural numbers not in \\(S\\). We say that the set \\(S\\) is\nco-r.e. if and only if its complement is r.e. If a set,\n\\(S\\), is r.e. and co-r.e. then we can list out all of its\nelements in one column and we can list out all of its non-elements in a\nsecond column. In this way we can decide whether or not a given\nelement, \\(n\\), is in \\(S\\): just scan the two columns and\nwait for \\(n\\) to show up. If it shows up in the first column then\n\\(n \\in S\\). Otherwise it will show up in the second\ncolumn and \\(n \\not\\in S\\).\nIn fact, a set is recursive iff it is r.e. and co-r.e.\n",
    "section_title": "2.3 Computable Functions and Enumerability",
    "entry_title": "Computability and Complexity",
    "hierarchy_title": "Computability and Complexity || Turing Machines || Computable Functions and Enumerability",
    "tokenized_text": [
        "turing",
        "machine",
        "computable",
        "function",
        "enumerability",
        "computable",
        "function",
        "enumerability",
        "since",
        "turing",
        "machine",
        "might",
        "halt",
        "certain",
        "input",
        "careful",
        "define",
        "function",
        "computable",
        "turing",
        "machine",
        "let",
        "natural",
        "number",
        "mathbf",
        "n",
        "set",
        "ldots",
        "let",
        "u",
        "consider",
        "turing",
        "machine",
        "partial",
        "function",
        "mathbf",
        "n",
        "mathbf",
        "n",
        "let",
        "m",
        "turing",
        "machine",
        "n",
        "natural",
        "number",
        "say",
        "m",
        "tape",
        "contains",
        "number",
        "n",
        "m",
        "tape",
        "begin",
        "binary",
        "representation",
        "number",
        "n",
        "unnecessary",
        "leading",
        "followed",
        "blank",
        "symbol",
        "start",
        "turing",
        "machine",
        "m",
        "tape",
        "containing",
        "n",
        "eventually",
        "halt",
        "tape",
        "containing",
        "m",
        "say",
        "m",
        "input",
        "n",
        "computes",
        "n",
        "m",
        "start",
        "m",
        "input",
        "n",
        "either",
        "never",
        "halt",
        "halt",
        "tape",
        "contain",
        "natural",
        "number",
        "eg",
        "leading",
        "digit",
        "interspersed",
        "blank",
        "symbol",
        "say",
        "n",
        "undefined",
        "symbol",
        "n",
        "nearrow",
        "thus",
        "associate",
        "turing",
        "machine",
        "m",
        "partial",
        "function",
        "mathbf",
        "n",
        "rightarrow",
        "mathbf",
        "n",
        "cup",
        "nearrow",
        "say",
        "function",
        "m",
        "total",
        "nin",
        "mathbf",
        "n",
        "n",
        "in",
        "mathbf",
        "n",
        "ie",
        "m",
        "n",
        "always",
        "defined",
        "formally",
        "define",
        "mean",
        "set",
        "recursively",
        "enumerable",
        "re",
        "earlier",
        "described",
        "informally",
        "let",
        "subseteq",
        "mathbf",
        "n",
        "s",
        "re",
        "turing",
        "machine",
        "m",
        "s",
        "image",
        "function",
        "computed",
        "m",
        "symbol",
        "n",
        "mid",
        "n",
        "in",
        "mathbf",
        "n",
        "n",
        "nenearrow",
        "thus",
        "s",
        "re",
        "listed",
        "turing",
        "machine",
        "suppose",
        "s",
        "re",
        "element",
        "enumerated",
        "turing",
        "machine",
        "m",
        "describe",
        "another",
        "turing",
        "machine",
        "p",
        "input",
        "n",
        "run",
        "m",
        "roundrobin",
        "fashion",
        "possible",
        "input",
        "eventually",
        "m",
        "output",
        "n",
        "happens",
        "p",
        "halt",
        "output",
        "ie",
        "p",
        "n",
        "n",
        "notin",
        "s",
        "m",
        "never",
        "output",
        "n",
        "p",
        "n",
        "never",
        "halt",
        "ie",
        "p",
        "n",
        "nearrow",
        "let",
        "notation",
        "p",
        "n",
        "downarrow",
        "mean",
        "turing",
        "machine",
        "p",
        "input",
        "n",
        "eventually",
        "halt",
        "turing",
        "machine",
        "p",
        "define",
        "l",
        "p",
        "set",
        "accepted",
        "p",
        "number",
        "n",
        "p",
        "input",
        "n",
        "eventually",
        "halt",
        "l",
        "p",
        "n",
        "mid",
        "p",
        "n",
        "downarrow",
        "argument",
        "show",
        "set",
        "s",
        "re",
        "accepted",
        "turing",
        "machine",
        "p",
        "ie",
        "l",
        "p",
        "converse",
        "statement",
        "hold",
        "well",
        "s",
        "re",
        "accepted",
        "turing",
        "machine",
        "p",
        "say",
        "set",
        "s",
        "decidable",
        "total",
        "turing",
        "machine",
        "m",
        "decides",
        "n",
        "in",
        "mathbf",
        "n",
        "whether",
        "n",
        "in",
        "s",
        "think",
        "yes",
        "nin",
        "mathbf",
        "n",
        "n",
        "in",
        "s",
        "n",
        "ie",
        "m",
        "input",
        "n",
        "eventually",
        "halt",
        "output",
        "yes",
        "whereas",
        "n",
        "notin",
        "s",
        "n",
        "ie",
        "m",
        "input",
        "n",
        "eventually",
        "halt",
        "output",
        "synonym",
        "decidable",
        "computable",
        "solvable",
        "recursive",
        "subseteq",
        "mathbf",
        "n",
        "complement",
        "s",
        "mathbf",
        "n",
        "s",
        "ie",
        "set",
        "natural",
        "number",
        "s",
        "say",
        "set",
        "s",
        "core",
        "complement",
        "re",
        "set",
        "s",
        "re",
        "core",
        "list",
        "element",
        "one",
        "column",
        "list",
        "nonelements",
        "second",
        "column",
        "way",
        "decide",
        "whether",
        "given",
        "element",
        "n",
        "s",
        "scan",
        "two",
        "column",
        "wait",
        "n",
        "show",
        "show",
        "first",
        "column",
        "n",
        "in",
        "s",
        "otherwise",
        "show",
        "second",
        "column",
        "n",
        "notin",
        "s",
        "fact",
        "set",
        "recursive",
        "iff",
        "re",
        "core"
    ]
}