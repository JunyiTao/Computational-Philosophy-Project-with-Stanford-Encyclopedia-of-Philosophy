{
    "main_text": "Alternative Historical Models of Computability || \u03bb-Definability\n4.2 \u03bb-Definability\n\nChurch\u2019s \u03bb-calculus has its origin in the papers (Church\n1932, 1933) and which were intended as a logical foundation for\nmathematics. It was Church\u2019s conviction at that time that this\ndifferent formal approach might avoid G\u00f6del incompleteness (Sieg\n1997: 177). However, the logical system proposed by Church was proven\ninconsistent by his two PhD students Stephen C. Kleene and Barkley\nRosser and so they started to focus on a subpart of that logic which\nwas basically the \u03bb-calculus. Church, Kleene and Rosser started\nto \u03bb-define any calculable function they could think of and\nquite soon Church proposed to define effective calculability in terms\nof \u03bb-definability. However, it was only after Church, Kleene\nand Rosser had established that general recursiveness and\n\u03bb-definability are equivalent that Church announced his thesis\npublicly and in terms of general recursive functions rather than\n\u03bb-definability (Davis 1982; Sieg 1997).\n\nIn \u03bb-calculus there are only two types of symbols. The three\nprimitive symbols \u03bb, (, ) also called the improper symbols, and\nan infinite list of variables. There are three rules to define the\nwell-formed formulas of \u03bb-calculus, called\n\u03bb-formulas.\n\nThe \u03bb-formulas are first of all the variables\nthemselves.\nIf P is a \u03bb-formula containing x as\na free variable then \\(\\lambda x[\\textbf{P}]\\) is also a\n\u03bb-formula. The \u03bb-operator is used to bind variables and\nit thus converts an expression containing free variables into one that\ndenotes a function\nIf M and N are \u03bb-formulas\nthen so is {M}(N), where\n{M}(N) is to be understood as the\napplication of the function M to\nN.\n\n\nThe \u03bb-formulas, or well-formed formulas of \u03bb-calculus\nare all and only those formulas that result from (repeated)\napplication of these three rules.\n\nThere are three operations or rules of conversion. Let us define\n\\(\\textrm{S}_{\\mathbf{N}}^{x}\\mathbf{M}|\\) as standing for the formula\nthat results by substitution of N for x in\nM.\n\nReduction. To replace any part \\(\\{\\lambda x\n\\mathbf{[M]}\\} (\\mathbf{N})\\) of a formula by\n\\(\\textrm{S}_{\\mathbf{N}}^{x}\\mathbf{M}|\\) provided that the bound\nvariables of M are distinct both from x and\nfrom the free variables of N. For example \\(\\{\\lambda\nx [x^{2}]\\}(2)\\) reduces to \\(2^{2}\\)\nExpansion To replace any part\n\\(\\textrm{S}_{\\mathbf{N}}^{x}\\mathbf{M}|\\) of a formula by \\(\\{\\lambda\nx \\mathbf{[M]}\\} (\\mathbf{N})\\) provided that \\(((\\lambda x\n\\mathbf{M}) \\mathbf{N})\\) is well-formed and the bound variables of\nM are distinct both from x and from the free\nvariables in N. For example, \\(2^{2}\\) can be\nexpanded to \\(\\{\\lambda x [x^{2}]\\}(2)\\)\nChange of bound variable To replace any part\nM of a formula by\n\\(\\textrm{S}_{\\textrm{y}}^{x}\\mathbf{M}|\\) provided that x is\nnot a free variable of M and y does not occur\nin M. For example changing \\(\\{\\lambda x [x^{2}]\\}\\)\nto \\(\\{\\lambda y [y^{2}]\\}\\)\n\n\nChurch introduces the following abbreviations to define the natural\nnumbers in \u03bb-calculus:  \n\n\\[\\begin{array}{l}\n1 \\rightarrow \\lambda yx.yx,\\\\\n2 \\rightarrow \\lambda yx.y(yx),\\\\\n3 \\rightarrow \\lambda yx.y(y(yx)),\\\\\n\\ldots \n\\end{array}\\]\n\n\nUsing this definition, it is possible to \u03bb-define\nfunctions over the positive integers. A function F of one\npositive integer is \u03bb-definable if we can find a\n\u03bb-formula F, such that if \\(F(m) = n\\) and\nm and n are \u03bb-formulas\nstanding for the integers m and n, then the\n\u03bb-formula \\(\\{\\mathbf{F}\\} (\\mathbf{m})\\) can be\nconverted to n by applying the conversion\nrules of \u03bb-calculus. Thus, for example, the successor function\nS, first introduced by Church, can be \u03bb-defined as\nfollows:  \n\n\\[S \\rightarrow \\lambda abc. b(abc)\\]\n\n\nTo give an example, applying S to the \u03bb-formula standing\nfor 2, we get:  \n\n\\[\\begin{align}\n\\big(\\lambda abc. b(abc)\\big ) \\big(\\lambda yx. y(yx)\\big) \\\\ \n\\rightarrow \\lambda bc. b\\big( \\big(\\lambda yx. y(yx)\\big) bc\\big)\\\\ \n\\rightarrow \\lambda bc. b\\big( \\big(\\lambda x. b(bx)\\big) c\\big)\\\\ \n\\rightarrow \\lambda bc. b (b(bc))\n\\end{align}\\]\n\n\nToday, \u03bb-calculus is considered to be a basic model in the\ntheory of programming.\n",
    "section_title": "4.2 \u03bb-Definability",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Alternative Historical Models of Computability || \u03bb-Definability",
    "tokenized_text": [
        "alternative",
        "historical",
        "model",
        "computability",
        "\u03bbdefinability",
        "\u03bbdefinability",
        "church",
        "\u03bbcalculus",
        "origin",
        "paper",
        "church",
        "intended",
        "logical",
        "foundation",
        "mathematics",
        "church",
        "conviction",
        "time",
        "different",
        "formal",
        "approach",
        "might",
        "avoid",
        "g\u00f6del",
        "incompleteness",
        "sieg",
        "however",
        "logical",
        "system",
        "proposed",
        "church",
        "proven",
        "inconsistent",
        "two",
        "phd",
        "student",
        "stephen",
        "c",
        "kleene",
        "barkley",
        "rosser",
        "started",
        "focus",
        "subpart",
        "logic",
        "basically",
        "\u03bbcalculus",
        "church",
        "kleene",
        "rosser",
        "started",
        "\u03bbdefine",
        "calculable",
        "function",
        "could",
        "think",
        "quite",
        "soon",
        "church",
        "proposed",
        "define",
        "effective",
        "calculability",
        "term",
        "\u03bbdefinability",
        "however",
        "church",
        "kleene",
        "rosser",
        "established",
        "general",
        "recursiveness",
        "\u03bbdefinability",
        "equivalent",
        "church",
        "announced",
        "thesis",
        "publicly",
        "term",
        "general",
        "recursive",
        "function",
        "rather",
        "\u03bbdefinability",
        "davis",
        "sieg",
        "\u03bbcalculus",
        "two",
        "type",
        "symbol",
        "three",
        "primitive",
        "symbol",
        "\u03bb",
        "also",
        "called",
        "improper",
        "symbol",
        "infinite",
        "list",
        "variable",
        "three",
        "rule",
        "define",
        "wellformed",
        "formula",
        "\u03bbcalculus",
        "called",
        "\u03bbformulas",
        "\u03bbformulas",
        "first",
        "variable",
        "p",
        "\u03bbformula",
        "containing",
        "x",
        "free",
        "variable",
        "lambda",
        "x",
        "textbf",
        "p",
        "also",
        "\u03bbformula",
        "\u03bboperator",
        "used",
        "bind",
        "variable",
        "thus",
        "convert",
        "expression",
        "containing",
        "free",
        "variable",
        "one",
        "denotes",
        "function",
        "n",
        "\u03bbformulas",
        "n",
        "n",
        "understood",
        "application",
        "function",
        "n",
        "\u03bbformulas",
        "wellformed",
        "formula",
        "\u03bbcalculus",
        "formula",
        "result",
        "repeated",
        "application",
        "three",
        "rule",
        "three",
        "operation",
        "rule",
        "conversion",
        "let",
        "u",
        "define",
        "textrm",
        "_",
        "mathbf",
        "n",
        "x",
        "mathbf",
        "standing",
        "formula",
        "result",
        "substitution",
        "n",
        "x",
        "m",
        "reduction",
        "replace",
        "part",
        "lambda",
        "x",
        "mathbf",
        "mathbf",
        "n",
        "formula",
        "textrm",
        "_",
        "mathbf",
        "n",
        "x",
        "mathbf",
        "provided",
        "bound",
        "variable",
        "distinct",
        "x",
        "free",
        "variable",
        "n",
        "example",
        "lambda",
        "x",
        "x",
        "reduces",
        "expansion",
        "replace",
        "part",
        "textrm",
        "_",
        "mathbf",
        "n",
        "x",
        "mathbf",
        "formula",
        "lambda",
        "x",
        "mathbf",
        "mathbf",
        "n",
        "provided",
        "lambda",
        "x",
        "mathbf",
        "mathbf",
        "n",
        "wellformed",
        "bound",
        "variable",
        "distinct",
        "x",
        "free",
        "variable",
        "n",
        "example",
        "expanded",
        "lambda",
        "x",
        "x",
        "change",
        "bound",
        "variable",
        "replace",
        "part",
        "formula",
        "textrm",
        "_",
        "textrm",
        "x",
        "mathbf",
        "provided",
        "x",
        "free",
        "variable",
        "occur",
        "m",
        "example",
        "changing",
        "lambda",
        "x",
        "x",
        "lambda",
        "y",
        "church",
        "introduces",
        "following",
        "abbreviation",
        "define",
        "natural",
        "number",
        "\u03bbcalculus",
        "begin",
        "array",
        "l",
        "rightarrow",
        "lambda",
        "yxyx",
        "rightarrow",
        "lambda",
        "yxy",
        "yx",
        "rightarrow",
        "lambda",
        "yxy",
        "yx",
        "ldots",
        "end",
        "array",
        "using",
        "definition",
        "possible",
        "\u03bbdefine",
        "function",
        "positive",
        "integer",
        "function",
        "f",
        "one",
        "positive",
        "integer",
        "\u03bbdefinable",
        "find",
        "\u03bbformula",
        "f",
        "f",
        "n",
        "n",
        "\u03bbformulas",
        "standing",
        "integer",
        "n",
        "\u03bbformula",
        "mathbf",
        "f",
        "mathbf",
        "converted",
        "n",
        "applying",
        "conversion",
        "rule",
        "\u03bbcalculus",
        "thus",
        "example",
        "successor",
        "function",
        "first",
        "introduced",
        "church",
        "\u03bbdefined",
        "follows",
        "rightarrow",
        "lambda",
        "abc",
        "b",
        "abc",
        "give",
        "example",
        "applying",
        "\u03bbformula",
        "standing",
        "get",
        "begin",
        "align",
        "big",
        "lambda",
        "abc",
        "b",
        "abc",
        "big",
        "big",
        "lambda",
        "yx",
        "yx",
        "big",
        "rightarrow",
        "lambda",
        "bc",
        "bbig",
        "big",
        "lambda",
        "yx",
        "yx",
        "big",
        "bcbig",
        "rightarrow",
        "lambda",
        "bc",
        "bbig",
        "big",
        "lambda",
        "x",
        "b",
        "bx",
        "big",
        "cbig",
        "rightarrow",
        "lambda",
        "bc",
        "b",
        "b",
        "bc",
        "end",
        "align",
        "today",
        "\u03bbcalculus",
        "considered",
        "basic",
        "model",
        "theory",
        "programming"
    ]
}