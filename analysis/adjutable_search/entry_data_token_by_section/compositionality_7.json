{
    "main_text": "Formal Statement\n2. Formal Statement\n\nMontague (1970) suggested a perspicuous way to capture the principle\nof compositionality formally. The key idea is that compositionality\nrequires the existence of a homomorphism between the\nexpressions of a language and the meanings of those expressions.\n\nLet us think of the expressions of a language as a set upon which a\nnumber of operations (syntactic rules) are defined. Let us require\nthat syntactic rules always apply to a fixed number of expressions and\nyield a single expression, and let us allow that syntactic rules be\nundefined for certain expressions. So, a syntactic algebra is\na partial algebra \\(\\mathbf{E} = \\langle E, (F_{\\gamma})_{\\gamma \\in\n\\Gamma}\\rangle\\), where E is the set of (simple and complex)\nexpressions and every \\(F_{\\gamma}\\) is a partial syntactic operation\non E with a fixed arity. The syntactic algebra is interpreted\nthrough a meaning-assignment m, a function from E to\nM, the set of available meanings for the expressions of\nE.\n\nConsider now F, a k-ary syntactic operation on E.\nm is F-compositional just in case there is a\nk-ary partial function G on M such that whenever\n\\(F(e_1 ,\\ldots ,e_k)\\) is defined, \n\n\\[m(F(e_1 ,\\ldots ,e_k)) = G(m(e_1),\\ldots ,m(e_k)).\\]\n\n\n(In English: there is a partial function G from the meanings of\n\\(e_1 ,\\ldots ,e_k\\) to the meaning of the expression built from \\(e_1\n,\\ldots ,e_k\\) through an application of the syntactic rule\nF.)\n\nFinally, we can say that m is compositional\nsimpliciter just in case m is F-compositional\nfor each syntactic operation in E. Whenever m\nis compositional, it induces the semantic algebra \\(\\mathbf{M} =\n\\langle M, (G_{\\gamma})_{\\gamma \\in \\Gamma}\\rangle\\) on M, and\nit is a homomorphism between E and\nM; cf. Westerst\u00e5hl (1998). (For details,\nvariants, and formal results, see Janssen (1983, 1997), Hodges (2001), and\nPagin & Westerst\u00e5hl (2010a). For generalizations that cover\nlanguages with various sorts of context-dependence, see Pagin (2005),\nPagin & Pelletier (2007), and Westerst\u00e5hl (2012).)\n\nSince there are no restrictions on what m assigns to members of\nE, the formal statement captures both compositionality of\nreference and compositionality of meaning. As stated, the principle\ncaptures local distributive language-bound compositionality: it\nrequires that each application of each syntactic rule within a\nlanguage be matched by an application of an appropriate semantic\nfunction. To capture cross-linguistic compositionality is easy: all we\nneed to say is that the expressions within E are the\nexpressions of all possible human languages. (Of course, if we allow\nthe syntactic algebra to contain expressions of different languages,\nwe may want to insist that syntactic operations map expressions of a\nlanguage onto complex expressions of the same language and that they\nremain undefined for cases when their argument positions are filled by\nexpressions from different\n languages.[14])\n \n\nTo capture global compositionality is more complicated. Here is an\nattempt. Let us say that the expressions e and \\(e'\\) are\nlocal equivalents just in case they are the results of\napplying the same syntactic operation to lists of expressions such\nthat corresponding members of the lists are synonymous. (More\nformally: for some natural number k there is a k-ary\nF in E, and there are some expressions\n\\(e_1, \\ldots, e_k\\), \\(e_1 ', \\ldots, e_k '\\) in E,\nsuch that \\(e = F(e_1 ,\\ldots ,e_k)\\), \\(e' = F(e_1 ',\\ldots ,e_k\n')\\), and for every \\(1\\le i \\le k\\), \\(m(e_i) = m(e_i ')\\).) It is\nclear that m is locally compositional just in case locally\nequivalent pairs of expressions are all synonyms. Let us say that the\nexpressions e and \\(e'\\) are global equivalents just\nin case they are the results of applying the same syntactic operation\nto lists of expressions such that corresponding members of the lists\nare either (i) simple and synonymous or (ii) complex and globally\nequivalent. (Here is the recursive definition more formally. Let us\nsay that the expressions e and \\(e'\\) are 1-global\nequivalents just in case they are synonymous simple expressions.\nLet us say that the expressions e and \\(e'\\) are n-global\nequivalents just in case for some natural number k there\nis a k-ary F in E, and there are some\nexpressions \\(e_1 ,\\ldots ,e_k, e_1 ',\\ldots ,e_k '\\) in E,\nsuch that \\(e = F(e_1 ,\\ldots ,e_k), e' = F(e_1 ',\\ldots ,e_k ')\\),\nand for every \\(1 \\le i \\le k\\) there is a \\(1 \\le j \\lt n\\) such that\n\\(e_i\\) and \\(e_i '\\) are j-global equivalents. Finally, let us\nsay that the expressions e and \\(e'\\) are global\nequivalents just in case for some natural number n they\nare n-global\n equivalents.)[15]\n I suggest that m is globally compositional just in case\nglobally equivalent pairs of expressions are all synonyms.\n\nCollective compositionality is a further weakening of global\ncompositionality. It could be formalized using the same trick. Thus,\nwe can say that m is collectively compositional just in case\ncollectively equivalent pairs of expressions are all synonyms, where\nwe define collective equivalence exactly like global equivalence with\none difference. In the recursive step we demand not only that \\(e_i\\)\nand \\(e_i '\\) be j-collective equivalents but also that the\nvery same semantic relations should hold among \\(e_1 ,\\ldots ,e_k\\)\nand among \\(e_1 ',\\ldots ,e_k '\\). Thus, we leave space for the\npossibility that \u2018Cicero is Cicero\u2019 is not collectively\nequivalent to \u2018Cicero is Tully\u2019, even though they have the\nsame structure and their proper constituents are all collectively\nequivalent; see\n section 1.4.\n \n",
    "section_title": "2. Formal Statement",
    "entry_title": "Compositionality",
    "hierarchy_title": "Compositionality || Formal Statement",
    "tokenized_text": [
        "formal",
        "statement",
        "formal",
        "statement",
        "montague",
        "suggested",
        "perspicuous",
        "way",
        "capture",
        "principle",
        "compositionality",
        "formally",
        "key",
        "idea",
        "compositionality",
        "requires",
        "existence",
        "homomorphism",
        "expression",
        "language",
        "meaning",
        "expression",
        "let",
        "u",
        "think",
        "expression",
        "language",
        "set",
        "upon",
        "number",
        "operation",
        "syntactic",
        "rule",
        "defined",
        "let",
        "u",
        "require",
        "syntactic",
        "rule",
        "always",
        "apply",
        "fixed",
        "number",
        "expression",
        "yield",
        "single",
        "expression",
        "let",
        "u",
        "allow",
        "syntactic",
        "rule",
        "undefined",
        "certain",
        "expression",
        "syntactic",
        "algebra",
        "partial",
        "algebra",
        "mathbf",
        "e",
        "langle",
        "e",
        "f_",
        "gamma",
        "_",
        "gamma",
        "in",
        "gamma",
        "rangle",
        "e",
        "set",
        "simple",
        "complex",
        "expression",
        "every",
        "f_",
        "gamma",
        "partial",
        "syntactic",
        "operation",
        "e",
        "fixed",
        "arity",
        "syntactic",
        "algebra",
        "interpreted",
        "meaningassignment",
        "function",
        "e",
        "set",
        "available",
        "meaning",
        "expression",
        "e",
        "consider",
        "f",
        "kary",
        "syntactic",
        "operation",
        "e",
        "fcompositional",
        "case",
        "kary",
        "partial",
        "function",
        "g",
        "whenever",
        "f",
        "e_",
        "ldots",
        "e_k",
        "defined",
        "f",
        "e_",
        "ldots",
        "e_k",
        "g",
        "e_",
        "ldots",
        "e_k",
        "english",
        "partial",
        "function",
        "g",
        "meaning",
        "e_",
        "ldots",
        "e_k",
        "meaning",
        "expression",
        "built",
        "e_",
        "ldots",
        "e_k",
        "application",
        "syntactic",
        "rule",
        "f",
        "finally",
        "say",
        "compositional",
        "simpliciter",
        "case",
        "fcompositional",
        "syntactic",
        "operation",
        "e",
        "whenever",
        "compositional",
        "induces",
        "semantic",
        "algebra",
        "mathbf",
        "langle",
        "g_",
        "gamma",
        "_",
        "gamma",
        "in",
        "gamma",
        "rangle",
        "homomorphism",
        "e",
        "cf",
        "westerst\u00e5hl",
        "detail",
        "variant",
        "formal",
        "result",
        "see",
        "janssen",
        "hodges",
        "pagin",
        "westerst\u00e5hl",
        "a",
        "generalization",
        "cover",
        "language",
        "various",
        "sort",
        "contextdependence",
        "see",
        "pagin",
        "pagin",
        "pelletier",
        "westerst\u00e5hl",
        "since",
        "restriction",
        "assigns",
        "member",
        "e",
        "formal",
        "statement",
        "capture",
        "compositionality",
        "reference",
        "compositionality",
        "meaning",
        "stated",
        "principle",
        "capture",
        "local",
        "distributive",
        "languagebound",
        "compositionality",
        "requires",
        "application",
        "syntactic",
        "rule",
        "within",
        "language",
        "matched",
        "application",
        "appropriate",
        "semantic",
        "function",
        "capture",
        "crosslinguistic",
        "compositionality",
        "easy",
        "need",
        "say",
        "expression",
        "within",
        "e",
        "expression",
        "possible",
        "human",
        "language",
        "course",
        "allow",
        "syntactic",
        "algebra",
        "contain",
        "expression",
        "different",
        "language",
        "may",
        "want",
        "insist",
        "syntactic",
        "operation",
        "map",
        "expression",
        "language",
        "onto",
        "complex",
        "expression",
        "language",
        "remain",
        "undefined",
        "case",
        "argument",
        "position",
        "filled",
        "expression",
        "different",
        "language",
        "capture",
        "global",
        "compositionality",
        "complicated",
        "attempt",
        "let",
        "u",
        "say",
        "expression",
        "e",
        "e",
        "local",
        "equivalent",
        "case",
        "result",
        "applying",
        "syntactic",
        "operation",
        "list",
        "expression",
        "corresponding",
        "member",
        "list",
        "synonymous",
        "formally",
        "natural",
        "number",
        "k",
        "kary",
        "f",
        "e",
        "expression",
        "e_",
        "ldots",
        "e_k",
        "e_",
        "ldots",
        "e_k",
        "e",
        "e",
        "f",
        "e_",
        "ldots",
        "e_k",
        "e",
        "f",
        "e_",
        "ldots",
        "e_k",
        "every",
        "le",
        "le",
        "k",
        "e_i",
        "e_i",
        "clear",
        "locally",
        "compositional",
        "case",
        "locally",
        "equivalent",
        "pair",
        "expression",
        "synonym",
        "let",
        "u",
        "say",
        "expression",
        "e",
        "e",
        "global",
        "equivalent",
        "case",
        "result",
        "applying",
        "syntactic",
        "operation",
        "list",
        "expression",
        "corresponding",
        "member",
        "list",
        "either",
        "simple",
        "synonymous",
        "ii",
        "complex",
        "globally",
        "equivalent",
        "recursive",
        "definition",
        "formally",
        "let",
        "u",
        "say",
        "expression",
        "e",
        "e",
        "global",
        "equivalent",
        "case",
        "synonymous",
        "simple",
        "expression",
        "let",
        "u",
        "say",
        "expression",
        "e",
        "e",
        "nglobal",
        "equivalent",
        "case",
        "natural",
        "number",
        "k",
        "kary",
        "f",
        "e",
        "expression",
        "e_",
        "ldots",
        "e_k",
        "e_",
        "ldots",
        "e_k",
        "e",
        "e",
        "f",
        "e_",
        "ldots",
        "e_k",
        "e",
        "f",
        "e_",
        "ldots",
        "e_k",
        "every",
        "le",
        "le",
        "k",
        "le",
        "j",
        "lt",
        "n",
        "e_i",
        "e_i",
        "jglobal",
        "equivalent",
        "finally",
        "let",
        "u",
        "say",
        "expression",
        "e",
        "e",
        "global",
        "equivalent",
        "case",
        "natural",
        "number",
        "n",
        "nglobal",
        "equivalent",
        "suggest",
        "globally",
        "compositional",
        "case",
        "globally",
        "equivalent",
        "pair",
        "expression",
        "synonym",
        "collective",
        "compositionality",
        "weakening",
        "global",
        "compositionality",
        "could",
        "formalized",
        "using",
        "trick",
        "thus",
        "say",
        "collectively",
        "compositional",
        "case",
        "collectively",
        "equivalent",
        "pair",
        "expression",
        "synonym",
        "define",
        "collective",
        "equivalence",
        "exactly",
        "like",
        "global",
        "equivalence",
        "one",
        "difference",
        "recursive",
        "step",
        "demand",
        "e_i",
        "e_i",
        "jcollective",
        "equivalent",
        "also",
        "semantic",
        "relation",
        "hold",
        "among",
        "e_",
        "ldots",
        "e_k",
        "among",
        "e_",
        "ldots",
        "e_k",
        "thus",
        "leave",
        "space",
        "possibility",
        "cicero",
        "cicero",
        "collectively",
        "equivalent",
        "cicero",
        "tully",
        "even",
        "though",
        "structure",
        "proper",
        "constituent",
        "collectively",
        "equivalent",
        "see",
        "section"
    ]
}