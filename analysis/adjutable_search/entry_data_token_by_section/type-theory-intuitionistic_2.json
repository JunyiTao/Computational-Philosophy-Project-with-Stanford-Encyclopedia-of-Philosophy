{
    "main_text": "Propositions as Types || The Curry-Howard Correspondence\n2.2 The Curry-Howard Correspondence\nAs already mentioned, the principle that\n\na proposition is the type of its proofs.\n\nis fundamental to intuitionistic type theory. This principle is\nalso known as the Curry-Howard correspondence or even Curry-Howard\nisomorphism. Curry discovered a correspondence between the\nimplicational fragment of intuitionistic logic and the simply typed\nlambda-calculus. Howard extended this correspondence to first-order\npredicate logic. In intuitionistic type theory this correspondence\nbecomes an identification of proposition and types, which has\nbeen extended to include quantification over higher types and\nmore.\n",
    "section_title": "2.2 The Curry-Howard Correspondence",
    "entry_title": "Intuitionistic Type Theory",
    "hierarchy_title": "Intuitionistic Type Theory || Propositions as Types || The Curry-Howard Correspondence",
    "tokenized_text": [
        "proposition",
        "type",
        "curryhoward",
        "correspondence",
        "curryhoward",
        "correspondence",
        "already",
        "mentioned",
        "principle",
        "proposition",
        "type",
        "proof",
        "fundamental",
        "intuitionistic",
        "type",
        "theory",
        "principle",
        "also",
        "known",
        "curryhoward",
        "correspondence",
        "even",
        "curryhoward",
        "isomorphism",
        "curry",
        "discovered",
        "correspondence",
        "implicational",
        "fragment",
        "intuitionistic",
        "logic",
        "simply",
        "typed",
        "lambdacalculus",
        "howard",
        "extended",
        "correspondence",
        "firstorder",
        "predicate",
        "logic",
        "intuitionistic",
        "type",
        "theory",
        "correspondence",
        "becomes",
        "identification",
        "proposition",
        "type",
        "extended",
        "include",
        "quantification",
        "higher",
        "type"
    ]
}