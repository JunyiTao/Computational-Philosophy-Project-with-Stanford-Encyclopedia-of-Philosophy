{
    "main_text": "Variants of the Theory || Impredicative Type Theory\n7.5 Proof Assistants\nIn 1979 Martin-L\u00f6f wrote the paper \u201cConstructive Mathematics\nand Computer Programming\u201d where he explained that intuitionistic\ntype theory is a programming language which can also be used as a\nformal foundation for constructive mathematics. Shortly after that,\ninteractive proof systems which help the user to derive valid\njudgments in the theory, so called proof assistants, were\ndeveloped.\nOne of the first systems was the NuPrl system (PRL Group 1986),\nwhich is based on an extensional type theory similar to (Martin-L\u00f6f\n1982).\nSystems based on versions of intensional type theory go back to the\ntype-checker for the impredicative calculus of constructions which was\nwritten around 1984 by Coquand and Huet. This led to the Coq system,\nwhich is based on the calculus of inductive constructions\n(Paulin-Mohring 1993), a theory which extends the calculus of\nconstruction with primitive inductive types and families. The\nencodings of the pure calculus of constructions were found to be\ninconvenient, since the full elimination rules could not be derived\nand instead had to be postulated. We also remark that the calculus of\ninductive constructions has a subsystem, the predicative calculus of\ninductive constructions, which follows the principles of\nMartin-L\u00f6f\u2019s intuitionistic type theory.\nAgda is another proof assistant which is based on the logical\nframework formulation of intuitionistic type theory, but adds numerous\nfeatures inspired by practical programming languages (Norell 2008). It\nis an intensional theory with decidable judgments and a type-checker\nsimilar to Coq\u2019s. However, in contrast to Coq it is based on\nMartin-L\u00f6f\u2019s predicative intuitionistic type theory.\nThere are several other systems based either on the calculus of\nconstructions (Lego, Matita, Lean) or on intuitionistic type theory\n(Epigram, Idris); see (Pollack 1994; Asperti et al. 2011; de Moura et al. 2015;\nMcBride and McKinna 2004; Brady 2011).\n",
    "section_title": "7.5 Proof Assistants",
    "entry_title": "Intuitionistic Type Theory",
    "hierarchy_title": "Intuitionistic Type Theory || Variants of the Theory || Impredicative Type Theory",
    "tokenized_text": [
        "variant",
        "theory",
        "impredicative",
        "type",
        "theory",
        "proof",
        "assistant",
        "martinl\u00f6f",
        "wrote",
        "paper",
        "constructive",
        "mathematics",
        "computer",
        "programming",
        "explained",
        "intuitionistic",
        "type",
        "theory",
        "programming",
        "language",
        "also",
        "used",
        "formal",
        "foundation",
        "constructive",
        "mathematics",
        "shortly",
        "interactive",
        "proof",
        "system",
        "help",
        "user",
        "derive",
        "valid",
        "judgment",
        "theory",
        "called",
        "proof",
        "assistant",
        "developed",
        "one",
        "first",
        "system",
        "nuprl",
        "system",
        "prl",
        "group",
        "based",
        "extensional",
        "type",
        "theory",
        "similar",
        "martinl\u00f6f",
        "system",
        "based",
        "version",
        "intensional",
        "type",
        "theory",
        "go",
        "back",
        "typechecker",
        "impredicative",
        "calculus",
        "construction",
        "written",
        "around",
        "coquand",
        "huet",
        "led",
        "coq",
        "system",
        "based",
        "calculus",
        "inductive",
        "construction",
        "paulinmohring",
        "theory",
        "extends",
        "calculus",
        "construction",
        "primitive",
        "inductive",
        "type",
        "family",
        "encoding",
        "pure",
        "calculus",
        "construction",
        "found",
        "inconvenient",
        "since",
        "full",
        "elimination",
        "rule",
        "could",
        "derived",
        "instead",
        "postulated",
        "also",
        "remark",
        "calculus",
        "inductive",
        "construction",
        "subsystem",
        "predicative",
        "calculus",
        "inductive",
        "construction",
        "follows",
        "principle",
        "martinl\u00f6f",
        "intuitionistic",
        "type",
        "theory",
        "agda",
        "another",
        "proof",
        "assistant",
        "based",
        "logical",
        "framework",
        "formulation",
        "intuitionistic",
        "type",
        "theory",
        "add",
        "numerous",
        "feature",
        "inspired",
        "practical",
        "programming",
        "language",
        "norell",
        "intensional",
        "theory",
        "decidable",
        "judgment",
        "typechecker",
        "similar",
        "coq",
        "however",
        "contrast",
        "coq",
        "based",
        "martinl\u00f6f",
        "predicative",
        "intuitionistic",
        "type",
        "theory",
        "several",
        "system",
        "based",
        "either",
        "calculus",
        "construction",
        "lego",
        "matita",
        "lean",
        "intuitionistic",
        "type",
        "theory",
        "epigram",
        "idris",
        "see",
        "pollack",
        "asperti",
        "et",
        "al",
        "de",
        "moura",
        "et",
        "al",
        "mcbride",
        "mckinna",
        "brady"
    ]
}