{
    "main_text": "Computing with Turing Machines || Variations on the Turing machine\n2.5 Variations on the Turing machine\n\nAs is clear from\n Sections 1.1\n and\n 1.2,\n there is a variety of definitions of the Turing machine. One can use\na quintuple or quadruple notation; one can have different types of\nsymbols or just one; one can have a two-way infinite or a one-way\ninfinite tape; etc. Several other less obvious modifications have been\nconsidered and used in the past. These modifications can be of two\nkinds: generalizations or restrictions. These do not result in\n\u201cstronger\u201d or \u201cweaker\u201d models. Viz. these\nmodified machines compute no more and no less than the Turing\ncomputable functions. This adds to the robustness of the Turing\nmachine definition.\nBinary machines\n\nIn his short 1936 note Post considers machines that either mark or unmark a square which\nmeans we have only two symbols \\(S_0\\) and \\(S_1\\) but he did not\nprove that this formulation captures exactly the Turing computable\nfunctions. It was Shannon who proved that for any Turing machine\nT with n symbols there is a Turing machine with two\nsymbols that simulates T (Shannon 1956). He also showed that\nfor any Turing machine with m states, there is a Turing machine\nwith only two states that simulates it.\nNon-erasing machines\n\nNon-erasing machines are machines that can only overprint \\(S_0\\). In\nMoore 1952, it was mentioned that Shannon proved that non-erasing\nmachines can compute what any Turing machine computes. This result was\ngiven in a context of actual digital computers of the 50s which relied\non punched tape (and so, for which, one cannot erase). Shannon\u2019s\nresult however remained unpublished. It was Wang who published the\nresult (Wang 1957).\nNon-writing machines\n\nIt was shown by Minsky that for every Turing machine there is a\nnon-writing Turing machine with two tapes that simulates it.\nMultiple tapes\n\nInstead of one tape one can consider a Turing machine with multiple\ntapes. This turned out the be very useful in several different\ncontexts. For instance, Minsky, used two-tape non-writing Turing machines to prove that a certain decision problem defined by Post (the decision problem for tag systems) is\nnon-Turing computable (Minsky 1961). Hartmanis and Stearns then,\nin their founding paper for computational complexity theory, proved\nthat any n-tape Turing machine reduces to a single tape Turing\nmachine and so anything that can be computed by an n-tape or\nmultitape Turing machine can also be computed by a single tape Turing\nmachine, and conversely (Hartmanis & Stearns 1965). They used\nmultitape machines because they were considered to be closer to actual\ndigital computers.\nn-dimensional Turing machines\n\nAnother variant is to consider Turing machines where the tape is not\none-dimensional but n-dimensional. This variant too reduces to\nthe one-dimensional variant.\nNon-deterministic machines\n\nAn apparently more radical reformulation of the notion of Turing\nmachine is that of non-deterministic Turing machines. As explained in\n 1.1,\n one fundamental condition of Turing\u2019s machines is the so-called\ndeterminacy condition, viz. the idea that at any given moment, the\nmachine\u2019s behavior is completely determined by the configuration\nor state it is in and the symbol it is scanning. Next to these, Turing\nalso mentions the idea of choice machines for which the next state is\nnot completely determined by the state and symbol pair. Instead, some\nexternal device makes a random choice of what to do next.\nNon-deterministic Turing machines are a kind of choice machines: for\neach state and symbol pair, the non-deterministic machine makes an\narbitrary choice between a finite (possibly zero) number of states.\nThus, unlike the computation of a deterministic Turing machine, the\ncomputation of a non-deterministic machine is a tree of possible\nconfiguration paths. One way to visualize the computation of a\nnon-deterministic Turing machine is that the machine spawns an exact\ncopy of itself and the tape for each alternative available transition,\nand each machine continues the computation. If any of the machines\nterminates successfully, then the entire computation terminates and\ninherits that machine\u2019s resulting tape. Notice the word\nsuccessfully in the preceding sentence. In this formulation, some\nstates are designated as accepting states and when the\nmachine terminates in one of these states, then the computation is\nsuccessful, otherwise the computation is unsuccessful and any other\nmachines continue in their search for a successful outcome. The\naddition of non-determinism to Turing machines does not alter the\nextent of Turing-computability. Non-determinism was introduced for\nfinite automata in the paper, Rabin & Scott 1959, where it is also\nshown that adding non-determinism does not result in more powerful\nautomata. Non-deterministic Turing machines are an important model in\nthe context of\n computational complexity theory.\nWeak and semi-weak machines\n\nWeak Turing machines are machines where some word over the alphabet is\nrepeated infinitely often to the left and right of the input.\nSemi-weak machines are machines where some word is repeated infinitely\noften either to the left or right of the input. These machines are\ngeneralizations of the standard model in which the initial tape\ncontains some finite word (possibly nil). They were introduced to\ndetermine smaller universal machines. Watanabe was the first to define\na universal semi-weak machine with six states and five symbols\n(Watanabe 1961). Recently, a number of researchers have determined\nseveral small weak and semi-weak universal Turing machines (e.g.,\nWoods & Neary 2007; Cook 2004)\n\nBesides these variants on the Turing machine model, there are also\nvariants that result in models which capture, in some well-defined\nsense, more than the (Turing)-computable functions. Examples of such\nmodels are oracle machines (Turing 1939), infinite-time Turing\nmachines (Hamkins & Lewis 2008) and accelerating Turing machines\n(Copeland 2002). There are various reasons for introducing such\nstronger models. Some are well-known models of computability or\nrecursion theory and are used in the theory of higher-order recursion\nand relative computability (oracle machines); others, like the\naccelerating machines, were introduced in the context of\n supertasks\n and the idea of providing physical models that \u201ccompute\u201d\nfunctions which are not Turing-computable.\n",
    "section_title": "2.5 Variations on the Turing machine",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Computing with Turing Machines || Variations on the Turing machine",
    "tokenized_text": [
        "computing",
        "turing",
        "machine",
        "variation",
        "turing",
        "machine",
        "variation",
        "turing",
        "machine",
        "clear",
        "section",
        "variety",
        "definition",
        "turing",
        "machine",
        "one",
        "use",
        "quintuple",
        "quadruple",
        "notation",
        "one",
        "different",
        "type",
        "symbol",
        "one",
        "one",
        "twoway",
        "infinite",
        "oneway",
        "infinite",
        "tape",
        "etc",
        "several",
        "le",
        "obvious",
        "modification",
        "considered",
        "used",
        "past",
        "modification",
        "two",
        "kind",
        "generalization",
        "restriction",
        "result",
        "stronger",
        "weaker",
        "model",
        "viz",
        "modified",
        "machine",
        "compute",
        "le",
        "turing",
        "computable",
        "function",
        "add",
        "robustness",
        "turing",
        "machine",
        "definition",
        "binary",
        "machine",
        "short",
        "note",
        "post",
        "considers",
        "machine",
        "either",
        "mark",
        "unmark",
        "square",
        "mean",
        "two",
        "symbol",
        "s_",
        "s_",
        "prove",
        "formulation",
        "capture",
        "exactly",
        "turing",
        "computable",
        "function",
        "shannon",
        "proved",
        "turing",
        "machine",
        "n",
        "symbol",
        "turing",
        "machine",
        "two",
        "symbol",
        "simulates",
        "shannon",
        "also",
        "showed",
        "turing",
        "machine",
        "state",
        "turing",
        "machine",
        "two",
        "state",
        "simulates",
        "nonerasing",
        "machine",
        "nonerasing",
        "machine",
        "machine",
        "overprint",
        "s_",
        "moore",
        "mentioned",
        "shannon",
        "proved",
        "nonerasing",
        "machine",
        "compute",
        "turing",
        "machine",
        "computes",
        "result",
        "given",
        "context",
        "actual",
        "digital",
        "computer",
        "relied",
        "punched",
        "tape",
        "one",
        "erase",
        "shannon",
        "result",
        "however",
        "remained",
        "unpublished",
        "wang",
        "published",
        "result",
        "wang",
        "nonwriting",
        "machine",
        "shown",
        "minsky",
        "every",
        "turing",
        "machine",
        "nonwriting",
        "turing",
        "machine",
        "two",
        "tape",
        "simulates",
        "multiple",
        "tape",
        "instead",
        "one",
        "tape",
        "one",
        "consider",
        "turing",
        "machine",
        "multiple",
        "tape",
        "turned",
        "useful",
        "several",
        "different",
        "context",
        "instance",
        "minsky",
        "used",
        "twotape",
        "nonwriting",
        "turing",
        "machine",
        "prove",
        "certain",
        "decision",
        "problem",
        "defined",
        "post",
        "decision",
        "problem",
        "tag",
        "system",
        "nonturing",
        "computable",
        "minsky",
        "hartmanis",
        "stearns",
        "founding",
        "paper",
        "computational",
        "complexity",
        "theory",
        "proved",
        "ntape",
        "turing",
        "machine",
        "reduces",
        "single",
        "tape",
        "turing",
        "machine",
        "anything",
        "computed",
        "ntape",
        "multitape",
        "turing",
        "machine",
        "also",
        "computed",
        "single",
        "tape",
        "turing",
        "machine",
        "conversely",
        "hartmanis",
        "stearns",
        "used",
        "multitape",
        "machine",
        "considered",
        "closer",
        "actual",
        "digital",
        "computer",
        "ndimensional",
        "turing",
        "machine",
        "another",
        "variant",
        "consider",
        "turing",
        "machine",
        "tape",
        "onedimensional",
        "ndimensional",
        "variant",
        "reduces",
        "onedimensional",
        "variant",
        "nondeterministic",
        "machine",
        "apparently",
        "radical",
        "reformulation",
        "notion",
        "turing",
        "machine",
        "nondeterministic",
        "turing",
        "machine",
        "explained",
        "one",
        "fundamental",
        "condition",
        "turing",
        "machine",
        "socalled",
        "determinacy",
        "condition",
        "viz",
        "idea",
        "given",
        "moment",
        "machine",
        "behavior",
        "completely",
        "determined",
        "configuration",
        "state",
        "symbol",
        "scanning",
        "next",
        "turing",
        "also",
        "mention",
        "idea",
        "choice",
        "machine",
        "next",
        "state",
        "completely",
        "determined",
        "state",
        "symbol",
        "pair",
        "instead",
        "external",
        "device",
        "make",
        "random",
        "choice",
        "next",
        "nondeterministic",
        "turing",
        "machine",
        "kind",
        "choice",
        "machine",
        "state",
        "symbol",
        "pair",
        "nondeterministic",
        "machine",
        "make",
        "arbitrary",
        "choice",
        "finite",
        "possibly",
        "zero",
        "number",
        "state",
        "thus",
        "unlike",
        "computation",
        "deterministic",
        "turing",
        "machine",
        "computation",
        "nondeterministic",
        "machine",
        "tree",
        "possible",
        "configuration",
        "path",
        "one",
        "way",
        "visualize",
        "computation",
        "nondeterministic",
        "turing",
        "machine",
        "machine",
        "spawn",
        "exact",
        "copy",
        "tape",
        "alternative",
        "available",
        "transition",
        "machine",
        "continues",
        "computation",
        "machine",
        "terminates",
        "successfully",
        "entire",
        "computation",
        "terminates",
        "inherits",
        "machine",
        "resulting",
        "tape",
        "notice",
        "word",
        "successfully",
        "preceding",
        "sentence",
        "formulation",
        "state",
        "designated",
        "accepting",
        "state",
        "machine",
        "terminates",
        "one",
        "state",
        "computation",
        "successful",
        "otherwise",
        "computation",
        "unsuccessful",
        "machine",
        "continue",
        "search",
        "successful",
        "outcome",
        "addition",
        "nondeterminism",
        "turing",
        "machine",
        "alter",
        "extent",
        "turingcomputability",
        "nondeterminism",
        "introduced",
        "finite",
        "automaton",
        "paper",
        "rabin",
        "scott",
        "also",
        "shown",
        "adding",
        "nondeterminism",
        "result",
        "powerful",
        "automaton",
        "nondeterministic",
        "turing",
        "machine",
        "important",
        "model",
        "context",
        "computational",
        "complexity",
        "theory",
        "weak",
        "semiweak",
        "machine",
        "weak",
        "turing",
        "machine",
        "machine",
        "word",
        "alphabet",
        "repeated",
        "infinitely",
        "often",
        "left",
        "right",
        "input",
        "semiweak",
        "machine",
        "machine",
        "word",
        "repeated",
        "infinitely",
        "often",
        "either",
        "left",
        "right",
        "input",
        "machine",
        "generalization",
        "standard",
        "model",
        "initial",
        "tape",
        "contains",
        "finite",
        "word",
        "possibly",
        "nil",
        "introduced",
        "determine",
        "smaller",
        "universal",
        "machine",
        "watanabe",
        "first",
        "define",
        "universal",
        "semiweak",
        "machine",
        "six",
        "state",
        "five",
        "symbol",
        "watanabe",
        "recently",
        "number",
        "researcher",
        "determined",
        "several",
        "small",
        "weak",
        "semiweak",
        "universal",
        "turing",
        "machine",
        "eg",
        "wood",
        "neary",
        "cook",
        "besides",
        "variant",
        "turing",
        "machine",
        "model",
        "also",
        "variant",
        "result",
        "model",
        "capture",
        "welldefined",
        "sense",
        "turing",
        "computable",
        "function",
        "example",
        "model",
        "oracle",
        "machine",
        "turing",
        "infinitetime",
        "turing",
        "machine",
        "hamkins",
        "lewis",
        "accelerating",
        "turing",
        "machine",
        "copeland",
        "various",
        "reason",
        "introducing",
        "stronger",
        "model",
        "wellknown",
        "model",
        "computability",
        "recursion",
        "theory",
        "used",
        "theory",
        "higherorder",
        "recursion",
        "relative",
        "computability",
        "oracle",
        "machine",
        "others",
        "like",
        "accelerating",
        "machine",
        "introduced",
        "context",
        "supertasks",
        "idea",
        "providing",
        "physical",
        "model",
        "compute",
        "function",
        "turingcomputable"
    ]
}