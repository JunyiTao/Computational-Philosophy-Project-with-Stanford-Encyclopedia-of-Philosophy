{
    "main_text": "The Infamous Power of Second-Order Logic || The collapse of the Completeness Theorem\n5.2 The collapse of the Completeness Theorem\n\nThe Completeness Theorem is one of the cornerstones of our\nunderstanding of first order logic. Also many extensions of first\norder logic have a Completeness Theorem, most notably the extension of\nfirst order logic by the\n generalized quantifier\n \u201cThere are uncountably many\u201d and the\n infinitary language\n \\(L_{\\omega_1\\omega}\\). We shall now see that there is no hope of a\nCompleteness Theorem for second-order logic. Later in\n \u00a79.1\n we shall modify the semantics so that a Completeness Theorem can be\nproved.\n\nBehind the failure of the Completeness Theorem is the fact that\nsecond-order logic is\u2014almost by definition\u2014able to say\nthat a set is the power set of another set. What this means is the\nfollowing: Let L be a vocabulary. Let E be a binary and\nU a unary relation symbol, both not in L. Let\n\\(\\theta_{\\textrm{Pow}}(U,E)\\) be the second-order formula\n(\\ref{ex6}). Let us consider the conjunction  \n\n\\[\\tag{8}\\label{papow}\n\\theta_{\\textrm{PA}}(U,G,z)\\land\\theta_{\\textrm{Pow}}(U,E).\n\\]\n\n\nModels of this formula are, up to isomorphism, of the form\n\\((M,\\in,N,g,a)\\), where \\(\\P(N)=M\\), \\(N\\cap\\P(N)=\\emptyset\\) and\n\\(N\\) is countably infinite. Thus the models are necessarily\nuncountable. This shows that second-order logic, unlike first order\nlogic, has sentences with models but only uncountable ones. Thus the\nDownward L\u00f6wenheim-Skolem Theorem fails for second-order logic,\nas we already noted above. Combining (\\ref{papow}) with the\nobservations in\n \u00a75.1\n yields the following result (by validity we mean the set of\nG\u00f6del numbers of valid formulas):\n\n\nTheorem 3 (Hintikka 1955; Montague 1963) Validity in\nsecond-order logic is not second-order definable over\n\\((\\oN,+,\\cdot,0)\\).\n\n\nIn consequence, validity in second-order logic is not \\(\\Sigma^1_n\\)\nfor any n. Since building power sets in the style of\n\\(\\theta_{\\textrm{Pow}}(U,E)\\) can be iterated, we can see that\nvalidity in second-order logic is not \\(\\Sigma^m_n\\) for any m\nand n. We extend this result further below in\n Theorem 6.\n\n\n",
    "section_title": "5.2 The collapse of the Completeness Theorem",
    "entry_title": "Second-order and Higher-order Logic",
    "hierarchy_title": "Second-order and Higher-order Logic || The Infamous Power of Second-Order Logic || The collapse of the Completeness Theorem",
    "tokenized_text": [
        "infamous",
        "power",
        "secondorder",
        "logic",
        "collapse",
        "completeness",
        "theorem",
        "collapse",
        "completeness",
        "theorem",
        "completeness",
        "theorem",
        "one",
        "cornerstone",
        "understanding",
        "first",
        "order",
        "logic",
        "also",
        "many",
        "extension",
        "first",
        "order",
        "logic",
        "completeness",
        "theorem",
        "notably",
        "extension",
        "first",
        "order",
        "logic",
        "generalized",
        "quantifier",
        "uncountably",
        "many",
        "infinitary",
        "language",
        "l_",
        "omega_omega",
        "shall",
        "see",
        "hope",
        "completeness",
        "theorem",
        "secondorder",
        "logic",
        "later",
        "shall",
        "modify",
        "semantics",
        "completeness",
        "theorem",
        "proved",
        "behind",
        "failure",
        "completeness",
        "theorem",
        "fact",
        "secondorder",
        "logic",
        "isalmost",
        "definitionable",
        "say",
        "set",
        "power",
        "set",
        "another",
        "set",
        "mean",
        "following",
        "let",
        "l",
        "vocabulary",
        "let",
        "e",
        "binary",
        "u",
        "unary",
        "relation",
        "symbol",
        "l",
        "let",
        "theta_",
        "textrm",
        "pow",
        "u",
        "e",
        "secondorder",
        "formula",
        "ref",
        "ex",
        "let",
        "u",
        "consider",
        "conjunction",
        "tag",
        "label",
        "papow",
        "theta_",
        "textrm",
        "pa",
        "u",
        "g",
        "z",
        "landtheta_",
        "textrm",
        "pow",
        "u",
        "e",
        "model",
        "formula",
        "isomorphism",
        "form",
        "in",
        "n",
        "g",
        "p",
        "n",
        "m",
        "ncapp",
        "n",
        "emptyset",
        "n",
        "countably",
        "infinite",
        "thus",
        "model",
        "necessarily",
        "uncountable",
        "show",
        "secondorder",
        "logic",
        "unlike",
        "first",
        "order",
        "logic",
        "sentence",
        "model",
        "uncountable",
        "one",
        "thus",
        "downward",
        "l\u00f6wenheimskolem",
        "theorem",
        "fails",
        "secondorder",
        "logic",
        "already",
        "noted",
        "combining",
        "ref",
        "papow",
        "observation",
        "yield",
        "following",
        "result",
        "validity",
        "mean",
        "set",
        "g\u00f6del",
        "number",
        "valid",
        "formula",
        "theorem",
        "hintikka",
        "montague",
        "validity",
        "secondorder",
        "logic",
        "secondorder",
        "definable",
        "on",
        "cdot",
        "consequence",
        "validity",
        "secondorder",
        "logic",
        "sigma_n",
        "n",
        "since",
        "building",
        "power",
        "set",
        "style",
        "theta_",
        "textrm",
        "pow",
        "u",
        "e",
        "iterated",
        "see",
        "validity",
        "secondorder",
        "logic",
        "sigmam_n",
        "n",
        "extend",
        "result",
        "theorem"
    ]
}