{
    "main_text": "Primitive Recursive Functions\n3. Primitive Recursive Functions\n\n\nWe next define the class of Primitive Recursive Functions.\nThis is a very interesting class of functions \ndescribed a in paper by Skolem (1923) and used by\nG\u00f6del in\nhis proof of the Incompleteness Theorem. We are interested in\nfunctions \\(f\\) from \\(\\mathbf{N}^{r}\\) to\n\\(\\mathbf{N}\\), for \\(r = 0, 1, 2,\\ldots\\) . Here\n\\(r\\) is called the arity of the function \\(f\\), i.e., the\nnumber of arguments that it takes. G\u00f6del started with three very\nsimple functions, the initial functions, and two natural closure\noperations, composition and primitive recursion, each of which take\nsome already defined functions and use them to define a new one. We\nnext explain his definitions in detail. This section is technical and\ncan be safely skipped. The important idea is that the primitive\nrecursive functions comprise a very large and powerful class of\ncomputable functions, all generated in an extremely simple way.\n\n\nWe begin with the three initial primitive recursive\nfunctions:\n\n\\(\\zeta\\), the zero function of arity \\(0, \\zeta\\)(\u00a0) \\(= 0\\);\n\\(\\eta\\), the identity function of arity \\(1, \\eta(n) = n\\); and,\n\\(\\sigma\\), the successor function of arity \\(1, \\sigma(n) = n +1\\).\n\n\n\nNow consider the following two operations:\n\nComposition: if \\(f\\) is a primitive recursive\nfunction of arity \\(a\\), and \\(g_{1}, \\ldots ,g_{a}\\) are primitive\nrecursive functions of arities \\(r_{1}, \\ldots ,r_{a}\\), and \\(k\\in\n\\mathbf{N}\\), then the following is a primitive recursive function of\narity \\(k\\):\n\n\\[\nh(x_{1}, \\ldots ,x_{k}) = f(g_{1}(w_{1}), \\ldots ,g_{a}(w_{a})),\n\\]\n\n\n\nwhere each \\(w_{i}\\) is a list of \\(r_{i}\\) arguments, perhaps with\nrepetition, from \\(x_{1}, \\ldots ,x_{k}\\); and,\nPrimitive recursion: if \\(f\\) and \\(g\\)\nare primitive recursive functions of arity \\(k\\) and \\(k+2\\),\nrespectively, then there is a primitive recursive function, \\(h\\),\nof arity \\(k+1\\) satisfying the following conditions: \n\n\\[\\begin{align}\n\n h(0,x_{1},\\ldots ,x_{k}) &= f(x_{1},\\ldots ,x_{k}); \\text{ and,} \\\\\n\n h(n+1,x_{1},\\ldots ,x_{k}) &= g(h(n,x_{1},\\ldots ,x_{k}), n,x_{1},\\ldots ,x_{k}).\n\n\\end{align}\\]\n\n\n\nHere composition is the natural way to combine functions, and\nprimitive recursion is a restricted kind of recursion in which\n\\(h\\) with first argument \\(n+1\\) is defined in terms of\n\\(h\\) with first argument \\(n\\), and all the other arguments\nunchanged. \n\n\nDefine the primitive recursive functions to be the smallest\nclass of functions that contains the Initial functions and is closed\nunder Composition and Primitive Recursion. The set of primitive\nrecursive functions is equal to the set of functions computed using\nbounded iteration (Meyer & Ritchie 1967), i.e. the set of\nfunctions definable in the language Bloop from (Hofstadter 1979).\n\n\nThe primitive recursive functions have a very simple definition and\nyet they are extremely powerful. G\u00f6del proved inductively that\nevery primitive recursive function can be simply represented in\nfirst-order number theory. He then used the primitive recursive\nfunctions to encode formulas and even sequences of formulas by numbers.\nHe finally used the primitive recursive functions to compute properties\nof the represented formulas including that a formula is well formed and that a\nsequence of formulas is a proof.\n\n\nIt takes a long series of lemmas to show how powerful the primitive\nrecursive functions are. The following are a few examples showing that\naddition, multiplication, and exponentiation are primitive\nrecursive.\n\n\nDefine the addition function, \\(P(x,y)\\), as\nfollows:\n\n\\[\\begin{align}\n   P(0,y)  &= \\eta(y) \\\\\n  P(n+1,y) &= \\sigma(P(n,y))\n\\end{align}\\]\n\n\n\n(Note that this fits into the definition of primitive recursion\nbecause the function \\(g(x_{1},x_{2},x_{3}) = \\eta(\\sigma(x_{1}))\\) is\ndefinable from the initial functions \\(\\eta\\) and \\(\\sigma\\) by\ncomposition.)\n\n\nNext, define the multiplication function,\n\\(T(x,y)\\), as follows:\n\n\\[\\begin{align}\n   T(0,y) &= \\zeta(\\ ) \\\\\n T(n+1,y) &= P(T(n,y),y).\n\\end{align}\\]\n\n\n\nNext, we define the exponential function,\n\\(E(x,y)\\). (Usually \\(0^{0}\\) is\nconsidered undefined, but since primitive recursive functions must be\ntotal, we define \\(E\\)(0,0) to be 1.) Since\nprimitive recursion only allows us to recurse on the first argument,\nwe use two steps to define the exponential function:\n\n\\[\\begin{align}\n  R(0,y) &= \\sigma(\\zeta(\\ )) \\\\\nR(n+1,y) &= T(R(n,y),y).\n\\end{align}\\]\n\n\n\nFinally we can define \\(E(x,y) = R(\\eta(y),\\eta(x))\\) by\ncomposition. (Recall that \\(\\eta\\) is the identity function so this\ncould be more simply written as \\(E(x,y) = R(y,x)\\).)\n\n\nThe exponential function, \\(E\\), grows very rapidly, for\nexample, \\(E\\)(10,10) is ten billion, and \\(E\\)(50,50) is\nover \\(10^{84}\\) (and thus significantly more than the estimated\nnumber of atoms in the universe). However, there are much faster\ngrowing primitive recursive functions. As we saw, \\(E\\) was\ndefined from the slowly growing function, \\(\\sigma\\), using three\napplications of primitive recursion: one for addition, one for\nmultiplication, and then one more for exponentiation. We can continue\nto apply primitive recursion to build a series of unimaginably fast\ngrowing functions. Let\u2019s do just one more step in the series defining\nthe hyper-exponential function, \\(H(n,m)\\) as 2\nto the 2 to the 2 to the \u2026 to the \\(m\\), with a tower of\n\\(n\\) 2s. \\(H\\) is primitive recursive because it can be\ndefined from \\(E\\) using one more application of primitive\nrecursion:\n\n\\[\\begin{align}\n  H(0,y) &= y \\\\\nH(n+1,y) &= E(2,H(n,y))\n\\end{align}\\]\n\n\n\nThus \\(H(2,2) = 2^{4} = 16, H(3,3) = 2^{256}\\) is more than\n\\(10^{77}\\) and comparable to the number of atoms in the universe. If\nthat\u2019s not big enough for you then consider \\(H(4,4)\\). To write\nthis number in decimal notation we would need a one, followed by more\nzero\u2019s than the number of particles in the universe.\n",
    "section_title": "3. Primitive Recursive Functions",
    "entry_title": "Computability and Complexity",
    "hierarchy_title": "Computability and Complexity || Primitive Recursive Functions",
    "tokenized_text": [
        "primitive",
        "recursive",
        "function",
        "primitive",
        "recursive",
        "function",
        "next",
        "define",
        "class",
        "primitive",
        "recursive",
        "function",
        "interesting",
        "class",
        "function",
        "described",
        "paper",
        "skolem",
        "used",
        "g\u00f6del",
        "proof",
        "incompleteness",
        "theorem",
        "interested",
        "function",
        "f",
        "mathbf",
        "n",
        "r",
        "mathbf",
        "n",
        "r",
        "ldots",
        "r",
        "called",
        "arity",
        "function",
        "f",
        "ie",
        "number",
        "argument",
        "take",
        "g\u00f6del",
        "started",
        "three",
        "simple",
        "function",
        "initial",
        "function",
        "two",
        "natural",
        "closure",
        "operation",
        "composition",
        "primitive",
        "recursion",
        "take",
        "already",
        "defined",
        "function",
        "use",
        "define",
        "new",
        "one",
        "next",
        "explain",
        "definition",
        "detail",
        "section",
        "technical",
        "safely",
        "skipped",
        "important",
        "idea",
        "primitive",
        "recursive",
        "function",
        "comprise",
        "large",
        "powerful",
        "class",
        "computable",
        "function",
        "generated",
        "extremely",
        "simple",
        "way",
        "begin",
        "three",
        "initial",
        "primitive",
        "recursive",
        "function",
        "zeta",
        "zero",
        "function",
        "arity",
        "zeta",
        "eta",
        "identity",
        "function",
        "arity",
        "eta",
        "n",
        "n",
        "sigma",
        "successor",
        "function",
        "arity",
        "sigma",
        "n",
        "n",
        "consider",
        "following",
        "two",
        "operation",
        "composition",
        "f",
        "primitive",
        "recursive",
        "function",
        "arity",
        "a",
        "g_",
        "ldots",
        "g_",
        "primitive",
        "recursive",
        "function",
        "arity",
        "r_",
        "ldots",
        "r_",
        "kin",
        "mathbf",
        "n",
        "following",
        "primitive",
        "recursive",
        "function",
        "arity",
        "k",
        "h",
        "x_",
        "ldots",
        "x_",
        "k",
        "f",
        "g_",
        "w_",
        "ldots",
        "g_",
        "w_",
        "w_",
        "list",
        "r_",
        "argument",
        "perhaps",
        "repetition",
        "x_",
        "ldots",
        "x_",
        "k",
        "primitive",
        "recursion",
        "f",
        "g",
        "primitive",
        "recursive",
        "function",
        "arity",
        "k",
        "k",
        "respectively",
        "primitive",
        "recursive",
        "function",
        "h",
        "arity",
        "k",
        "satisfying",
        "following",
        "condition",
        "begin",
        "align",
        "h",
        "x_",
        "ldots",
        "x_",
        "k",
        "f",
        "x_",
        "ldots",
        "x_",
        "k",
        "text",
        "h",
        "n",
        "x_",
        "ldots",
        "x_",
        "k",
        "g",
        "h",
        "n",
        "x_",
        "ldots",
        "x_",
        "k",
        "n",
        "x_",
        "ldots",
        "x_",
        "k",
        "end",
        "align",
        "composition",
        "natural",
        "way",
        "combine",
        "function",
        "primitive",
        "recursion",
        "restricted",
        "kind",
        "recursion",
        "h",
        "first",
        "argument",
        "n",
        "defined",
        "term",
        "h",
        "first",
        "argument",
        "n",
        "argument",
        "unchanged",
        "define",
        "primitive",
        "recursive",
        "function",
        "smallest",
        "class",
        "function",
        "contains",
        "initial",
        "function",
        "closed",
        "composition",
        "primitive",
        "recursion",
        "set",
        "primitive",
        "recursive",
        "function",
        "equal",
        "set",
        "function",
        "computed",
        "using",
        "bounded",
        "iteration",
        "meyer",
        "ritchie",
        "ie",
        "set",
        "function",
        "definable",
        "language",
        "bloop",
        "hofstadter",
        "primitive",
        "recursive",
        "function",
        "simple",
        "definition",
        "yet",
        "extremely",
        "powerful",
        "g\u00f6del",
        "proved",
        "inductively",
        "every",
        "primitive",
        "recursive",
        "function",
        "simply",
        "represented",
        "firstorder",
        "number",
        "theory",
        "used",
        "primitive",
        "recursive",
        "function",
        "encode",
        "formula",
        "even",
        "sequence",
        "formula",
        "number",
        "finally",
        "used",
        "primitive",
        "recursive",
        "function",
        "compute",
        "property",
        "represented",
        "formula",
        "including",
        "formula",
        "well",
        "formed",
        "sequence",
        "formula",
        "proof",
        "take",
        "long",
        "series",
        "lemma",
        "show",
        "powerful",
        "primitive",
        "recursive",
        "function",
        "following",
        "example",
        "showing",
        "addition",
        "multiplication",
        "exponentiation",
        "primitive",
        "recursive",
        "define",
        "addition",
        "function",
        "p",
        "x",
        "follows",
        "begin",
        "align",
        "p",
        "eta",
        "p",
        "n",
        "sigma",
        "p",
        "n",
        "end",
        "align",
        "note",
        "fit",
        "definition",
        "primitive",
        "recursion",
        "function",
        "g",
        "x_",
        "x_",
        "x_",
        "eta",
        "sigma",
        "x_",
        "definable",
        "initial",
        "function",
        "eta",
        "sigma",
        "composition",
        "next",
        "define",
        "multiplication",
        "function",
        "x",
        "follows",
        "begin",
        "align",
        "zeta",
        "n",
        "p",
        "n",
        "end",
        "align",
        "next",
        "define",
        "exponential",
        "function",
        "e",
        "x",
        "usually",
        "considered",
        "undefined",
        "since",
        "primitive",
        "recursive",
        "function",
        "must",
        "total",
        "define",
        "e",
        "since",
        "primitive",
        "recursion",
        "allows",
        "u",
        "recurse",
        "first",
        "argument",
        "use",
        "two",
        "step",
        "define",
        "exponential",
        "function",
        "begin",
        "align",
        "r",
        "sigma",
        "zeta",
        "r",
        "n",
        "r",
        "n",
        "end",
        "align",
        "finally",
        "define",
        "e",
        "x",
        "r",
        "eta",
        "eta",
        "x",
        "composition",
        "recall",
        "eta",
        "identity",
        "function",
        "could",
        "simply",
        "written",
        "e",
        "x",
        "r",
        "x",
        "exponential",
        "function",
        "e",
        "grows",
        "rapidly",
        "example",
        "e",
        "ten",
        "billion",
        "e",
        "thus",
        "significantly",
        "estimated",
        "number",
        "atom",
        "universe",
        "however",
        "much",
        "faster",
        "growing",
        "primitive",
        "recursive",
        "function",
        "saw",
        "e",
        "defined",
        "slowly",
        "growing",
        "function",
        "sigma",
        "using",
        "three",
        "application",
        "primitive",
        "recursion",
        "one",
        "addition",
        "one",
        "multiplication",
        "one",
        "exponentiation",
        "continue",
        "apply",
        "primitive",
        "recursion",
        "build",
        "series",
        "unimaginably",
        "fast",
        "growing",
        "function",
        "let",
        "one",
        "step",
        "series",
        "defining",
        "hyperexponential",
        "function",
        "h",
        "n",
        "m",
        "tower",
        "n",
        "h",
        "primitive",
        "recursive",
        "defined",
        "e",
        "using",
        "one",
        "application",
        "primitive",
        "recursion",
        "begin",
        "align",
        "h",
        "h",
        "n",
        "e",
        "h",
        "n",
        "end",
        "align",
        "thus",
        "h",
        "h",
        "comparable",
        "number",
        "atom",
        "universe",
        "big",
        "enough",
        "consider",
        "h",
        "write",
        "number",
        "decimal",
        "notation",
        "would",
        "need",
        "one",
        "followed",
        "zero",
        "number",
        "particle",
        "universe"
    ]
}