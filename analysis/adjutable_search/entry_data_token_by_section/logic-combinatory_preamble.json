{
    "main_text": "\n\nCombinatory logic (henceforth: CL) is an elegant and\npowerful logical theory that is connected to many areas of\nlogic, and has found applications in other disciplines, especially, in\ncomputer science and mathematics.\n\nCL was originally invented as a continuation of the reduction of the\nset of logical constants to a singleton set in classical first-order\nlogic (FOL). CL untangles the problem of substitution, because\nformulas can be prepared for the elimination of bound variables\nby inserting combinators. Philosophically speaking, an expression that\nhas no bound variables represents the logical form of the original\nformula. Sometimes, bound variables are thought to signify\n\u201contological commitments.\u201d\nAnother philosophical r\u00f4le of CL is to show the variability of\nthe ontological assumptions a theory has.\n\nSubstitution is a crucial operation not only in first-order logics,\nbut also in higher-order logics,\nas well as in other formal systems that contain a variable binding\noperator, such as the \\(\\lambda\\)-calculi and the \\(\\varepsilon\\)-calculus.\nIndeed, carrying out substitution correctly is particularly pressing in\n\\(\\lambda\\)-calculi\nand in the closely related functional programming languages. CL can\nemulate \\(\\lambda\\)-abstraction despite the fact that CL has no variable\nbinding operators. This makes CL a suitable target language for\nfunctional programming languages to be compiled into.\n\nThe connection to \\(\\lambda\\)-calculi might suggest\u2014correctly\u2014that\nCL is sufficiently expressive to formalize\nrecursive functions\n(i.e., computable functions) and arithmetic. Consequently, CL is\nsusceptible to \nG\u00f6del-type incompleteness theorems.\n\nCL is an archetypical term rewriting system (TRS). These\nsystems comprise a wide range of formal calculi from syntactic\nspecifications of programming languages and context-free grammars to\nMarkov algorithms; even some number theoretic problems may be viewed\nas special instances of questions about TRSs. Several notions and\nproof techniques that were originally invented for CL, later turned\nout to be useful in applications to less well-understood TRSs.\n\nCL is connected to nonclassical logics via typing. First, a\ncorrespondence between formulas that are provable in the implicational\nfragment of intuitionistic logic and the typable combinatory terms was\ndiscovered. Then the isomorphism was generalized to other combinatory\nbases and implicational logics (such as the logic of relevant\nimplication, exponential-free linear logic, affine logic, etc.).\n\nSelf-reference factors into some paradoxes, such as the widely known\nliar paradox\nand\nRussell\u2019s paradox.\nThe set theoretical understanding of functions also discourages the\nidea of self-application. Thus it is remarkable that pure untyped CL\ndoes not exclude the self-application of functions. Moreover, its\nmathematical models showed that a theory in which functions can become\ntheir own arguments is completely sensible, in addition to being\nconsistent (what was established earlier using proof theoretic\nmethods).\n",
    "section_title": "Preamble",
    "entry_title": "Combinatory Logic",
    "hierarchy_title": "Combinatory Logic || Preamble",
    "tokenized_text": [
        "combinatory",
        "logic",
        "henceforth",
        "cl",
        "elegant",
        "powerful",
        "logical",
        "theory",
        "connected",
        "many",
        "area",
        "logic",
        "found",
        "application",
        "discipline",
        "especially",
        "computer",
        "science",
        "mathematics",
        "cl",
        "originally",
        "invented",
        "continuation",
        "reduction",
        "set",
        "logical",
        "constant",
        "singleton",
        "set",
        "classical",
        "firstorder",
        "logic",
        "fol",
        "cl",
        "untangles",
        "problem",
        "substitution",
        "formula",
        "prepared",
        "elimination",
        "bound",
        "variable",
        "inserting",
        "combinators",
        "philosophically",
        "speaking",
        "expression",
        "bound",
        "variable",
        "represents",
        "logical",
        "form",
        "original",
        "formula",
        "sometimes",
        "bound",
        "variable",
        "thought",
        "signify",
        "ontological",
        "commitments",
        "another",
        "philosophical",
        "r\u00f4le",
        "cl",
        "show",
        "variability",
        "ontological",
        "assumption",
        "theory",
        "substitution",
        "crucial",
        "operation",
        "firstorder",
        "logic",
        "also",
        "higherorder",
        "logic",
        "well",
        "formal",
        "system",
        "contain",
        "variable",
        "binding",
        "operator",
        "lambda",
        "calculi",
        "varepsilon",
        "calculus",
        "indeed",
        "carrying",
        "substitution",
        "correctly",
        "particularly",
        "pressing",
        "lambda",
        "calculi",
        "closely",
        "related",
        "functional",
        "programming",
        "language",
        "cl",
        "emulate",
        "lambda",
        "abstraction",
        "despite",
        "fact",
        "cl",
        "variable",
        "binding",
        "operator",
        "make",
        "cl",
        "suitable",
        "target",
        "language",
        "functional",
        "programming",
        "language",
        "compiled",
        "connection",
        "lambda",
        "calculi",
        "might",
        "suggestcorrectlythat",
        "cl",
        "sufficiently",
        "expressive",
        "formalize",
        "recursive",
        "function",
        "ie",
        "computable",
        "function",
        "arithmetic",
        "consequently",
        "cl",
        "susceptible",
        "g\u00f6deltype",
        "incompleteness",
        "theorem",
        "cl",
        "archetypical",
        "term",
        "rewriting",
        "system",
        "trs",
        "system",
        "comprise",
        "wide",
        "range",
        "formal",
        "calculus",
        "syntactic",
        "specification",
        "programming",
        "language",
        "contextfree",
        "grammar",
        "markov",
        "algorithm",
        "even",
        "number",
        "theoretic",
        "problem",
        "may",
        "viewed",
        "special",
        "instance",
        "question",
        "trss",
        "several",
        "notion",
        "proof",
        "technique",
        "originally",
        "invented",
        "cl",
        "later",
        "turned",
        "useful",
        "application",
        "le",
        "wellunderstood",
        "trss",
        "cl",
        "connected",
        "nonclassical",
        "logic",
        "via",
        "typing",
        "first",
        "correspondence",
        "formula",
        "provable",
        "implicational",
        "fragment",
        "intuitionistic",
        "logic",
        "typable",
        "combinatory",
        "term",
        "discovered",
        "isomorphism",
        "generalized",
        "combinatory",
        "base",
        "implicational",
        "logic",
        "logic",
        "relevant",
        "implication",
        "exponentialfree",
        "linear",
        "logic",
        "affine",
        "logic",
        "etc",
        "selfreference",
        "factor",
        "paradox",
        "widely",
        "known",
        "liar",
        "paradox",
        "russell",
        "paradox",
        "set",
        "theoretical",
        "understanding",
        "function",
        "also",
        "discourages",
        "idea",
        "selfapplication",
        "thus",
        "remarkable",
        "pure",
        "untyped",
        "cl",
        "exclude",
        "selfapplication",
        "function",
        "moreover",
        "mathematical",
        "model",
        "showed",
        "theory",
        "function",
        "become",
        "argument",
        "completely",
        "sensible",
        "addition",
        "consistent",
        "established",
        "earlier",
        "using",
        "proof",
        "theoretic",
        "method"
    ]
}