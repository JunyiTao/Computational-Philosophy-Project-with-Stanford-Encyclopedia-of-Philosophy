{
    "main_text": "Introduction || Interpretations of programming languages\n1.1 Interpretations of programming languages\n\nThe notion of full abstraction arises from the Scott-Strachey approach\nto the semantical analysis of programming languages (Scott &\nStrachey 1971; Strachey 1966, 1967), also known as\ndenotational semantics. One fundamental aim of a denotational\nsemantics of a programming language \\({L}\\) is to give a\ncompositional interpretation \\({\\mathcal{M}}: {L}\\to D\\) of\nthe program phrases of \\({L}\\) as elements of abstract\nmathematical structures (domains) \\(D\\).\n\nWe may choose another way of giving meaning to programs, based on\ntheir execution. This operational interpretation is only\ndefined on the set Prog of programs of\n\\({L}\\), and involves the definition of a suitable set of program\nvalues, which are the observables of \\({L}\\). If the\nexecution of program \\(e\\) terminates with value \\(v\\), a situation\nexpressed by the notation \\(e \\opDownarrow v\\), then \\(v\\) is the\noperational meaning of \\(e\\). This defines the operational\ninterpretation of programs as a partial function \\({\\mathcal{O}}\\)\nfrom programs to values, where \\({\\mathcal{O}}(e) = v\\) when \\(e\n\\opDownarrow v\\).\n\nBoth interpretations induce natural equivalence relations on program\nphrases. In one of its formulations, full abstraction states the\ncoincidence of the denotational equivalence on a language with one\ninduced by the operational semantics. Full abstraction has been first\ndefined in a paper by Robin Milner (1975), which also exposes the\nessential conceptual ingredients of denotational semantics:\ncompositionality, and the relations between observational and\ndenotational equivalence of programs. For this reason, full\nabstraction can be taken as a vantage point into the vast landscape of\nprogramming language semantics, and is therefore quite relevant to the\ncore problems of the philosophy of programming languages (White 2004)\nand of computer science (Turner 2016).\n",
    "section_title": "1.1 Interpretations of programming languages",
    "entry_title": "Games, Full Abstraction and Full Completeness",
    "hierarchy_title": "Games, Full Abstraction and Full Completeness || Introduction || Interpretations of programming languages",
    "tokenized_text": [
        "introduction",
        "interpretation",
        "programming",
        "language",
        "interpretation",
        "programming",
        "language",
        "notion",
        "full",
        "abstraction",
        "arises",
        "scottstrachey",
        "approach",
        "semantical",
        "analysis",
        "programming",
        "language",
        "scott",
        "strachey",
        "strachey",
        "also",
        "known",
        "denotational",
        "semantics",
        "one",
        "fundamental",
        "aim",
        "denotational",
        "semantics",
        "programming",
        "language",
        "l",
        "give",
        "compositional",
        "interpretation",
        "mathcal",
        "l",
        "to",
        "d",
        "program",
        "phrase",
        "l",
        "element",
        "abstract",
        "mathematical",
        "structure",
        "domain",
        "d",
        "may",
        "choose",
        "another",
        "way",
        "giving",
        "meaning",
        "program",
        "based",
        "execution",
        "operational",
        "interpretation",
        "defined",
        "set",
        "prog",
        "program",
        "l",
        "involves",
        "definition",
        "suitable",
        "set",
        "program",
        "value",
        "observables",
        "l",
        "execution",
        "program",
        "e",
        "terminates",
        "value",
        "v",
        "situation",
        "expressed",
        "notation",
        "e",
        "opdownarrow",
        "v",
        "v",
        "operational",
        "meaning",
        "e",
        "defines",
        "operational",
        "interpretation",
        "program",
        "partial",
        "function",
        "mathcal",
        "program",
        "value",
        "mathcal",
        "e",
        "v",
        "e",
        "opdownarrow",
        "v",
        "interpretation",
        "induce",
        "natural",
        "equivalence",
        "relation",
        "program",
        "phrase",
        "one",
        "formulation",
        "full",
        "abstraction",
        "state",
        "coincidence",
        "denotational",
        "equivalence",
        "language",
        "one",
        "induced",
        "operational",
        "semantics",
        "full",
        "abstraction",
        "first",
        "defined",
        "paper",
        "robin",
        "milner",
        "also",
        "expose",
        "essential",
        "conceptual",
        "ingredient",
        "denotational",
        "semantics",
        "compositionality",
        "relation",
        "observational",
        "denotational",
        "equivalence",
        "program",
        "reason",
        "full",
        "abstraction",
        "taken",
        "vantage",
        "point",
        "vast",
        "landscape",
        "programming",
        "language",
        "semantics",
        "therefore",
        "quite",
        "relevant",
        "core",
        "problem",
        "philosophy",
        "programming",
        "language",
        "white",
        "computer",
        "science",
        "turner"
    ]
}