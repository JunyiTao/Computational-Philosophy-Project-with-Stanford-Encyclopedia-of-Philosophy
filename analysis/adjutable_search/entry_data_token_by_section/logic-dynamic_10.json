{
    "main_text": "Some variants || PDL without tests\n4.1 PDL without tests\n\nThe axiom schema \\([A?]B \\leftrightarrow (A \\rightarrow B)\\) seems to\nindicate that for every formula \\(C\\), there exists an equivalent\ntest-free formula \\(C'\\)\u2014i.e., there is a test-free formula\n\\(C'\\) such that \\(\\models C \\leftrightarrow C'\\). It is interesting\nto observe that this assertion is untrue. Let PDL0 be the\nrestriction of PDL to test-free regular programs, i.e., programs which\ndo not contain tests. Berman and Paterson [1981] considered the PDL\nformula \\(\\langle (p?;\\pi)^*;\\lnot p?;\\pi;p?\\rangle 1\\), which is\n\n\\(\\langle \\mathsf{while}~ p~ \\mathsf{do}~ \\pi \\rangle \\langle \\pi\n\\rangle p\\), \n\nand proved that there is no PDL0 formula equivalent to it.\nHence, PDL has more expressive power than PDL0. Their\nargument actually can be generalized as follows. For all \\(n \\geq 0\\),\nlet PDLn+1 be the subset of PDL in which programs\ncan contain tests \\(A?\\) only if \\(A\\) is a PDLn\nformula. For all \\(n \\geq 0\\), Berman and Paterson considered the\nPDLn+1 formula \\(A_{n+1}\\) defined by\n\n\\(\\langle \\mathsf{while}~ A_n~ \\mathsf{do}~ \\pi_n\\rangle \\langle\n\\pi_n\\rangle A_n\\), \n\nwhere \\(A_0 = p\\) and \\(\\pi_0 = \\pi\\) and proved that for all \\(n \\geq\n0\\), there is no PDLn formula equivalent to\n\\(A_{n+1}\\). Hence, for all \\(n \\geq 0\\), PDLn+1\nhas more expressive power than PDLn.\n",
    "section_title": "4.1 PDL without tests",
    "entry_title": "Propositional Dynamic Logic",
    "hierarchy_title": "Propositional Dynamic Logic || Some variants || PDL without tests",
    "tokenized_text": [
        "variant",
        "pdl",
        "without",
        "test",
        "pdl",
        "without",
        "test",
        "axiom",
        "schema",
        "b",
        "leftrightarrow",
        "rightarrow",
        "b",
        "seems",
        "indicate",
        "every",
        "formula",
        "c",
        "exists",
        "equivalent",
        "testfree",
        "formula",
        "c",
        "ie",
        "testfree",
        "formula",
        "c",
        "models",
        "c",
        "leftrightarrow",
        "c",
        "interesting",
        "observe",
        "assertion",
        "untrue",
        "let",
        "pdl",
        "restriction",
        "pdl",
        "testfree",
        "regular",
        "program",
        "ie",
        "program",
        "contain",
        "test",
        "berman",
        "paterson",
        "considered",
        "pdl",
        "formula",
        "langle",
        "p",
        "pi",
        "lnot",
        "p",
        "pi",
        "p",
        "rangle",
        "langle",
        "mathsf",
        "p",
        "mathsf",
        "pi",
        "rangle",
        "langle",
        "pi",
        "rangle",
        "p",
        "proved",
        "pdl",
        "formula",
        "equivalent",
        "hence",
        "pdl",
        "expressive",
        "power",
        "pdl",
        "argument",
        "actually",
        "generalized",
        "follows",
        "n",
        "geq",
        "let",
        "pdln",
        "subset",
        "pdl",
        "program",
        "contain",
        "test",
        "a",
        "pdln",
        "formula",
        "n",
        "geq",
        "berman",
        "paterson",
        "considered",
        "pdln",
        "formula",
        "a_",
        "n",
        "defined",
        "langle",
        "mathsf",
        "a_n",
        "mathsf",
        "pi_nrangle",
        "langle",
        "pi_nrangle",
        "a_n",
        "a_",
        "p",
        "pi_",
        "pi",
        "proved",
        "n",
        "geq",
        "pdln",
        "formula",
        "equivalent",
        "a_",
        "n",
        "hence",
        "n",
        "geq",
        "pdln",
        "expressive",
        "power",
        "pdln"
    ]
}