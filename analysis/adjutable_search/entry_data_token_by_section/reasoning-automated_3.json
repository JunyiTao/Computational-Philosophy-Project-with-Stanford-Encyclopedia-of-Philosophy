{
    "main_text": "Deduction Calculi\n2. Deduction Calculi\n\nA third important consideration in the building of an automated\nreasoning program is the selection of the actual deduction calculus\nthat will be used by the program to perform its inferences. As\nindicated before, the choice is highly dependent on the nature of the\nproblem domain and there is a fair range of options available:\nGeneral-purpose theorem proving and problem solving (first-order\nlogic, simple type theory), program verification (first-order logic),\ndistributed and concurrent systems (modal and temporal logics),\nprogram specification (intuitionistic logic), hardware verification\n(higher-order logic), logic programming (Horn logic), constraint\nsatisfaction (propositional clausal logic), computational metaphysics\n(higher-order modal logic), and others.\n\nA deduction calculus consists of a set of logical axioms and a\ncollection of deduction rules for deriving new formulas from\npreviously derived formulas. Solving a problem in the program\u2019s\nproblem domain then really means establishing a particular formula\n\u03b1\u2014the problem\u2019s conclusion\u2014from the extended set\n\u0393 consisting of the logical axioms, the domain axioms, and the\nproblem assumptions. That is, the program needs to determine if\n\u0393 entails \u03b1, \u0393\u22a8\u00a0\u03b1. How the program\ngoes about establishing this semantic fact depends, of course, on the\ncalculus it implements. Some programs may take a very\ndirect route and attempt to establish that\n\u0393\u00a0\u22a8\u00a0\u03b1 by actually constructing a\nstep-by-step proof of \u03b1 from \u0393. If successful, this shows\nof course that \u0393 derives\u2014proves\u2014\u03b1, a fact we\ndenote by writing \u0393\u00a0\u22a2\u00a0\u03b1. Other reasoning\nprograms may instead opt for a more indirect approach\nand try to establish that \u0393\u00a0\u22a8\u00a0\u03b1 by showing\nthat \u0393 \u222a {~\u03b1} is inconsistent which, in turn, is shown\nby deriving a contradiction, \u22a5, from the set \u0393 \u222a\n{~\u03b1}. Automated systems that implement the former approach\ninclude natural deduction systems; the latter approach is used by\nsystems based on resolution, sequent deduction, and matrix connection\nmethods.\n\nSoundness and completeness are two (metatheoretical) properties of a\ncalculus that are particularly important for automated deduction.\nSoundness states that the rules of the calculus are\ntruth-preserving. For a direct calculus this means that if\n\u0393\u00a0\u22a2\u00a0\u03b1 then\n\u0393\u00a0\u22a8\u00a0\u03b1. For indirect calculi, soundness\nmeans that if \u0393\u222a{~\u03b1}\u00a0\u22a2\u00a0\u22a5 then\n\u0393\u00a0\u22a8\u00a0\u03b1. Completeness in a\ndirect calculus states that if \u0393\u00a0\u22a8\u00a0\u03b1 then\n\u0393\u00a0\u22a2\u00a0\u03b1. For indirect calculi, the\ncompleteness property is expressed in terms of\nrefutations since one establishes that\n\u0393\u00a0\u22a8\u00a0\u03b1 by showing the existence of a proof,\nnot of \u03b1 from \u0393, but of \u22a5 from\n\u0393\u222a{~\u03b1}. Thus, an indirect calculus is\nrefutation complete if \u0393 \u22a8 \u03b1\nimplies \u0393\u222a{~\u03b1}\u00a0\u22a2\u00a0\u22a5. Of the two\nproperties, soundness is the most desirable. An incomplete calculus\nindicates that there are entailment relations that cannot be\nestablished within the calculus. For an automated reasoning program\nthis means, informally, that there are true statements that the\nprogram cannot prove. Incompleteness may be an unfortunate affair but\nlack of soundness is a truly problematic situation since an unsound\nreasoning program would be able to generate false conclusions from\nperfectly true information.\n\nIt is important to appreciate the difference between a logical\ncalculus and its corresponding implementation in a reasoning program.\nThe implementation of a calculus invariably involves making some\nmodifications to the calculus and this results, strictly speaking, in\na new calculus. The most important modification to the original\ncalculus is the \u201cmechanization\u201d of its deduction rules,\nthat is, the specification of the systematic way in which the rules\nare to be applied. In the process of doing so, one must exercise care\nto preserve the metatheoretical properties of the original\ncalculus.\n\nTwo other metatheoretical properties of importance to automated\ndeduction are decidability and complexity. A calculus is\ndecidable if it admits an algorithmic representation,\nthat is, if there is an algorithm that, for any given \u0393 and\n\u03b1, it can determine in a finite amount of time the answer,\n\u201cYes\u201d or \u201cNo\u201d, to the question \u201cDoes\n\u0393\u00a0\u22a8\u00a0\u03b1?\u201d A calculus may be\nundecidable in which case one needs to determine which decidable\nfragment to implement. The time-space complexity of a\ncalculus specifies how efficient its algorithmic representation is.\nAutomated reasoning is made the more challenging because many calculi\nof interest are not decidable and have poor complexity measures\nforcing researchers to seek tradeoffs between deductive power versus\nalgorithmic efficiency.\n",
    "section_title": "2. Deduction Calculi",
    "entry_title": "Automated Reasoning",
    "hierarchy_title": "Automated Reasoning || Deduction Calculi",
    "tokenized_text": [
        "deduction",
        "calculus",
        "deduction",
        "calculus",
        "third",
        "important",
        "consideration",
        "building",
        "automated",
        "reasoning",
        "program",
        "selection",
        "actual",
        "deduction",
        "calculus",
        "used",
        "program",
        "perform",
        "inference",
        "indicated",
        "choice",
        "highly",
        "dependent",
        "nature",
        "problem",
        "domain",
        "fair",
        "range",
        "option",
        "available",
        "generalpurpose",
        "theorem",
        "proving",
        "problem",
        "solving",
        "firstorder",
        "logic",
        "simple",
        "type",
        "theory",
        "program",
        "verification",
        "firstorder",
        "logic",
        "distributed",
        "concurrent",
        "system",
        "modal",
        "temporal",
        "logic",
        "program",
        "specification",
        "intuitionistic",
        "logic",
        "hardware",
        "verification",
        "higherorder",
        "logic",
        "logic",
        "programming",
        "horn",
        "logic",
        "constraint",
        "satisfaction",
        "propositional",
        "clausal",
        "logic",
        "computational",
        "metaphysics",
        "higherorder",
        "modal",
        "logic",
        "others",
        "deduction",
        "calculus",
        "consists",
        "set",
        "logical",
        "axiom",
        "collection",
        "deduction",
        "rule",
        "deriving",
        "new",
        "formula",
        "previously",
        "derived",
        "formula",
        "solving",
        "problem",
        "program",
        "problem",
        "domain",
        "really",
        "mean",
        "establishing",
        "particular",
        "formula",
        "\u03b1the",
        "problem",
        "conclusionfrom",
        "extended",
        "set",
        "\u03b3",
        "consisting",
        "logical",
        "axiom",
        "domain",
        "axiom",
        "problem",
        "assumption",
        "program",
        "need",
        "determine",
        "\u03b3",
        "entail",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "program",
        "go",
        "establishing",
        "semantic",
        "fact",
        "depends",
        "course",
        "calculus",
        "implement",
        "program",
        "may",
        "take",
        "direct",
        "route",
        "attempt",
        "establish",
        "\u03b3",
        "\u03b1",
        "actually",
        "constructing",
        "stepbystep",
        "proof",
        "\u03b1",
        "\u03b3",
        "successful",
        "show",
        "course",
        "\u03b3",
        "derivesproves\u03b1",
        "fact",
        "denote",
        "writing",
        "\u03b3",
        "\u03b1",
        "reasoning",
        "program",
        "may",
        "instead",
        "opt",
        "indirect",
        "approach",
        "try",
        "establish",
        "\u03b3",
        "\u03b1",
        "showing",
        "\u03b3",
        "\u03b1",
        "inconsistent",
        "turn",
        "shown",
        "deriving",
        "contradiction",
        "set",
        "\u03b3",
        "\u03b1",
        "automated",
        "system",
        "implement",
        "former",
        "approach",
        "include",
        "natural",
        "deduction",
        "system",
        "latter",
        "approach",
        "used",
        "system",
        "based",
        "resolution",
        "sequent",
        "deduction",
        "matrix",
        "connection",
        "method",
        "soundness",
        "completeness",
        "two",
        "metatheoretical",
        "property",
        "calculus",
        "particularly",
        "important",
        "automated",
        "deduction",
        "soundness",
        "state",
        "rule",
        "calculus",
        "truthpreserving",
        "direct",
        "calculus",
        "mean",
        "\u03b3",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "indirect",
        "calculus",
        "soundness",
        "mean",
        "\u03b3",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "completeness",
        "direct",
        "calculus",
        "state",
        "\u03b3",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "indirect",
        "calculus",
        "completeness",
        "property",
        "expressed",
        "term",
        "refutation",
        "since",
        "one",
        "establishes",
        "\u03b3",
        "\u03b1",
        "showing",
        "existence",
        "proof",
        "\u03b1",
        "\u03b3",
        "\u03b3",
        "\u03b1",
        "thus",
        "indirect",
        "calculus",
        "refutation",
        "complete",
        "\u03b3",
        "\u03b1",
        "implies",
        "\u03b3",
        "\u03b1",
        "two",
        "property",
        "soundness",
        "desirable",
        "incomplete",
        "calculus",
        "indicates",
        "entailment",
        "relation",
        "established",
        "within",
        "calculus",
        "automated",
        "reasoning",
        "program",
        "mean",
        "informally",
        "true",
        "statement",
        "program",
        "prove",
        "incompleteness",
        "may",
        "unfortunate",
        "affair",
        "lack",
        "soundness",
        "truly",
        "problematic",
        "situation",
        "since",
        "unsound",
        "reasoning",
        "program",
        "would",
        "able",
        "generate",
        "false",
        "conclusion",
        "perfectly",
        "true",
        "information",
        "important",
        "appreciate",
        "difference",
        "logical",
        "calculus",
        "corresponding",
        "implementation",
        "reasoning",
        "program",
        "implementation",
        "calculus",
        "invariably",
        "involves",
        "making",
        "modification",
        "calculus",
        "result",
        "strictly",
        "speaking",
        "new",
        "calculus",
        "important",
        "modification",
        "original",
        "calculus",
        "mechanization",
        "deduction",
        "rule",
        "specification",
        "systematic",
        "way",
        "rule",
        "applied",
        "process",
        "one",
        "must",
        "exercise",
        "care",
        "preserve",
        "metatheoretical",
        "property",
        "original",
        "calculus",
        "two",
        "metatheoretical",
        "property",
        "importance",
        "automated",
        "deduction",
        "decidability",
        "complexity",
        "calculus",
        "decidable",
        "admits",
        "algorithmic",
        "representation",
        "algorithm",
        "given",
        "\u03b3",
        "\u03b1",
        "determine",
        "finite",
        "amount",
        "time",
        "answer",
        "yes",
        "question",
        "\u03b3",
        "\u03b1",
        "calculus",
        "may",
        "undecidable",
        "case",
        "one",
        "need",
        "determine",
        "decidable",
        "fragment",
        "implement",
        "timespace",
        "complexity",
        "calculus",
        "specifies",
        "efficient",
        "algorithmic",
        "representation",
        "automated",
        "reasoning",
        "made",
        "challenging",
        "many",
        "calculus",
        "interest",
        "decidable",
        "poor",
        "complexity",
        "measure",
        "forcing",
        "researcher",
        "seek",
        "tradeoff",
        "deductive",
        "power",
        "versus",
        "algorithmic",
        "efficiency"
    ]
}