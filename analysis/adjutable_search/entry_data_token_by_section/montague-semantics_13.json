{
    "main_text": "Concluding Remarks || Further Reading\n4.3 Example\n\nA small example is presented below, it consists of the two sentences\nJohn is singing, and Every man is singing. The\nexample is not presented in Montague\u2019s original way, but\nmodernized: there is a lifting rule, the determiner is a basic\nexpression, and intensional aspects are not considered.\n\nThe grammar has four basic expressions:\n\nJohn is an expression of the category Proper Name. Its\ndenotation is an individual represented in logic by John.\nThe Intransitive Verb sing denotes a set (the set of\nsingers), and is represented by the predicate symbol sing.\nThe Common Noun man, which denotes a set, represented by\nman.\nThe Determiner every. Its denotation is \\(\\lambda\nP\\lambda Q\\forall x[P(x) \\rightarrow Q(x)\\)]; an explanation of this\nformula will be given below.\n\n\nThe grammar has three rules.\n\nA rule which takes as input a Proper Name, and produces a Noun\nPhrase. The input word is not changed: it is lifted to a\n\u2018higher\u2019 grammatical category. Semantically its meaning is\nlifted to a more abstract, a \u2018higher\u2019 meaning: the\nrepresentation of the denotation of John as Noun Phrase is\n\\(\\lambda P[P(\\textbf{John})\\)]. An explanation of the formula is as\nfollows. \\(P\\) is a variable over properties: if we have chosen an\ninterpretation for \\(P\\), we may say whether \\(P\\) holds for John or\nnot, i.e. whether \\(P(\\textbf{John})\\) is true. The \\(\\lambda P\\)\nabstracts from the possible interpretations of \\(P\\): the expression\n\\(\\lambda P[P(\\textbf{John})\\)] denotes a function that takes as input\nproperties and yields true if the property holds for John, and\nfalse otherwise. So the denotation of John is the\ncharacteristic function of the set of properties he has.\nA rule that takes as input a Noun Phrase and an Intransitive Verb,\nand yields as output a Sentence: from John and sing\nit produces John is singing. The corresponding semantic rule\nrequires the denotation of the Noun Phrase to be applied to the\ndenotation of the Intransitive Verb. This is represented as \\(\\lambda\nP[P(\\textbf{John})](\\textbf{sing})\\). When applied to the argument\nsing, the function represented by \\(\\lambda\nP[P(\\textbf{John})\\)] yields true if the predicate sing\nholds for John, so precisely in case sing(John) is\ntrue. So \\(\\lambda P[P(\\textbf{John})](\\textbf{sing})\\) and\nsing(John) are equivalent. The latter formula can be\nobtained by removing the \\(\\lambda P\\) and substituting sing\nfor \\(P\\). This is called \u2018lambda-conversion\u2019.\nA rule that takes as inputs a Determiner and a Common Noun, and\nyields a Noun Phrase: from every and man it produces\nevery man. Semantically the denotation of the Determiner has\nto be applied to the denotation of the Common Noun, hence \\(\\lambda\nP\\lambda Q\\forall x[P(x) \\rightarrow Q(x)](\\textbf{man})\\). By lambda\nconversion (just explained) this is simplified to \\(\\lambda Q\\forall\nx[\\textbf{man}(x) \\rightarrow Q(x)\\)]. This result denotes a function\nthat, when applied to property \\(A\\), yields true just in case\nall man have property \\(A\\).\n\n\nThe example given with the last rule helps us to understand the\nformula for every : that denotes a relation between\nproperties \\(A\\) and \\(B\\) which holds in case every \\(A\\) has\nproperty \\(B\\).\n\nThe next step is now easy. Apply the rule for combining a Noun Phrase\nand an Intransitive Verb to the last result, producing Every man\nis singing. The output of the semantic rule is \\(\\lambda Q\\forall\nx[\\textbf{man}(x) \\rightarrow Q(x)](\\textbf{sing})\\). By lambda\nconversion we obtain \\(\\forall x[\\textbf{man}(x) \\rightarrow\n\\textbf{sing}(x)],\\) which is the traditional logical representation\nof Every man is singing.\n\nNote the role of lambda-operators:\n\nJohn and every man are interpreted in a similar\nway: sets of properties. These sets can be represented due to\nlambda-operators.\nEvery man and sing are syntactically on the same\nlevel, but semantically sing has a subordinated role: it\noccurs embedded in the formula. This switch of level is possible due\nto lambda-operators.\n\n",
    "section_title": "4.3 Example",
    "entry_title": "Montague Semantics",
    "hierarchy_title": "Montague Semantics || Concluding Remarks || Further Reading",
    "tokenized_text": [
        "concluding",
        "remark",
        "reading",
        "example",
        "small",
        "example",
        "presented",
        "consists",
        "two",
        "sentence",
        "john",
        "singing",
        "every",
        "man",
        "singing",
        "example",
        "presented",
        "montague",
        "original",
        "way",
        "modernized",
        "lifting",
        "rule",
        "determiner",
        "basic",
        "expression",
        "intensional",
        "aspect",
        "considered",
        "grammar",
        "four",
        "basic",
        "expression",
        "john",
        "expression",
        "category",
        "proper",
        "name",
        "denotation",
        "individual",
        "represented",
        "logic",
        "john",
        "intransitive",
        "verb",
        "sing",
        "denotes",
        "set",
        "set",
        "singer",
        "represented",
        "predicate",
        "symbol",
        "sing",
        "common",
        "noun",
        "man",
        "denotes",
        "set",
        "represented",
        "man",
        "determiner",
        "every",
        "denotation",
        "lambda",
        "plambda",
        "qforall",
        "x",
        "p",
        "x",
        "rightarrow",
        "q",
        "x",
        "explanation",
        "formula",
        "given",
        "grammar",
        "three",
        "rule",
        "rule",
        "take",
        "input",
        "proper",
        "name",
        "produce",
        "noun",
        "phrase",
        "input",
        "word",
        "changed",
        "lifted",
        "higher",
        "grammatical",
        "category",
        "semantically",
        "meaning",
        "lifted",
        "abstract",
        "higher",
        "meaning",
        "representation",
        "denotation",
        "john",
        "noun",
        "phrase",
        "lambda",
        "p",
        "p",
        "textbf",
        "john",
        "explanation",
        "formula",
        "follows",
        "p",
        "variable",
        "property",
        "chosen",
        "interpretation",
        "p",
        "may",
        "say",
        "whether",
        "p",
        "hold",
        "john",
        "ie",
        "whether",
        "p",
        "textbf",
        "john",
        "true",
        "lambda",
        "p",
        "abstract",
        "possible",
        "interpretation",
        "p",
        "expression",
        "lambda",
        "p",
        "p",
        "textbf",
        "john",
        "denotes",
        "function",
        "take",
        "input",
        "property",
        "yield",
        "true",
        "property",
        "hold",
        "john",
        "false",
        "otherwise",
        "denotation",
        "john",
        "characteristic",
        "function",
        "set",
        "property",
        "rule",
        "take",
        "input",
        "noun",
        "phrase",
        "intransitive",
        "verb",
        "yield",
        "output",
        "sentence",
        "john",
        "sing",
        "produce",
        "john",
        "singing",
        "corresponding",
        "semantic",
        "rule",
        "requires",
        "denotation",
        "noun",
        "phrase",
        "applied",
        "denotation",
        "intransitive",
        "verb",
        "represented",
        "lambda",
        "p",
        "p",
        "textbf",
        "john",
        "textbf",
        "sing",
        "applied",
        "argument",
        "sing",
        "function",
        "represented",
        "lambda",
        "p",
        "p",
        "textbf",
        "john",
        "yield",
        "true",
        "predicate",
        "sing",
        "hold",
        "john",
        "precisely",
        "case",
        "sing",
        "john",
        "true",
        "lambda",
        "p",
        "p",
        "textbf",
        "john",
        "textbf",
        "sing",
        "sing",
        "john",
        "equivalent",
        "latter",
        "formula",
        "obtained",
        "removing",
        "lambda",
        "p",
        "substituting",
        "sing",
        "p",
        "called",
        "lambdaconversion",
        "rule",
        "take",
        "input",
        "determiner",
        "common",
        "noun",
        "yield",
        "noun",
        "phrase",
        "every",
        "man",
        "produce",
        "every",
        "man",
        "semantically",
        "denotation",
        "determiner",
        "applied",
        "denotation",
        "common",
        "noun",
        "hence",
        "lambda",
        "plambda",
        "qforall",
        "x",
        "p",
        "x",
        "rightarrow",
        "q",
        "x",
        "textbf",
        "man",
        "lambda",
        "conversion",
        "explained",
        "simplified",
        "lambda",
        "qforall",
        "x",
        "textbf",
        "man",
        "x",
        "rightarrow",
        "q",
        "x",
        "result",
        "denotes",
        "function",
        "applied",
        "property",
        "a",
        "yield",
        "true",
        "case",
        "man",
        "property",
        "a",
        "example",
        "given",
        "last",
        "rule",
        "help",
        "u",
        "understand",
        "formula",
        "every",
        "denotes",
        "relation",
        "property",
        "a",
        "b",
        "hold",
        "case",
        "every",
        "a",
        "property",
        "b",
        "next",
        "step",
        "easy",
        "apply",
        "rule",
        "combining",
        "noun",
        "phrase",
        "intransitive",
        "verb",
        "last",
        "result",
        "producing",
        "every",
        "man",
        "singing",
        "output",
        "semantic",
        "rule",
        "lambda",
        "qforall",
        "x",
        "textbf",
        "man",
        "x",
        "rightarrow",
        "q",
        "x",
        "textbf",
        "sing",
        "lambda",
        "conversion",
        "obtain",
        "forall",
        "x",
        "textbf",
        "man",
        "x",
        "rightarrow",
        "textbf",
        "sing",
        "x",
        "traditional",
        "logical",
        "representation",
        "every",
        "man",
        "singing",
        "note",
        "role",
        "lambdaoperators",
        "john",
        "every",
        "man",
        "interpreted",
        "similar",
        "way",
        "set",
        "property",
        "set",
        "represented",
        "due",
        "lambdaoperators",
        "every",
        "man",
        "sing",
        "syntactically",
        "level",
        "semantically",
        "sing",
        "subordinated",
        "role",
        "occurs",
        "embedded",
        "formula",
        "switch",
        "level",
        "possible",
        "due",
        "lambdaoperators"
    ]
}