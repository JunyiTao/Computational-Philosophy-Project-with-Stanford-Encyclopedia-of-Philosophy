{
    "main_text": "Deduction Calculi || Sequent Deduction\n2.2 Sequent Deduction\n\nHilbert-style calculi (Hilbert and Ackermann 1928) have been\ntraditionally used to characterize logic systems. These calculi\nusually consist of a few axiom schemata and a small number of rules\nthat typically include modus ponens and the rule of substitution.\nAlthough they meet the required theoretical requisites (soundness,\ncompleteness, etc.) the approach at proof construction in these\ncalculi is difficult and does not reflect standard practice. It was\nGentzen\u2019s goal \u201cto set up a formalism that reflects as\naccurately as possible the actual logical reasoning involved in\nmathematical proofs\u201d (Gentzen 1935). To carry out this task,\nGentzen analyzed the proof-construction process and then devised two\ndeduction calculi for classical logic: the natural deduction calculus,\nNK, and the sequent calculus, LK.\n(Gentzen actually designed NK first and then introduced LK to pursue\nmetatheoretical investigations). The calculi met his goal to a large\nextent while at the same time managing to secure soundness and\ncompleteness. Both calculi are characterized by a relatively larger\nnumber of deduction rules and a simple axiom schema. Of the two\ncalculi, LK is the one that has been most widely used in\nimplementations of automated reasoning programs, and it is the one\nthat we will discuss first; NK will be discussed in the next\nsection.\n\nAlthough the application of the LK rules affect logic formulas, the\nrules are seen as manipulating not logic formulas themselves but\nsequents. Sequents are expressions of the form\n\u0393 \u2192 \u0394, where both \u0393 and \u0394 are (possibly\nempty) sets of formulas. \u0393 is the sequent\u2019s\nantecedent and \u0394 its\nsuccedent. Sequents can be interpreted thus: Let\nI be an interpretation. Then,\n\nI satisfies the sequent \u0393 \u2192\n\u0394 (written as: I\n\u22a8\u00a0\u0393\u2192\u0394) iff\n\neither I \u22ad \u03b1 (for some\n\u03b1 \u2208 \u0393) or I \u22a8\n\u03b2 (for some \u03b2 \u2208 \u0394).\n\n\nIn other words, \n\nI \u22a8\u0393 \u2192 \u0394 iff\nI \u22a8\u00a0(\u03b11\n& \u2026 & \u03b1n) \u2283\n(\u03b21 \u2228 \u2026 \u2228 \u03b2n),\nwhere \u03b11 & \u2026 &\n\u03b1n is the iterated conjunction of the\nformulas in \u0393 and \u03b21 \u2228 \u2026 \u2228\n\u03b2n is the iterated disjunction of those in\n\u0394.\n\n\nIf \u0393 or \u0394 are empty then they are respectively valid or\nunsatisfiable. An axiom of LK is a sequent \u0393\n\u2192 \u0394 where \u0393 \u2229 \u0394 \u2260 \u2205. Thus, the\nrequirement that the same formula occurs at each side of the \u2192\nsign means that the axioms of LK are valid, for no interpretation can\nthen make all the formulas in \u0393 true and, simultaneously, make\nall those in \u0394 false. LK has two rules per logical connective,\nplus one extra rule: the cut rule. \n\n\n Axioms \n Cut Rule  \n\n\n\n\n \u00a0\u00a0  \n\n \u0393, \u03b1 \u2192 \u0394, \u03b1\n \n \n\n\n\n \u0393 \u2192 \u0394,\n\u03b1 \n \u03b1, \u03bb \u2192\n\u03a3  \n\n \u0393, \u03bb \u2192\n\u0394, \u03a3  \n  \n\n Antecedent Rules (\u0398\u2192) \n Succedent Rules (\u2192\u0398)  \n\n&\u2192\n\n\n\n \u0393, \u03b1, \u03b2\n\u2192 \u0394  \n\n \u0393, \u03b1 & \u03b2 \u2192\n\u0394  \n \n\u2192&\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1 \n \u0393 \u2192 \u0394,\n\u03b2  \n\n \u0393 \u2192 \u0394,\n\u03b1 & \u03b2  \n  \n\n\u2228\u2192\n\n\n\n \u0393, \u03b1 \u2192\n\u0394 \n \u0393, \u03b2 \u2192\n\u0394  \n\n \u0393, \u03b1 \u2228 \u03b2\n\u2192 \u0394  \n \n\u2192\u2228\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1, \u03b2  \n\n \u0393 \u2192 \u0394, \u03b1 \u2228\n\u03b2  \n  \n\n\u2283\u2192\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1 \n \u0393, \u03b2 \u2192\n\u0394  \n\n \u0393, \u03b1 \u2283 \u03b2\n\u2192 \u0394  \n \n\u2192\u2283\n\n\n\n \u0393, \u03b1 \u2192\n\u0394, \u03b2  \n\n \u0393 \u2192 \u0394, \u03b1 \u2283\n\u03b2  \n  \n\n\u2283\u2261\n\n\n\n \u0393, \u03b1, \u03b2\n\u2192 \u0394 \n \u0393 \u2192 \u0394,\n\u03b1, \u03b2  \n\n \u0393, \u03b1 \u2261\n\u03b2 \u2192 \u0394  \n \n\u2261\u2283\n\n\n\n \u0393, \u03b1 \u2192\n\u0394, \u03b2 \n \u0393, \u03b2, \u2192\n\u0394, \u03b1  \n\n \u0393 \u2192 \u0394,\n\u03b1 \u2261 \u03b2  \n  \n\n~\u2192\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1  \n\n \u0393, ~\u03b1 \u2192 \u0394 \n\n \n\u2192~\n\n\n\n \u0393, \u03b1 \u2192\n\u0394  \n\n \u0393 \u2192 \u0394, ~\u03b1 \n\n  \n\n\u2203\u2192\n\n\n\n \u0393,\n\u03b1(a/x) \u2192 \u0394  \n\n \u0393,\n\u2203x\u03b1(x) \u2192 \u0394  \n \n\u2192\u2203\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1(t/x), \u2203x\u03b1(x)\n \n\n \u0393 \u2192 \u0394,\n\u2203x\u03b1(x)  \n  \n\n\u2200\u2192\n\n\n\n \u0393,\n\u03b1(t/x), \u2200x\u03b1(x)\n\u2192 \u0394  \n\n \u0393,\n\u2200x\u03b1(x) \u2192 \u0394  \n \n\u2192\u2200\n\n\n\n \u0393 \u2192 \u0394,\n\u03b1(a/x)  \n\n \u0393 \u2192 \u0394,\n\u2200x\u03b1(x)  \n  \n\n\nThe sequents above a rule\u2019s line are called the rule\u2019s\npremises and the sequent below the line is the rule\u2019s\nconclusion. The quantification rules \u2203\u2192 and\n\u2192\u2200 have an eigenvariable condition that restricts their\napplicability, namely that a must not occur in \u0393,\n\u0394 or in the quantified sentence. The purpose of this restriction\nis to ensure that the choice of parameter, a, used in the\nsubstitution process is completely \u201carbitrary\u201d.\n\nProofs in LK are represented as trees where each node in the tree is\nlabeled with a sequent, and where the original sequent sits at the\nroot of the tree. The children of a node are the premises of the rule\nbeing applied at that node. The leaves of the tree are labeled with\naxioms. Here is the LK-proof of\n\u2203xR(x) from the set\n{\u2200x(P(x) \u2228\nQ(x)), \u2200x(P(x)\n\u2283\nR(x)),\u2200x(Q(x)\n\u2283 R(x))}. In the tree below, \u0393 stands for\nthis set:\n\n\n\n\n\n\n\n\u0393,P(a) \u2192\n\n\nP(a),R(a),\u2203xR(x)\n\n\n\u0393,P(a),R(a) \u2192\n\n\nR(a),\u2203xR(x) \n\n\n\n\u0393,P(a),P(a) \u2283\nR(a) \u2192\nR(a),\u2203xR(x) \n\n\n \u0393,P(a) \u2192\nR(a),\u2203xR(x) \n\n \n\n\n\n\n\u0393,Q(a) \u2192\n\n\nQ(a),R(a),\u2203xR(x)\n\n\n\u0393,Q(a),R(a) \u2192\n\n\nR(a),\u2203xR(x) \n\n\n\n\u0393,Q(a),Q(a) \u2283\nR(a) \u2192\nR(a),\u2203xR(x) \n\n\n \u0393,Q(a) \u2192\nR(a),\u2203xR(x) \n\n  \n\n\n\n\n\n\u0393,P(a) \u2228 Q(a) \u2192\nR(a),\u2203xR(x) \n\n\n \u0393 \u2192\nR(a),\u2203xR(x) \n\n\n \u0393 \u2192 \u2203xR(x) \n\n  \n\n\n\nIn our example, all the leaves in the proof tree are labeled with\naxioms. This establishes the validity of \u0393 \u2192\n\u2203xR(x) and, hence, the fact that\n\u0393\u00a0\u22a8\u00a0\u2203xR(x). LK\ntakes an indirect approach at proving the conclusion and this is an\nimportant difference between LK and NK. While NK constructs an actual\nproof (of the conclusion from the given assumptions), LK instead\nconstructs a proof that proves the existence of a proof (of the\nconclusion from the assumptions). For instance, to prove that \u03b1\nis entailed by \u0393, NK constructs a step-by-step proof of \u03b1\nfrom \u0393 (assuming that one exists); in contrast, LK first\nconstructs the sequent \u0393 \u2192 \u03b1 which then attempts to\nprove valid by showing that it cannot be made false. This is done by\nsearching for a counterexample that makes (all the sentences in)\n\u0393 true and makes \u03b1 false: If the search fails then a\ncounterexample does not exist and the sequent is therefore valid. In\nthis respect, proof trees in LK are actually refutation proofs. Like\nresolution, LK is refutation complete: If\n\u0393\u00a0\u22a8\u00a0\u03b1 then the sequent \u0393 \u2192\n\u03b1 has a proof tree.\n\nAs it stands, LK is unsuitable for automated deduction and there are\nsome obstacles that must be overcome before it can be efficiently\nimplemented. The reason is, of course, that the statement of the\ncompleteness of LK only has to assert, for each entailment relation,\nthe existence of a proof tree but a reasoning program has the more\ndifficult task of actually having to construct one. Some of the main\nobstacles: First, LK does not specify the order in which the rules\nmust be applied in the construction of a proof tree. Second, and as a\nparticular case of the first problem, the premises in the rules\n\u2200\u2192 and \u2192\u2203 rules inherit the quantificational\nformula to which the rule is applied, meaning that the rules can be\napplied repeatedly to the same formula sending the proof search into\nan endless loop. Third, LK does not indicate which formula must be\nselected next in the application of a rule. Fourth, the quantifier\nrules provide no indication as to what terms or free variables must be\nused in their deployment. Fifth, and as a particular case of the\nprevious problem, the application of a quantifier rule can lead into\nan infinitely long tree branch because the proper term to be used in\nthe instantiation never gets chosen. Fortunately, as we will hint at\nbelow each of these problems can be successfully addressed.\n\nAxiom sequents in LK are valid, and the conclusion of a rule is valid\niff its premises are. This fact allows us to apply the LK rules in\neither direction, forwards from axioms to conclusion, or backwards\nfrom conclusion to axioms. Also, with the exception of the cut rule,\nall the rules\u2019 premises are subformulas of their respective\nconclusions. For the purposes of automated deduction this is a\nsignificant fact and we would want to dispense with the cut rule;\nfortunately, the cut-free version of LK preserves its refutation\ncompleteness (Gentzen 1935). These results provide a strong case for\nconstructing proof trees in a backwards fashion; indeed, by working\nthis way a refutation in cut-free LK gets increasingly simpler as it\nprogresses since subformulas are simpler than their parent formulas.\nMoreover, and as far as propositional rules go, the new subformulas\nentered into the tree are completely dictated by the cut-free LK\nrules. Furthermore, and assuming the proof tree can be brought to\ncompletion, branches eventually end up with atoms and the presence of\naxioms can be quickly determined. Another reason for working backwards\nis that the truth-functional fragment of cut-free LK is\nconfluent in the sense that the order in which the\nnon-quantifier rules are applied is irrelevant: If there is a proof,\nregardless of what you do, you will run into it! To bring the\nquantifier rules into the picture, things can be arranged so that all\nrules have a fair chance of being deployed: Apply, as far as possible,\nall the non-quantifier rules before applying any of the quantifier\nrules. This takes care of the first and second obstacles, and it is no\ntoo difficult to see how the third one would now be handled. The\nfourth and fifth obstacles can be addressed by requiring that the\nterms to be used in the substitutions be suitably selected from the\nHerbrand universe (Herbrand 1930).\n\nThe use of sequent-type calculi in automated theorem proving was\ninitiated by efforts to mechanize mathematics (Wang 1960). At the\ntime, resolution captured most of the attention of the automated\nreasoning community but during the 1970s some researchers started to\nfurther investigate non-resolution methods (Bledsoe 1977), prompting a\nfrutiful and sustained effort to develop more human-oriented theorem\nproving systems (Bledsoe 1975, Nevins 1974). Eventually, sequent-type\ndeduction gained momentum again, particularly in its re-incarnation as\nanalytic tableaux (Fitting 1990). The method of\ndeduction used in tableaux is essentially cut-free LK\u2019s with sets used\nin lieu of sequents.\n",
    "section_title": "2.2 Sequent Deduction",
    "entry_title": "Automated Reasoning",
    "hierarchy_title": "Automated Reasoning || Deduction Calculi || Sequent Deduction",
    "tokenized_text": [
        "deduction",
        "calculus",
        "sequent",
        "deduction",
        "sequent",
        "deduction",
        "hilbertstyle",
        "calculus",
        "hilbert",
        "ackermann",
        "traditionally",
        "used",
        "characterize",
        "logic",
        "system",
        "calculus",
        "usually",
        "consist",
        "axiom",
        "schema",
        "small",
        "number",
        "rule",
        "typically",
        "include",
        "modus",
        "ponens",
        "rule",
        "substitution",
        "although",
        "meet",
        "required",
        "theoretical",
        "requisite",
        "soundness",
        "completeness",
        "etc",
        "approach",
        "proof",
        "construction",
        "calculus",
        "difficult",
        "reflect",
        "standard",
        "practice",
        "gentzen",
        "goal",
        "set",
        "formalism",
        "reflects",
        "accurately",
        "possible",
        "actual",
        "logical",
        "reasoning",
        "involved",
        "mathematical",
        "proof",
        "gentzen",
        "carry",
        "task",
        "gentzen",
        "analyzed",
        "proofconstruction",
        "process",
        "devised",
        "two",
        "deduction",
        "calculus",
        "classical",
        "logic",
        "natural",
        "deduction",
        "calculus",
        "nk",
        "sequent",
        "calculus",
        "lk",
        "gentzen",
        "actually",
        "designed",
        "nk",
        "first",
        "introduced",
        "lk",
        "pursue",
        "metatheoretical",
        "investigation",
        "calculus",
        "met",
        "goal",
        "large",
        "extent",
        "time",
        "managing",
        "secure",
        "soundness",
        "completeness",
        "calculus",
        "characterized",
        "relatively",
        "larger",
        "number",
        "deduction",
        "rule",
        "simple",
        "axiom",
        "schema",
        "two",
        "calculus",
        "lk",
        "one",
        "widely",
        "used",
        "implementation",
        "automated",
        "reasoning",
        "program",
        "one",
        "discus",
        "first",
        "nk",
        "discussed",
        "next",
        "section",
        "although",
        "application",
        "lk",
        "rule",
        "affect",
        "logic",
        "formula",
        "rule",
        "seen",
        "manipulating",
        "logic",
        "formula",
        "sequents",
        "sequents",
        "expression",
        "form",
        "\u03b3",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "possibly",
        "empty",
        "set",
        "formula",
        "\u03b3",
        "sequent",
        "antecedent",
        "\u03b4",
        "succedent",
        "sequents",
        "interpreted",
        "thus",
        "let",
        "interpretation",
        "satisfies",
        "sequent",
        "\u03b3",
        "\u03b4",
        "written",
        "\u03b3\u03b4",
        "iff",
        "either",
        "\u03b1",
        "\u03b1",
        "\u03b3",
        "\u03b2",
        "\u03b2",
        "\u03b4",
        "word",
        "\u03b3",
        "\u03b4",
        "iff",
        "\u03b1",
        "\u03b1n",
        "\u03b2",
        "\u03b2n",
        "\u03b1",
        "\u03b1n",
        "iterated",
        "conjunction",
        "formula",
        "\u03b3",
        "\u03b2",
        "\u03b2n",
        "iterated",
        "disjunction",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "empty",
        "respectively",
        "valid",
        "unsatisfiable",
        "axiom",
        "lk",
        "sequent",
        "\u03b3",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "thus",
        "requirement",
        "formula",
        "occurs",
        "side",
        "sign",
        "mean",
        "axiom",
        "lk",
        "valid",
        "interpretation",
        "make",
        "formula",
        "\u03b3",
        "true",
        "simultaneously",
        "make",
        "\u03b4",
        "false",
        "lk",
        "two",
        "rule",
        "per",
        "logical",
        "connective",
        "plus",
        "one",
        "extra",
        "rule",
        "cut",
        "rule",
        "axiom",
        "cut",
        "rule",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b1",
        "\u03bb",
        "\u03c3",
        "\u03b3",
        "\u03bb",
        "\u03b4",
        "\u03c3",
        "antecedent",
        "rule",
        "\u03b8",
        "succedent",
        "rule",
        "\u03b8",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b4",
        "\u03b2",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b3",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b2",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b1",
        "\u03b2",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b2",
        "\u03b3",
        "\u03b2",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b2",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b3",
        "\u03b1",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "\u03b3",
        "\u03b1",
        "ax",
        "\u03b4",
        "\u03b3",
        "x\u03b1",
        "x",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "tx",
        "x\u03b1",
        "x",
        "\u03b3",
        "\u03b4",
        "x\u03b1",
        "x",
        "\u03b3",
        "\u03b1",
        "tx",
        "x\u03b1",
        "x",
        "\u03b4",
        "\u03b3",
        "x\u03b1",
        "x",
        "\u03b4",
        "\u03b3",
        "\u03b4",
        "\u03b1",
        "ax",
        "\u03b3",
        "\u03b4",
        "x\u03b1",
        "x",
        "sequents",
        "rule",
        "line",
        "called",
        "rule",
        "premise",
        "sequent",
        "line",
        "rule",
        "conclusion",
        "quantification",
        "rule",
        "eigenvariable",
        "condition",
        "restricts",
        "applicability",
        "namely",
        "must",
        "occur",
        "\u03b3",
        "\u03b4",
        "quantified",
        "sentence",
        "purpose",
        "restriction",
        "ensure",
        "choice",
        "parameter",
        "used",
        "substitution",
        "process",
        "completely",
        "arbitrary",
        "proof",
        "lk",
        "represented",
        "tree",
        "node",
        "tree",
        "labeled",
        "sequent",
        "original",
        "sequent",
        "sits",
        "root",
        "tree",
        "child",
        "node",
        "premise",
        "rule",
        "applied",
        "node",
        "leaf",
        "tree",
        "labeled",
        "axiom",
        "lkproof",
        "xr",
        "x",
        "set",
        "x",
        "p",
        "x",
        "q",
        "x",
        "x",
        "p",
        "x",
        "r",
        "x",
        "x",
        "q",
        "x",
        "r",
        "x",
        "tree",
        "\u03b3",
        "stand",
        "set",
        "\u03b3",
        "p",
        "p",
        "r",
        "xr",
        "x",
        "\u03b3",
        "p",
        "r",
        "r",
        "xr",
        "x",
        "\u03b3",
        "p",
        "p",
        "r",
        "r",
        "xr",
        "x",
        "\u03b3",
        "p",
        "r",
        "xr",
        "x",
        "\u03b3",
        "q",
        "q",
        "r",
        "xr",
        "x",
        "\u03b3",
        "q",
        "r",
        "r",
        "xr",
        "x",
        "\u03b3",
        "q",
        "q",
        "r",
        "r",
        "xr",
        "x",
        "\u03b3",
        "q",
        "r",
        "xr",
        "x",
        "\u03b3",
        "p",
        "q",
        "r",
        "xr",
        "x",
        "\u03b3",
        "r",
        "xr",
        "x",
        "\u03b3",
        "xr",
        "x",
        "example",
        "leaf",
        "proof",
        "tree",
        "labeled",
        "axiom",
        "establishes",
        "validity",
        "\u03b3",
        "xr",
        "x",
        "hence",
        "fact",
        "\u03b3",
        "xr",
        "x",
        "lk",
        "take",
        "indirect",
        "approach",
        "proving",
        "conclusion",
        "important",
        "difference",
        "lk",
        "nk",
        "nk",
        "construct",
        "actual",
        "proof",
        "conclusion",
        "given",
        "assumption",
        "lk",
        "instead",
        "construct",
        "proof",
        "prof",
        "existence",
        "proof",
        "conclusion",
        "assumption",
        "instance",
        "prove",
        "\u03b1",
        "entailed",
        "\u03b3",
        "nk",
        "construct",
        "stepbystep",
        "proof",
        "\u03b1",
        "\u03b3",
        "assuming",
        "one",
        "exists",
        "contrast",
        "lk",
        "first",
        "construct",
        "sequent",
        "\u03b3",
        "\u03b1",
        "attempt",
        "prove",
        "valid",
        "showing",
        "made",
        "false",
        "done",
        "searching",
        "counterexample",
        "make",
        "sentence",
        "\u03b3",
        "true",
        "make",
        "\u03b1",
        "false",
        "search",
        "fails",
        "counterexample",
        "exist",
        "sequent",
        "therefore",
        "valid",
        "respect",
        "proof",
        "tree",
        "lk",
        "actually",
        "refutation",
        "proof",
        "like",
        "resolution",
        "lk",
        "refutation",
        "complete",
        "\u03b3",
        "\u03b1",
        "sequent",
        "\u03b3",
        "\u03b1",
        "proof",
        "tree",
        "stand",
        "lk",
        "unsuitable",
        "automated",
        "deduction",
        "obstacle",
        "must",
        "overcome",
        "efficiently",
        "implemented",
        "reason",
        "course",
        "statement",
        "completeness",
        "lk",
        "assert",
        "entailment",
        "relation",
        "existence",
        "proof",
        "tree",
        "reasoning",
        "program",
        "difficult",
        "task",
        "actually",
        "construct",
        "one",
        "main",
        "obstacle",
        "first",
        "lk",
        "specify",
        "order",
        "rule",
        "must",
        "applied",
        "construction",
        "proof",
        "tree",
        "second",
        "particular",
        "case",
        "first",
        "problem",
        "premise",
        "rule",
        "rule",
        "inherit",
        "quantificational",
        "formula",
        "rule",
        "applied",
        "meaning",
        "rule",
        "applied",
        "repeatedly",
        "formula",
        "sending",
        "proof",
        "search",
        "endless",
        "loop",
        "third",
        "lk",
        "indicate",
        "formula",
        "must",
        "selected",
        "next",
        "application",
        "rule",
        "fourth",
        "quantifier",
        "rule",
        "provide",
        "indication",
        "term",
        "free",
        "variable",
        "must",
        "used",
        "deployment",
        "fifth",
        "particular",
        "case",
        "previous",
        "problem",
        "application",
        "quantifier",
        "rule",
        "lead",
        "infinitely",
        "long",
        "tree",
        "branch",
        "proper",
        "term",
        "used",
        "instantiation",
        "never",
        "get",
        "chosen",
        "fortunately",
        "hint",
        "problem",
        "successfully",
        "addressed",
        "axiom",
        "sequents",
        "lk",
        "valid",
        "conclusion",
        "rule",
        "valid",
        "iff",
        "premise",
        "fact",
        "allows",
        "u",
        "apply",
        "lk",
        "rule",
        "either",
        "direction",
        "forward",
        "axiom",
        "conclusion",
        "backwards",
        "conclusion",
        "axiom",
        "also",
        "exception",
        "cut",
        "rule",
        "rule",
        "premise",
        "subformulas",
        "respective",
        "conclusion",
        "purpose",
        "automated",
        "deduction",
        "significant",
        "fact",
        "would",
        "want",
        "dispense",
        "cut",
        "rule",
        "fortunately",
        "cutfree",
        "version",
        "lk",
        "preserve",
        "refutation",
        "completeness",
        "gentzen",
        "result",
        "provide",
        "strong",
        "case",
        "constructing",
        "proof",
        "tree",
        "backwards",
        "fashion",
        "indeed",
        "working",
        "way",
        "refutation",
        "cutfree",
        "lk",
        "get",
        "increasingly",
        "simpler",
        "progress",
        "since",
        "subformulas",
        "simpler",
        "parent",
        "formula",
        "moreover",
        "far",
        "propositional",
        "rule",
        "go",
        "new",
        "subformulas",
        "entered",
        "tree",
        "completely",
        "dictated",
        "cutfree",
        "lk",
        "rule",
        "furthermore",
        "assuming",
        "proof",
        "tree",
        "brought",
        "completion",
        "branch",
        "eventually",
        "end",
        "atom",
        "presence",
        "axiom",
        "quickly",
        "determined",
        "another",
        "reason",
        "working",
        "backwards",
        "truthfunctional",
        "fragment",
        "cutfree",
        "lk",
        "confluent",
        "sense",
        "order",
        "nonquantifier",
        "rule",
        "applied",
        "irrelevant",
        "proof",
        "regardless",
        "run",
        "bring",
        "quantifier",
        "rule",
        "picture",
        "thing",
        "arranged",
        "rule",
        "fair",
        "chance",
        "deployed",
        "apply",
        "far",
        "possible",
        "nonquantifier",
        "rule",
        "applying",
        "quantifier",
        "rule",
        "take",
        "care",
        "first",
        "second",
        "obstacle",
        "difficult",
        "see",
        "third",
        "one",
        "would",
        "handled",
        "fourth",
        "fifth",
        "obstacle",
        "addressed",
        "requiring",
        "term",
        "used",
        "substitution",
        "suitably",
        "selected",
        "herbrand",
        "universe",
        "herbrand",
        "use",
        "sequenttype",
        "calculus",
        "automated",
        "theorem",
        "proving",
        "initiated",
        "effort",
        "mechanize",
        "mathematics",
        "wang",
        "time",
        "resolution",
        "captured",
        "attention",
        "automated",
        "reasoning",
        "community",
        "s",
        "researcher",
        "started",
        "investigate",
        "nonresolution",
        "method",
        "bledsoe",
        "prompting",
        "frutiful",
        "sustained",
        "effort",
        "develop",
        "humanoriented",
        "theorem",
        "proving",
        "system",
        "bledsoe",
        "nevins",
        "eventually",
        "sequenttype",
        "deduction",
        "gained",
        "momentum",
        "particularly",
        "reincarnation",
        "analytic",
        "tableau",
        "fitting",
        "method",
        "deduction",
        "used",
        "tableau",
        "essentially",
        "cutfree",
        "lk",
        "set",
        "used",
        "lieu",
        "sequents"
    ]
}