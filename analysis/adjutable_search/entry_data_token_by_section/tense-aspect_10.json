{
    "main_text": "Event Calculus || Introducing tense information\n7.3 Introducing tense information\n\nIf we want to use these ideas to model natural language discourse, we\nneed to incorporate tense. In van Lambalgen and Hamm (2005) this is\ndone by adopting the classic tripartition into reference\ntime, event time and speech time due to\nReichenbach (see\n section 3).\n \n\nRecall that above, when we translated discourse (33) into Shanahan\u2019s\nEvent Calculus, we arbitrarily chose instants of time\n\\(T_1 ,\\ldots ,T_4\\) to locate actions\nin time. This is not how it is done in natural language discourse. The\nfirst sentence (Yesterday morning Vincent loaded the gun)\nstates that within some time interval \\((=\\) reference time) before now \\((=\\)\nspeech time) there was a time \\(t'\\) at which a loading event\nhappened \\((=\\) event time). The second sentence (Then he smoked a\ncigarette) is linked to this event by the connective\nthen, stating that at some later time \\(t''\\) a\nsmoking event happened with \\(t''\\) also being temporally\nlocated before now. Analogously for the third sentence: there\nis an event time \\(t'''\\) at which Shoot happens and\n\\(t'' \\lt t''' \\lt\\)\nnow. Note that when locating events in time it is\nalways done by existential statements of the form there is a\ntime. So far, however, we have only been dealing with universally\nquantified variables. Clearly, a formula like \\(\\forall t\\).Happens(Load,\n\\(t)\n\\wedge t \\lt\\) now cannot be used to represent\ntense since it would state that Load happens at all times in\nthe past. We have to find a way to introduce existentially quantified\ninformation. \n\nIntuitively, it suffices to introduce new entities into the domain of\ndiscourse. This approach lies at the heart of dynamic semantic\ntheories such as Discourse Representation Theory (Kamp and Reyle 1993,\nand see also the entry on\n Discourse Representation Theory)\n or File Change Semantics (Heim 1982). We will need an update\nprocedure that introduces new actions/events into the discourse model\nbut is compatible with the non-monotonic semantics introduced so far.\nFollowing van Lambalgen and Hamm (2005) we will use integrity\nconstraints\u2014a device from database theory (for a more\ncomplete and formal treatment the reader is referred to Kowalski 1995\nand van Lambalgen and Hamm 2005: ch. 8)\u2014to implement the notion\nof a minimal update of a discourse model. Consider discourse (50).\n\n50.\n\n The gun is loaded. Vincent is ready to shoot.\n    \n\nIn interpreting the first sentence, we want to update the situation\nmodel in a way that makes the sentence true. The tense information\nwill be interpreted as a goal to minimally update the situation model\nwith a fluent Loaded that holds now. In our framework\nsemantic interpretation is thus closely linked to planning, in that\nfinding an interpretation for a sentences requires coming up with a\nsequence of actions that makes the goal succeed. \n51.\n\n Make the query \\(?HoldsAt(Loaded, now)\\) succeed.\n    \n\n\nTo resolve this integrity constraint we will use the axioms of the\nSimple Event Calculus plus the world knowledge about the consequences\nof a load action stated in (52). \n52.\n\n \\(Initiates(Load, Loaded, t)\\)\n    \n\n\nIn logic programming, the sort of reasoning required to resolve (51)\nis carried out by a derivation procedure called resolution.\nWe will use resolution here in a non-standard way, i.e. logic\nprogramming combined with integrity constraints (for details see van\nLambalgen and Hamm 2005). It starts with the formula that has to be\nmade true in the discourse model. Resolution proceeds by identifying\nrules which have the query as their consequent and substituting the\nconsequent with the antecedent conditions of the rule, making the\nantecedent formulas new queries themselves. The resolution stops when\nthe query cannot be further resolved, that is, when a plan has been\ncomputed whose preconditions are all fulfilled given an appropriate\nupdate of the discourse model. To get an impression of how this works\nwe will illustrate the resolution of (51). First, we have to compute\nthe completion of the program and whenever possible substitute the\nvariables with constants, in our case Loaded and\n\nnow. In logic programming this substitution is done\nautomatically via unification. Here is the completion of the\nHoldsAt predicate which forms the head of two\naxioms\u2014(35) and (36). \n53.\n\n\n \\(HoldsAt(Loaded, now)\\,\\leftrightarrow\\) \n \\((Initially(Loaded) \\wedge \\neg Clipped(0, Loaded, now))\\,\\vee\\)\n \\((Happens(a, s) \\wedge Initiates(a, Loaded, s) \\wedge s \\lt now \\wedge\\)\n \\(\\neg Clipped(s, Loaded, now))\\)\n    \n\n\nSince the theory doesn\u2019t contain the statement\nInitially(Loaded), closed world reasoning yields\nthat at time 0 the gun is not loaded\n\\((\\neg\\)Initially(Loaded)). No matter how we update\nthe discourse representation the first disjunct can never succeed. We\nthus have to move on to the second disjunct. In this case, the\ndatabase is searched for an action \\(a\\) and a time \\(s\\) such\nthat Initiates\\((a, f, s)\\),\n\nHappens\\((a, s)\\) and\n\\(\\neg\\)Clipped\\((s\\), Loaded, \\(t)\\). On the\nsole basis of the information provided in the discourse the subquery\n?Happens\\((a, s)\\) will fail, because in discourse\n(50) there is no information about a load action. However, since\nintegrity constraints are intended to be made true, the database will\nbe updated with a clause Happens(Load,\n\\(s) \\wedge s \\lt\\)\n\nnow which makes the second disjunct true and the query\nsucceed. \n",
    "section_title": "7.3 Introducing tense information",
    "entry_title": "Tense and Aspect",
    "hierarchy_title": "Tense and Aspect || Event Calculus || Introducing tense information",
    "tokenized_text": [
        "event",
        "calculus",
        "introducing",
        "tense",
        "information",
        "introducing",
        "tense",
        "information",
        "want",
        "use",
        "idea",
        "model",
        "natural",
        "language",
        "discourse",
        "need",
        "incorporate",
        "tense",
        "van",
        "lambalgen",
        "hamm",
        "done",
        "adopting",
        "classic",
        "tripartition",
        "reference",
        "time",
        "event",
        "time",
        "speech",
        "time",
        "due",
        "reichenbach",
        "see",
        "section",
        "recall",
        "translated",
        "discourse",
        "shanahan",
        "event",
        "calculus",
        "arbitrarily",
        "chose",
        "instant",
        "time",
        "t_",
        "ldots",
        "t_",
        "locate",
        "action",
        "time",
        "done",
        "natural",
        "language",
        "discourse",
        "first",
        "sentence",
        "yesterday",
        "morning",
        "vincent",
        "loaded",
        "gun",
        "state",
        "within",
        "time",
        "interval",
        "reference",
        "time",
        "speech",
        "time",
        "time",
        "t",
        "loading",
        "event",
        "happened",
        "event",
        "time",
        "second",
        "sentence",
        "smoked",
        "cigarette",
        "linked",
        "event",
        "connective",
        "stating",
        "later",
        "time",
        "smoking",
        "event",
        "happened",
        "also",
        "temporally",
        "located",
        "analogously",
        "third",
        "sentence",
        "event",
        "time",
        "shoot",
        "happens",
        "lt",
        "lt",
        "note",
        "locating",
        "event",
        "time",
        "always",
        "done",
        "existential",
        "statement",
        "form",
        "time",
        "far",
        "however",
        "dealing",
        "universally",
        "quantified",
        "variable",
        "clearly",
        "formula",
        "like",
        "forall",
        "t",
        "happens",
        "load",
        "wedge",
        "lt",
        "used",
        "represent",
        "tense",
        "since",
        "would",
        "state",
        "load",
        "happens",
        "time",
        "past",
        "find",
        "way",
        "introduce",
        "existentially",
        "quantified",
        "information",
        "intuitively",
        "suffices",
        "introduce",
        "new",
        "entity",
        "domain",
        "discourse",
        "approach",
        "lie",
        "heart",
        "dynamic",
        "semantic",
        "theory",
        "discourse",
        "representation",
        "theory",
        "kamp",
        "reyle",
        "see",
        "also",
        "entry",
        "discourse",
        "representation",
        "theory",
        "file",
        "change",
        "semantics",
        "heim",
        "need",
        "update",
        "procedure",
        "introduces",
        "new",
        "actionsevents",
        "discourse",
        "model",
        "compatible",
        "nonmonotonic",
        "semantics",
        "introduced",
        "far",
        "following",
        "van",
        "lambalgen",
        "hamm",
        "use",
        "integrity",
        "constraintsa",
        "device",
        "database",
        "theory",
        "complete",
        "formal",
        "treatment",
        "reader",
        "referred",
        "kowalski",
        "van",
        "lambalgen",
        "hamm",
        "ch",
        "to",
        "implement",
        "notion",
        "minimal",
        "update",
        "discourse",
        "model",
        "consider",
        "discourse",
        "gun",
        "loaded",
        "vincent",
        "ready",
        "shoot",
        "interpreting",
        "first",
        "sentence",
        "want",
        "update",
        "situation",
        "model",
        "way",
        "make",
        "sentence",
        "true",
        "tense",
        "information",
        "interpreted",
        "goal",
        "minimally",
        "update",
        "situation",
        "model",
        "fluent",
        "loaded",
        "hold",
        "framework",
        "semantic",
        "interpretation",
        "thus",
        "closely",
        "linked",
        "planning",
        "finding",
        "interpretation",
        "sentence",
        "requires",
        "coming",
        "sequence",
        "action",
        "make",
        "goal",
        "succeed",
        "make",
        "query",
        "holdsat",
        "loaded",
        "succeed",
        "resolve",
        "integrity",
        "constraint",
        "use",
        "axiom",
        "simple",
        "event",
        "calculus",
        "plus",
        "world",
        "knowledge",
        "consequence",
        "load",
        "action",
        "stated",
        "initiate",
        "load",
        "loaded",
        "logic",
        "programming",
        "sort",
        "reasoning",
        "required",
        "resolve",
        "carried",
        "derivation",
        "procedure",
        "called",
        "resolution",
        "use",
        "resolution",
        "nonstandard",
        "way",
        "ie",
        "logic",
        "programming",
        "combined",
        "integrity",
        "constraint",
        "detail",
        "see",
        "van",
        "lambalgen",
        "hamm",
        "start",
        "formula",
        "made",
        "true",
        "discourse",
        "model",
        "resolution",
        "proceeds",
        "identifying",
        "rule",
        "query",
        "consequent",
        "substituting",
        "consequent",
        "antecedent",
        "condition",
        "rule",
        "making",
        "antecedent",
        "formula",
        "new",
        "query",
        "resolution",
        "stop",
        "query",
        "resolved",
        "plan",
        "computed",
        "whose",
        "precondition",
        "fulfilled",
        "given",
        "appropriate",
        "update",
        "discourse",
        "model",
        "get",
        "impression",
        "work",
        "illustrate",
        "resolution",
        "first",
        "compute",
        "completion",
        "program",
        "whenever",
        "possible",
        "substitute",
        "variable",
        "constant",
        "case",
        "loaded",
        "logic",
        "programming",
        "substitution",
        "done",
        "automatically",
        "via",
        "unification",
        "completion",
        "holdsat",
        "predicate",
        "form",
        "head",
        "two",
        "axioms",
        "holdsat",
        "loaded",
        "leftrightarrow",
        "initially",
        "loaded",
        "wedge",
        "neg",
        "clipped",
        "loaded",
        "vee",
        "happens",
        "wedge",
        "initiate",
        "loaded",
        "wedge",
        "lt",
        "wedge",
        "neg",
        "clipped",
        "loaded",
        "since",
        "theory",
        "contain",
        "statement",
        "initially",
        "loaded",
        "closed",
        "world",
        "reasoning",
        "yield",
        "time",
        "gun",
        "loaded",
        "neg",
        "initially",
        "loaded",
        "matter",
        "update",
        "discourse",
        "representation",
        "first",
        "disjunct",
        "never",
        "succeed",
        "thus",
        "move",
        "second",
        "disjunct",
        "case",
        "database",
        "searched",
        "action",
        "a",
        "time",
        "s",
        "initiates",
        "f",
        "happens",
        "neg",
        "clipped",
        "s",
        "loaded",
        "sole",
        "basis",
        "information",
        "provided",
        "discourse",
        "subquery",
        "happens",
        "fail",
        "discourse",
        "information",
        "load",
        "action",
        "however",
        "since",
        "integrity",
        "constraint",
        "intended",
        "made",
        "true",
        "database",
        "updated",
        "clause",
        "happens",
        "load",
        "wedge",
        "lt",
        "make",
        "second",
        "disjunct",
        "true",
        "query",
        "succeed"
    ]
}