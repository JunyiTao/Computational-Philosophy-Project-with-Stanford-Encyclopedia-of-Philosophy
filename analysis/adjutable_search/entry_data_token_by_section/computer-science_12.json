{
    "main_text": "Programs || Programs as Theories\n4.1 Programs as Theories\n\nThe view that programs are theories goes back to approaches in\ncognitive science. In the context of the so-called Information\nProcessing Psychology (IPP) for the simulative investigation on human\ncognitive processes, Newell and Simon (1972) advanced the thesis that\nsimulative programs are empirical theories of their simulated\nsystems. Newell and Simon assigned to a computer program the role of\ntheory of the simulated system as well as of the simulative system,\nnamely the machine running the program, to formulate predictions on\nthe simulated system. In particular, the execution traces of the\nsimulative program, given a specific problem to solve, are used to\npredict the mental operation strategies that will be performed by the\nhuman subject when asked to accomplish the same task. In case of a\nmismatch between execution traces and the verbal reports of the\noperation strategies of the human subject, the empirical theory\nprovided by the simulative program is revised. The predictive use of\nsuch a computer program is comparable, according to Newell and Simon,\nto the predictive use of the evolution laws of a system that are\nexpressed by differential or difference equations.\n\nNewell and Simon\u2019s idea that programs are theories has been\nshared by the cognitive scientists Pylyshyn (1984) and Johnson-Laird\n(1988). Both agree that programs, in contrast to typical theories, are\nbetter at\u00a0facing\u00a0the complexity of the simulative process to\nbe modelled, forcing one to fill-in all the details that are necessary\nfor the program to be executed. Whereas incomplete or incoherent\ntheories may be advanced at some stage of scientific inquiry, this is\nnot the case for programs.\n\nOn the other hand, Moore (1978) considers the programs-as-theories\nthesis another myth\u00a0of computer science.\u00a0As programs can\nonly simulate some set of empirical phenomena, at most they play the\nrole of computational models of those phenomena. Moore\nnotices that for programs to be acknowledged as models, semantic\nfunctions are nevertheless needed to interpret the empirical system\nbeing simulated. However, the view that programs are models should not\nbe mistaken for the definition of programs as theories: theories\nexplain and predict the empirical phenomena\nsimulated by models, while simulation by programs does not offer\nthat.\n\nAccording to computer scientist Paul Thagard (1984), understanding\nprograms as theories would require a syntactic or a\nsemantic view of theories (see the entry on\n the structure of scientific theories).\n But programs do not comply with either of the two views. According to\nthe syntactic view (Carnap 1966, Hempel 1970), theories are sets of\nsentences expressed in some defined language able to describe target\nempirical systems; some of those sentences define the axioms of the\ntheory, and some are law-like statements expressing regularities of\nthose systems. Programs are sets of instructions written in some\ndefined programming language which, however, do not describe any\nsystem, insofar as they are procedural linguistic entities and not\ndeclarative ones. To this, Rapaport (2020, see Other Internet\nResources) objects that procedural programming languages can often be\ntranslated into declarative languages and that there are languages,\nsuch as Prolog, that can be interpreted both procedurally and\ndeclaratively. According to the semantic view (Suppe 1989, Van\nFraassen 1980), theories are introduced by a collection of models,\ndefined as set-theoretic structures satisfying the theory\u2019s\nsentences. However, in contrast to Moore (1978), Thagard (1984) denies\nprograms the epistemological status of models: programs simulate\nphysical systems without satisfying theories\u2019 laws and axioms.\nRather, programs include, for simulation purposes, implementation\ndetails for the programming language used, but not of the target\nsystem being simulated.\n\nA yet different approach to the problem of whether programs are\ntheories comes from the computer scientist Peter Naur (1985).\nAccording to Naur, programming is a theory building process not in the\nsense that programs are theories, but because the successful\nprogram\u2019s development and life-cycle require that programmers\nand developers have theories of programs available. A theory is here\nunderstood, following Ryle (2009), as a corpus of knowledge shared by\na scientific community about some set of empirical phenomena, and not\nnecessarily expressed axiomatically or formally. Theories of\nprograms are necessary during the program life-cycle to be able to\nmanage requests of program modifications pursuant to observed\nmiscomputations or unsatisfactory solutions to the computational\nproblem the program was asked to solve. In particular, theories of\nprograms should allow developers to modify the program so that new\nsolutions to the problem at stake can be provided. For this reason,\nNaur (1985) deems such theories more fundamental, in software\ndevelopment, than documentations and specifications.\n\nFor Turner (2010, 2018 ch. 10), programming languages are mathematical\nobjects defined by a formal grammar and a formal semantics. In\nparticular, each syntactic construct, such as an assignment, a\nconditional or a while loop, is defined by a grammatical rule\ndetermining its syntax, and by a semantic rule associating a meaning\nto it. Depending on whether an operational or a denotational semantics\nis preferred, meaning is given in terms of respectively the operations\nof an abstract machine or of mathematical partial functions from set\nof states to set of states. For instance, the simple assignment\nstatement \\(x := E\\) is associated, under an operational semantics,\nwith the machine operation \\(update(s,x,v)\\) which assigns variable\n\\(v\\) interpreted as \\(E\\) to variable \\(x\\) in state \\(s\\). Both in\nthe case of an operational and of a denotational semantics, programs\ncan be understood as mathematical theories expressing the operations\nof an implementing machine. Consider operational semantics: a\nsyntactic rule of the form \\(\\langle P,s \\rangle \\Downarrow s'\\)\nstates semantically that program \\(P\\) executed in state \\(s\\) results\nin \\(s'.\\) According to Turner (2010, 2018), a programming language\nwith an operational semantics is akin to an axiomatic theory of\noperations in which rules provide axioms for the relation\n\\(\\Downarrow\\).\n",
    "section_title": "4.1 Programs as Theories",
    "entry_title": "The Philosophy of Computer Science",
    "hierarchy_title": "The Philosophy of Computer Science || Programs || Programs as Theories",
    "tokenized_text": [
        "program",
        "program",
        "theory",
        "program",
        "theory",
        "view",
        "program",
        "theory",
        "go",
        "back",
        "approach",
        "cognitive",
        "science",
        "context",
        "socalled",
        "information",
        "processing",
        "psychology",
        "ipp",
        "simulative",
        "investigation",
        "human",
        "cognitive",
        "process",
        "newell",
        "simon",
        "advanced",
        "thesis",
        "simulative",
        "program",
        "empirical",
        "theory",
        "simulated",
        "system",
        "newell",
        "simon",
        "assigned",
        "computer",
        "program",
        "role",
        "theory",
        "simulated",
        "system",
        "well",
        "simulative",
        "system",
        "namely",
        "machine",
        "running",
        "program",
        "formulate",
        "prediction",
        "simulated",
        "system",
        "particular",
        "execution",
        "trace",
        "simulative",
        "program",
        "given",
        "specific",
        "problem",
        "solve",
        "used",
        "predict",
        "mental",
        "operation",
        "strategy",
        "performed",
        "human",
        "subject",
        "asked",
        "accomplish",
        "task",
        "case",
        "mismatch",
        "execution",
        "trace",
        "verbal",
        "report",
        "operation",
        "strategy",
        "human",
        "subject",
        "empirical",
        "theory",
        "provided",
        "simulative",
        "program",
        "revised",
        "predictive",
        "use",
        "computer",
        "program",
        "comparable",
        "according",
        "newell",
        "simon",
        "predictive",
        "use",
        "evolution",
        "law",
        "system",
        "expressed",
        "differential",
        "difference",
        "equation",
        "newell",
        "simon",
        "idea",
        "program",
        "theory",
        "shared",
        "cognitive",
        "scientist",
        "pylyshyn",
        "johnsonlaird",
        "agree",
        "program",
        "contrast",
        "typical",
        "theory",
        "better",
        "facing",
        "complexity",
        "simulative",
        "process",
        "modelled",
        "forcing",
        "one",
        "fillin",
        "detail",
        "necessary",
        "program",
        "executed",
        "whereas",
        "incomplete",
        "incoherent",
        "theory",
        "may",
        "advanced",
        "stage",
        "scientific",
        "inquiry",
        "case",
        "program",
        "hand",
        "moore",
        "considers",
        "programsastheories",
        "thesis",
        "another",
        "myth",
        "computer",
        "science",
        "program",
        "simulate",
        "set",
        "empirical",
        "phenomenon",
        "play",
        "role",
        "computational",
        "model",
        "phenomenon",
        "moore",
        "notice",
        "program",
        "acknowledged",
        "model",
        "semantic",
        "function",
        "nevertheless",
        "needed",
        "interpret",
        "empirical",
        "system",
        "simulated",
        "however",
        "view",
        "program",
        "model",
        "mistaken",
        "definition",
        "program",
        "theory",
        "theory",
        "explain",
        "predict",
        "empirical",
        "phenomenon",
        "simulated",
        "model",
        "simulation",
        "program",
        "offer",
        "according",
        "computer",
        "scientist",
        "paul",
        "thagard",
        "understanding",
        "program",
        "theory",
        "would",
        "require",
        "syntactic",
        "semantic",
        "view",
        "theory",
        "see",
        "entry",
        "structure",
        "scientific",
        "theory",
        "program",
        "comply",
        "either",
        "two",
        "view",
        "according",
        "syntactic",
        "view",
        "carnap",
        "hempel",
        "theory",
        "set",
        "sentence",
        "expressed",
        "defined",
        "language",
        "able",
        "describe",
        "target",
        "empirical",
        "system",
        "sentence",
        "define",
        "axiom",
        "theory",
        "lawlike",
        "statement",
        "expressing",
        "regularity",
        "system",
        "program",
        "set",
        "instruction",
        "written",
        "defined",
        "programming",
        "language",
        "however",
        "describe",
        "system",
        "insofar",
        "procedural",
        "linguistic",
        "entity",
        "declarative",
        "one",
        "rapaport",
        "see",
        "internet",
        "resource",
        "object",
        "procedural",
        "programming",
        "language",
        "often",
        "translated",
        "declarative",
        "language",
        "language",
        "prolog",
        "interpreted",
        "procedurally",
        "declaratively",
        "according",
        "semantic",
        "view",
        "suppe",
        "van",
        "fraassen",
        "theory",
        "introduced",
        "collection",
        "model",
        "defined",
        "settheoretic",
        "structure",
        "satisfying",
        "theory",
        "sentence",
        "however",
        "contrast",
        "moore",
        "thagard",
        "denies",
        "program",
        "epistemological",
        "status",
        "model",
        "program",
        "simulate",
        "physical",
        "system",
        "without",
        "satisfying",
        "theory",
        "law",
        "axiom",
        "rather",
        "program",
        "include",
        "simulation",
        "purpose",
        "implementation",
        "detail",
        "programming",
        "language",
        "used",
        "target",
        "system",
        "simulated",
        "yet",
        "different",
        "approach",
        "problem",
        "whether",
        "program",
        "theory",
        "come",
        "computer",
        "scientist",
        "peter",
        "naur",
        "according",
        "naur",
        "programming",
        "theory",
        "building",
        "process",
        "sense",
        "program",
        "theory",
        "successful",
        "program",
        "development",
        "lifecycle",
        "require",
        "programmer",
        "developer",
        "theory",
        "program",
        "available",
        "theory",
        "understood",
        "following",
        "ryle",
        "corpus",
        "knowledge",
        "shared",
        "scientific",
        "community",
        "set",
        "empirical",
        "phenomenon",
        "necessarily",
        "expressed",
        "axiomatically",
        "formally",
        "theory",
        "program",
        "necessary",
        "program",
        "lifecycle",
        "able",
        "manage",
        "request",
        "program",
        "modification",
        "pursuant",
        "observed",
        "miscomputations",
        "unsatisfactory",
        "solution",
        "computational",
        "problem",
        "program",
        "asked",
        "solve",
        "particular",
        "theory",
        "program",
        "allow",
        "developer",
        "modify",
        "program",
        "new",
        "solution",
        "problem",
        "stake",
        "provided",
        "reason",
        "naur",
        "deems",
        "theory",
        "fundamental",
        "software",
        "development",
        "documentation",
        "specification",
        "turner",
        "ch",
        "programming",
        "language",
        "mathematical",
        "object",
        "defined",
        "formal",
        "grammar",
        "formal",
        "semantics",
        "particular",
        "syntactic",
        "construct",
        "assignment",
        "conditional",
        "loop",
        "defined",
        "grammatical",
        "rule",
        "determining",
        "syntax",
        "semantic",
        "rule",
        "associating",
        "meaning",
        "depending",
        "whether",
        "operational",
        "denotational",
        "semantics",
        "preferred",
        "meaning",
        "given",
        "term",
        "respectively",
        "operation",
        "abstract",
        "machine",
        "mathematical",
        "partial",
        "function",
        "set",
        "state",
        "set",
        "state",
        "instance",
        "simple",
        "assignment",
        "statement",
        "x",
        "e",
        "associated",
        "operational",
        "semantics",
        "machine",
        "operation",
        "update",
        "x",
        "v",
        "assigns",
        "variable",
        "v",
        "interpreted",
        "e",
        "variable",
        "x",
        "state",
        "s",
        "case",
        "operational",
        "denotational",
        "semantics",
        "program",
        "understood",
        "mathematical",
        "theory",
        "expressing",
        "operation",
        "implementing",
        "machine",
        "consider",
        "operational",
        "semantics",
        "syntactic",
        "rule",
        "form",
        "langle",
        "p",
        "rangle",
        "downarrow",
        "s",
        "state",
        "semantically",
        "program",
        "p",
        "executed",
        "state",
        "s",
        "result",
        "s",
        "according",
        "turner",
        "programming",
        "language",
        "operational",
        "semantics",
        "akin",
        "axiomatic",
        "theory",
        "operation",
        "rule",
        "provide",
        "axiom",
        "relation",
        "downarrow"
    ]
}