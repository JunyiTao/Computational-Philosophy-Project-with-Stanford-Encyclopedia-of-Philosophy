{
    "main_text": "Frege\u2019s Theory of Extensions: Basic Law V || Notation for Extensions of Concepts\n2.2 Notation for Extensions of Concepts\n\nSince concepts, for Frege, are functions that always map their\narguments to a truth value, we may introduce some new notation to help\nus represent Frege\u2019s method of forming names of the extensions\nof concepts. This new notation takes advantage of our\n\\(\\lambda\\)-notation for naming concepts, and so allows us to\nintroduce a new kind of function term where Frege introduced a\nvariable-binding operator.\n\nLet us stipulate that where \\(\\Pi\\) is any 1-place concept term (name\nor variable), the notation \u2018\\(\\epsilon\\Pi\\)\u2019 designates\nthe extension of the concept \\(\\Pi\\). So, for example, \\(\\epsilon F\\)\ndenotes the extension of the concept \\(F\\). Note that 1-place\n\\(\\lambda\\)-expressions of the form \\([\\lambda x\\,\\phi]\\) are 1-place\nconcept terms, and so \\(\\epsilon[\\lambda x\\,\\phi]\\) is well-formed and\ndesignates the extension of the concept \\([\\lambda x\\,\\phi]\\). Thus,\nwhereas Frege used \\(\\stackrel{,}{\\epsilon}\\) as a variable-binding\noperator that binds an object variable in a formula to produce the\nname of an extension, we are using \\(\\epsilon\\) as a term-forming\nfunction symbol that applies to 1-place concept terms to produce terms\ndenoting, or ranging over, objects. Thus, when \\(\\epsilon\\) is\nprefixed to a concept name, the resulting expression is a name of an\nobject, and in particular, a name of the extension of the concept\ndenoted by the concept name. When the \\(\\epsilon\\) is prefixed to a\nconcept variable, e.g., as in \\(\\epsilon F\\), the resulting expression\nis a kind of complex variable that ranges over extensions: for each\nvalue of the variable \\(F\\), \\(\\epsilon F\\) denotes the extension of\n\\(F\\).\n\nHere is an example of our notation involving a pair of complex\nconcepts. Consider the concept that which when added to 4\nequals 5, or using \\(\\lambda\\)-notation, the following\nconcept:\n\n\\([\\lambda x \\, x+4 = 5]\\) \n\nWe use the following notation to denote the extension of this concept:\n\n\n\\(\\epsilon[\\lambda x \\, x+4 = 5]\\) \n\nNow consider the concept that which when added to \\(2^{2}\\)\nequals 5 (i.e., \\([\\lambda x~x+2^{2} = 5])\\). We use the\nfollowing notation to denote the extension of this concept: \n\n\\(\\epsilon[\\lambda x \\, x+2^{2} = 5]\\) \n\nNote that it seems natural to identify these two extensions given that\nall and only the objects that fall under the first concept fall under\nthe second. Those readers already familiar with the\n\\(\\lambda\\)-calculus should remember that \\(\\epsilon[\\lambda x~\\phi]\\)\ndenotes an object, that \\([\\lambda x~\\phi]\\) denotes a concept, and\nthat Frege rigorously distinguished objects and concepts and supposed\nthem to constitute mutually exclusive domains.\n",
    "section_title": "2.2 Notation for Extensions of Concepts",
    "entry_title": "Frege\u2019s Theorem and Foundations for Arithmetic",
    "hierarchy_title": "Frege\u2019s Theorem and Foundations for Arithmetic || Frege\u2019s Theory of Extensions: Basic Law V || Notation for Extensions of Concepts",
    "tokenized_text": [
        "frege",
        "theory",
        "extension",
        "basic",
        "law",
        "v",
        "notation",
        "extension",
        "concept",
        "notation",
        "extension",
        "concept",
        "since",
        "concept",
        "frege",
        "function",
        "always",
        "map",
        "argument",
        "truth",
        "value",
        "may",
        "introduce",
        "new",
        "notation",
        "help",
        "u",
        "represent",
        "frege",
        "method",
        "forming",
        "name",
        "extension",
        "concept",
        "new",
        "notation",
        "take",
        "advantage",
        "lambda",
        "notation",
        "naming",
        "concept",
        "allows",
        "u",
        "introduce",
        "new",
        "kind",
        "function",
        "term",
        "frege",
        "introduced",
        "variablebinding",
        "operator",
        "let",
        "u",
        "stipulate",
        "pi",
        "place",
        "concept",
        "term",
        "name",
        "variable",
        "notation",
        "epsilonpi",
        "designates",
        "extension",
        "concept",
        "pi",
        "example",
        "epsilon",
        "f",
        "denotes",
        "extension",
        "concept",
        "f",
        "note",
        "place",
        "lambda",
        "expressions",
        "form",
        "lambda",
        "x",
        "phi",
        "place",
        "concept",
        "term",
        "epsilon",
        "lambda",
        "x",
        "phi",
        "wellformed",
        "designates",
        "extension",
        "concept",
        "lambda",
        "x",
        "phi",
        "thus",
        "whereas",
        "frege",
        "used",
        "stackrel",
        "epsilon",
        "variablebinding",
        "operator",
        "bind",
        "object",
        "variable",
        "formula",
        "produce",
        "name",
        "extension",
        "using",
        "epsilon",
        "termforming",
        "function",
        "symbol",
        "applies",
        "place",
        "concept",
        "term",
        "produce",
        "term",
        "denoting",
        "ranging",
        "object",
        "thus",
        "epsilon",
        "prefixed",
        "concept",
        "name",
        "resulting",
        "expression",
        "name",
        "object",
        "particular",
        "name",
        "extension",
        "concept",
        "denoted",
        "concept",
        "name",
        "epsilon",
        "prefixed",
        "concept",
        "variable",
        "eg",
        "epsilon",
        "f",
        "resulting",
        "expression",
        "kind",
        "complex",
        "variable",
        "range",
        "extension",
        "value",
        "variable",
        "f",
        "epsilon",
        "f",
        "denotes",
        "extension",
        "f",
        "example",
        "notation",
        "involving",
        "pair",
        "complex",
        "concept",
        "consider",
        "concept",
        "added",
        "equal",
        "using",
        "lambda",
        "notation",
        "following",
        "concept",
        "lambda",
        "x",
        "x",
        "use",
        "following",
        "notation",
        "denote",
        "extension",
        "concept",
        "epsilon",
        "lambda",
        "x",
        "x",
        "consider",
        "concept",
        "added",
        "equal",
        "ie",
        "lambda",
        "xx",
        "use",
        "following",
        "notation",
        "denote",
        "extension",
        "concept",
        "epsilon",
        "lambda",
        "x",
        "x",
        "note",
        "seems",
        "natural",
        "identify",
        "two",
        "extension",
        "given",
        "object",
        "fall",
        "first",
        "concept",
        "fall",
        "second",
        "reader",
        "already",
        "familiar",
        "lambda",
        "calculus",
        "remember",
        "epsilon",
        "lambda",
        "xphi",
        "denotes",
        "object",
        "lambda",
        "xphi",
        "denotes",
        "concept",
        "frege",
        "rigorously",
        "distinguished",
        "object",
        "concept",
        "supposed",
        "constitute",
        "mutually",
        "exclusive",
        "domain"
    ]
}