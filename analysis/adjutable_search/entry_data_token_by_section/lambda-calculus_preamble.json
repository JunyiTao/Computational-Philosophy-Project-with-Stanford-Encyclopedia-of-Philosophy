{
    "main_text": "\n\nThe \\(\\lambda\\)-calculus is, at heart, a simple notation for functions\nand application. The main ideas are applying a function to an\nargument and forming functions by abstraction. The syntax of\nbasic \\(\\lambda\\)-calculus is quite sparse, making it an elegant,\nfocused notation for representing functions. Functions and arguments\nare on a par with one another. The result is a non-extensional theory\nof functions as rules of computation, contrasting with an extensional\ntheory of functions as sets of ordered pairs. Despite its sparse\nsyntax, the expressiveness and flexibility of the \\(\\lambda\\)-calculus\nmake it a cornucopia of logic and mathematics. This entry develops\nsome of the central highlights of the field and prepares the reader\nfor further study of the subject and its applications in philosophy,\nlinguistics, computer science, and logic.\n",
    "section_title": "Preamble",
    "entry_title": "The Lambda Calculus",
    "hierarchy_title": "The Lambda Calculus || Preamble",
    "tokenized_text": [
        "lambda",
        "calculus",
        "heart",
        "simple",
        "notation",
        "function",
        "application",
        "main",
        "idea",
        "applying",
        "function",
        "argument",
        "forming",
        "function",
        "abstraction",
        "syntax",
        "basic",
        "lambda",
        "calculus",
        "quite",
        "sparse",
        "making",
        "elegant",
        "focused",
        "notation",
        "representing",
        "function",
        "function",
        "argument",
        "par",
        "one",
        "another",
        "result",
        "nonextensional",
        "theory",
        "function",
        "rule",
        "computation",
        "contrasting",
        "extensional",
        "theory",
        "function",
        "set",
        "ordered",
        "pair",
        "despite",
        "sparse",
        "syntax",
        "expressiveness",
        "flexibility",
        "lambda",
        "calculus",
        "make",
        "cornucopia",
        "logic",
        "mathematics",
        "entry",
        "develops",
        "central",
        "highlight",
        "field",
        "prepares",
        "reader",
        "study",
        "subject",
        "application",
        "philosophy",
        "linguistics",
        "computer",
        "science",
        "logic"
    ]
}