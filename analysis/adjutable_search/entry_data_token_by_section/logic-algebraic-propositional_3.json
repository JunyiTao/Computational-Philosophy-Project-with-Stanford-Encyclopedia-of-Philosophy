{
    "main_text": "Some examples of logics || Classical propositional logic\n3.1 Classical propositional logic\n\nWe take the language of Classical propositional logic \\(\\bCPL\\) to be\nthe set \\(L_c = \\{\\wedge , \\vee , \\rightarrow , \\top , \\bot \\},\\)\nwhere \\(\\wedge , \\vee , \\rightarrow\\) are binary connectives and\n\\(\\top , \\bot\\) propositional constants. We assume that the\nconsequence relation is defined by the usual truth-table method\n\\((\\top\\) is interpreted as true and\n\\(\\bot\\) as false) as follows,\n\n\\(\\Gamma \\vdash_{\\bCPL } \\phi\\txtiff\\) every truth valuation that\nassigns true to all \\(\\psi \\in \\Gamma\\)\nassigns true to \\(\\phi\\).\n\nThe formulas \\(\\phi\\) such that \\(\\varnothing \\vdash_{\\bCPL } \\phi\\)\nare the tautologies. Note that using the language \\(L_c\\),\nthe negation of a formula \\(\\phi\\) is defined as \\(\\phi \\rightarrow\n\\bot\\). For more information, see the entry on\n classical logic.\n \n",
    "section_title": "3.1 Classical propositional logic",
    "entry_title": "Algebraic Propositional Logic",
    "hierarchy_title": "Algebraic Propositional Logic || Some examples of logics || Classical propositional logic",
    "tokenized_text": [
        "example",
        "logic",
        "classical",
        "propositional",
        "logic",
        "classical",
        "propositional",
        "logic",
        "take",
        "language",
        "classical",
        "propositional",
        "logic",
        "bcpl",
        "set",
        "l_c",
        "wedge",
        "vee",
        "rightarrow",
        "top",
        "bot",
        "wedge",
        "vee",
        "rightarrow",
        "binary",
        "connective",
        "top",
        "bot",
        "propositional",
        "constant",
        "assume",
        "consequence",
        "relation",
        "defined",
        "usual",
        "truthtable",
        "method",
        "top",
        "interpreted",
        "true",
        "bot",
        "false",
        "follows",
        "gamma",
        "vdash_",
        "bcpl",
        "phitxtiff",
        "every",
        "truth",
        "valuation",
        "assigns",
        "true",
        "psi",
        "in",
        "gamma",
        "assigns",
        "true",
        "phi",
        "formula",
        "phi",
        "varnothing",
        "vdash_",
        "bcpl",
        "phi",
        "tautology",
        "note",
        "using",
        "language",
        "l_c",
        "negation",
        "formula",
        "phi",
        "defined",
        "phi",
        "rightarrow",
        "bot",
        "information",
        "see",
        "entry",
        "classical",
        "logic"
    ]
}