{
    "main_text": "The Functional Composition Principle\n4. The Functional Composition Principle\n\n\nThe key ingredients of the KS theorem are the constraints on value\nassignments spelled out in (2): the Sum Rule and Product Rule. They\ncan be derived from a more general principle, called the Functional\nComposition Principle\n (FUNC).[11]\n The principle trades on the mathematical fact that for a\nself-adjoint operator A operating on a\nHilbert space, and an arbitrary function f:\n R\u2192R\n(where R is the set of the real numbers), we can\ndefine f(A) and show that it also is a\nself-adjoint operator (hence, we write\nf(A)). If we further assume that to every\nself-adjoint operator there corresponds a QM observable, then the\nprinciple can be formulated thus:\nFUNC:\u00a0 Let A\nbe a self-adjoint operator associated with observable A, let f:\nR\n \u2192\n R be an\narbitrary function, such that f(A) is another\nself-adjoint operator, and let\n |\u03c6>\n be an arbitrary state; then f(A) is associated\nuniquely with an observable f(A) such that: \n\nv(f(A))|\u03c6>\n =\n f(v(A))|\u03c6>\n\n\n\n\n(We introduce the state superscript above to allow for a possible\ndependence of values on the particular quantum state the system is\nprepared in.) The Sum Rule and the Product Rule are straightforward\nconsequences of FUNC [Proof].\n FUNC itself is not derivable from the formalism\nof QM, but a statistical version of it (called STAT FUNC) is\n [Proof]:\nSTAT FUNC:\u00a0 Given A, f,\n |\u03c6>\n as defined in FUNC, then, for an\narbitrary real number b: \n\nprob[v(f(A))|\u03c6>=b]\n =\n prob[f(v(A))|\u03c6>=b]\n\n\n\nBut STAT FUNC cannot only be derived from the QM formalism; it also\nfollows from FUNC\n [Proof].\nThis can be seen as providing \u201ca plausibility argument for FUNC\u201d\n(Redhead 1987: 132): STAT FUNC is true, as a matter of the mathematics\nof QM. Now, if FUNC were true, we could derive STAT FUNC, and thus\nunderstand part of the mathematics of QM as a consequence of \n FUNC.[12]\n \n\nBut how can we derive FUNC itself, if not from STAT FUNC? It is a\ndirect consequence of STAT FUNC and three assumptions (two of which\nare familiar from the introduction):\nValue Realism (VR): If there is an\noperationally defined real number \u03b1, associated with a\nself-adjoint operator A and if, for a given\nstate, the statistical algorithm of QM for A\nyields a real number \u03b2 with\n \u03b2 = prob(v(A)=\u03b1), then\nthere exists an observable A with value \u03b1.\n\n\nValue Definiteness (VD): All observables defined\nfor a QM system have definite values at all times.\n\nNoncontextuality (NC): If a QM system possesses a\nproperty (value of an observable), then it does so independently of any\nmeasurement context.\n\n\n\nVR and NC require further explanation. First, we need to\nexplain the content of VR. The statistical algorithm of QM tells us how\nto calculate a probability from a given state, a given observable and\nits possible value. Here we understand it as a mere mathematical device without\nany physical interpretation: Given a Hilbert space vector, an operator\nand its eigenvalues, the algorithm tells us how to calculate new\nnumbers (which have the properties of probabilities). In addition, by\n\u2018operationally defined\u2019 we here simply mean \u2018made up\nfrom a number which we know to denote a real property\u2019. So, VR, in\neffect, says that, if we have a real property\n \u0393\n (value\n \u0393\n of an observable\nG), and we are able to construct from\n \u0393\na\n new number\n \u03b1\n and find an operator\nA such that\n \u03b1\nis\n an eigenvalue of A, then (we have fulfilled\neverything necessary to apply the statistical algorithm; thus)\nA represents an observable A and its value\n \u03b1\n is a real property. \n\n\nSecond, a failure of NC could be understood in two\nways. Either the value of an observable might be context-dependent,\nalthough the observable itself is not; or the value of an observable\nmight be context-dependent, because the observable itself is. In\neither case, the independence from context of an observable implies\nthat there is a correspondence of observables and operators. This\nimplication of NC is what we will use presently in the derivation of\nFUNC.  We will indeed assume that, if NC holds, this means that the\nobservable \u2014 and thereby also its value \u2014 is\nindependent of the measurement context, i.e. is independent of how it\nis measured. In particular, the independence from context of an\nobservable implies that there is a 1:1 correspondence of observables\nand operators. This implication of NC is what we will use presently\nin the derivation of FUNC. Conversely, failure of NC will be\nconstrued solely as failure of the 1:1 correspondence.\n\n\nFrom VR, VD, NC and STAT FUNC, we can derive FUNC as follows.\nConsider an arbitrary state of a system and an arbitrary observable\nQ.  By VD, Q possesses a value\nv(Q)=a. Thus, we can form the number\nf(v(Q))=b for an arbitrary\nfunction f. For this number, by STAT FUNC,\nprob[f(v(Q))=b] =\nprob[v(f(Q))=b].  Hence, we have,\nby transforming probabilities according to STAT FUNC, created a new\nself-adjoint operator f(Q), and associated it\nwith the two real numbers b and\nprob[f(v(Q))=b]. Thus, by VR,\nthere is an observable corresponding to f(Q)\nwith value b, hence\nf(v(Q))=v(f(Q)). By\nNC, that observable is unique, hence FUNC follows.\n",
    "section_title": "4. The Functional Composition Principle",
    "entry_title": "The Kochen-Specker Theorem",
    "hierarchy_title": "The Kochen-Specker Theorem || The Functional Composition Principle",
    "tokenized_text": [
        "functional",
        "composition",
        "principle",
        "functional",
        "composition",
        "principle",
        "key",
        "ingredient",
        "k",
        "theorem",
        "constraint",
        "value",
        "assignment",
        "spelled",
        "sum",
        "rule",
        "product",
        "rule",
        "derived",
        "general",
        "principle",
        "called",
        "functional",
        "composition",
        "principle",
        "func",
        "principle",
        "trade",
        "mathematical",
        "fact",
        "selfadjoint",
        "operator",
        "operating",
        "hilbert",
        "space",
        "arbitrary",
        "function",
        "f",
        "rr",
        "r",
        "set",
        "real",
        "number",
        "define",
        "f",
        "show",
        "also",
        "selfadjoint",
        "operator",
        "hence",
        "write",
        "f",
        "assume",
        "every",
        "selfadjoint",
        "operator",
        "corresponds",
        "qm",
        "observable",
        "principle",
        "formulated",
        "thus",
        "func",
        "let",
        "selfadjoint",
        "operator",
        "associated",
        "observable",
        "let",
        "f",
        "r",
        "r",
        "arbitrary",
        "function",
        "f",
        "another",
        "selfadjoint",
        "operator",
        "let",
        "\u03c6",
        "arbitrary",
        "state",
        "f",
        "associated",
        "uniquely",
        "observable",
        "f",
        "v",
        "f",
        "\u03c6",
        "f",
        "v",
        "\u03c6",
        "introduce",
        "state",
        "superscript",
        "allow",
        "possible",
        "dependence",
        "value",
        "particular",
        "quantum",
        "state",
        "system",
        "prepared",
        "sum",
        "rule",
        "product",
        "rule",
        "straightforward",
        "consequence",
        "func",
        "proof",
        "func",
        "derivable",
        "formalism",
        "qm",
        "statistical",
        "version",
        "called",
        "stat",
        "func",
        "proof",
        "stat",
        "func",
        "given",
        "f",
        "\u03c6",
        "defined",
        "func",
        "arbitrary",
        "real",
        "number",
        "b",
        "prob",
        "v",
        "f",
        "\u03c6",
        "b",
        "prob",
        "f",
        "v",
        "\u03c6",
        "b",
        "stat",
        "func",
        "derived",
        "qm",
        "formalism",
        "also",
        "follows",
        "func",
        "proof",
        "seen",
        "providing",
        "plausibility",
        "argument",
        "func",
        "redhead",
        "stat",
        "func",
        "true",
        "matter",
        "mathematics",
        "qm",
        "func",
        "true",
        "could",
        "derive",
        "stat",
        "func",
        "thus",
        "understand",
        "part",
        "mathematics",
        "qm",
        "consequence",
        "func",
        "derive",
        "func",
        "stat",
        "func",
        "direct",
        "consequence",
        "stat",
        "func",
        "three",
        "assumption",
        "two",
        "familiar",
        "introduction",
        "value",
        "realism",
        "vr",
        "operationally",
        "defined",
        "real",
        "number",
        "\u03b1",
        "associated",
        "selfadjoint",
        "operator",
        "given",
        "state",
        "statistical",
        "algorithm",
        "qm",
        "yield",
        "real",
        "number",
        "\u03b2",
        "\u03b2",
        "prob",
        "v",
        "\u03b1",
        "exists",
        "observable",
        "value",
        "\u03b1",
        "value",
        "definiteness",
        "vd",
        "observables",
        "defined",
        "qm",
        "system",
        "definite",
        "value",
        "time",
        "noncontextuality",
        "nc",
        "qm",
        "system",
        "posse",
        "property",
        "value",
        "observable",
        "independently",
        "measurement",
        "context",
        "vr",
        "nc",
        "require",
        "explanation",
        "first",
        "need",
        "explain",
        "content",
        "vr",
        "statistical",
        "algorithm",
        "qm",
        "tell",
        "u",
        "calculate",
        "probability",
        "given",
        "state",
        "given",
        "observable",
        "possible",
        "value",
        "understand",
        "mere",
        "mathematical",
        "device",
        "without",
        "physical",
        "interpretation",
        "given",
        "hilbert",
        "space",
        "vector",
        "operator",
        "eigenvalue",
        "algorithm",
        "tell",
        "u",
        "calculate",
        "new",
        "number",
        "property",
        "probability",
        "addition",
        "operationally",
        "defined",
        "simply",
        "mean",
        "made",
        "number",
        "know",
        "denote",
        "real",
        "property",
        "vr",
        "effect",
        "say",
        "real",
        "property",
        "\u03b3",
        "value",
        "\u03b3",
        "observable",
        "g",
        "able",
        "construct",
        "\u03b3",
        "new",
        "number",
        "\u03b1",
        "find",
        "operator",
        "\u03b1",
        "eigenvalue",
        "fulfilled",
        "everything",
        "necessary",
        "apply",
        "statistical",
        "algorithm",
        "thus",
        "represents",
        "observable",
        "value",
        "\u03b1",
        "real",
        "property",
        "second",
        "failure",
        "nc",
        "could",
        "understood",
        "two",
        "way",
        "either",
        "value",
        "observable",
        "might",
        "contextdependent",
        "although",
        "observable",
        "value",
        "observable",
        "might",
        "contextdependent",
        "observable",
        "either",
        "case",
        "independence",
        "context",
        "observable",
        "implies",
        "correspondence",
        "observables",
        "operator",
        "implication",
        "nc",
        "use",
        "presently",
        "derivation",
        "func",
        "indeed",
        "assume",
        "nc",
        "hold",
        "mean",
        "observable",
        "thereby",
        "also",
        "value",
        "independent",
        "measurement",
        "context",
        "ie",
        "independent",
        "measured",
        "particular",
        "independence",
        "context",
        "observable",
        "implies",
        "correspondence",
        "observables",
        "operator",
        "implication",
        "nc",
        "use",
        "presently",
        "derivation",
        "func",
        "conversely",
        "failure",
        "nc",
        "construed",
        "solely",
        "failure",
        "correspondence",
        "vr",
        "vd",
        "nc",
        "stat",
        "func",
        "derive",
        "func",
        "follows",
        "consider",
        "arbitrary",
        "state",
        "system",
        "arbitrary",
        "observable",
        "q",
        "vd",
        "q",
        "posse",
        "value",
        "v",
        "q",
        "a",
        "thus",
        "form",
        "number",
        "f",
        "v",
        "q",
        "b",
        "arbitrary",
        "function",
        "f",
        "number",
        "stat",
        "func",
        "prob",
        "f",
        "v",
        "q",
        "b",
        "prob",
        "v",
        "f",
        "q",
        "b",
        "hence",
        "transforming",
        "probability",
        "according",
        "stat",
        "func",
        "created",
        "new",
        "selfadjoint",
        "operator",
        "f",
        "q",
        "associated",
        "two",
        "real",
        "number",
        "b",
        "prob",
        "f",
        "v",
        "q",
        "b",
        "thus",
        "vr",
        "observable",
        "corresponding",
        "f",
        "q",
        "value",
        "b",
        "hence",
        "f",
        "v",
        "q",
        "v",
        "f",
        "q",
        "nc",
        "observable",
        "unique",
        "hence",
        "func",
        "follows"
    ]
}