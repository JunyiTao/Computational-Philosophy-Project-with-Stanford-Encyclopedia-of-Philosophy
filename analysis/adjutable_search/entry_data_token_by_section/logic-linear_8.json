{
    "main_text": "Computer science impact || Proof normalization\n5.1 Proof normalization\n\nThe proof normalization approach views the state of a\ncomputation as a proof term and the process of computing as\nnormalization (known alternatively as \\(\\beta\\)-reduction or\ncut-elimination). Functional programming can be explained using\nproof-normalization as its theoretical basis\n (Martin-L\u00f6f 1982)\n and has been used to justify the design of new functional programming\nlanguages, e.g.,\n Abramsky 1993.\n Linear logic provides this approach to computational specification\nwith new types, new declarative means for statically understanding how\nresources may be used in a computation, and provided an appealing\nmeans for formalizing the duality between a function and the\nenvironment that supplies it with arguments.\n\nAnother area where linear logic has been a powerful theoretical\ninstrument is that of optimal reduction. The problem of\nbuilding efficient (optimal) interpreters for the\n\\(\\lambda\\)-calculus, that stayed open for quite a long time after its\noriginal definition by J.J. L\u00e9vy, was solved for the first time\nin\n Lamping 1990,\n via a sophisticated sharing graph implementation involving a quite\nimpressive amount of rules. Using ideas and intuition from linear\nlogic, many authors reconstructed Lamping\u2019s solution,\nsimplifying it and leading to a rich theory connected to that of the\nGeometry of Interaction. For further reading, a good reference is\n Asperti & Guerrini 1998.\n \n\nThe refinement of intuitionistic logic provided by linear logic and\nthe dualities of linear logic provided a setting in which one could\nview a function and its environment as similar entities that interact\ndually. For example, a function with the type \\(A \\limp B\\) can be\nmodeled as a process that consumes a value of type \\(A\\) from its\nenvironment and transforms it into a value of type \\(B\\). In linear\nlogic, this implication is equivalent to its contrapositive form: the\ntype \\(B^{\\bot} \\limp A^{\\bot}\\) can lead to interpreting the same\nfunction as a process that transforms a demand for a value of type\n\\(B\\) into a demand for a value of type \\(A\\) (notice that this does\nnot happen with functions of intuitionistic type since, for example,\ninput argument may be vacuous)\n (Curien 2003).\n The recent successes of using game semantics to model functional\ncomputation are similarly related to the dual treatment of function\nand environment\n (Abramsky and Jagadeesan 1994,\n Hyland & Ong 2000).\n\nFinally, we mention that in the area of encoding computation as proof\nnormalization, linear logic has been used to provide a type-based\ndescription of polytime recursive functions. For example, M. Hofmann\n (2003)\n introduced a \\(\\lambda\\)-calculus with modal and linear types that\nextended the function algebra of\n Bellantoni & Cook 1992\n to higher types. Types based on linear logic have also been used\nwithin functional programs: see\n Guzman & Hudak 1990\n and\n Wadler 1991.\n",
    "section_title": "5.1 Proof normalization",
    "entry_title": "Linear Logic",
    "hierarchy_title": "Linear Logic || Computer science impact || Proof normalization",
    "tokenized_text": [
        "computer",
        "science",
        "impact",
        "proof",
        "normalization",
        "proof",
        "normalization",
        "proof",
        "normalization",
        "approach",
        "view",
        "state",
        "computation",
        "proof",
        "term",
        "process",
        "computing",
        "normalization",
        "known",
        "alternatively",
        "beta",
        "reduction",
        "cutelimination",
        "functional",
        "programming",
        "explained",
        "using",
        "proofnormalization",
        "theoretical",
        "basis",
        "martinl\u00f6f",
        "used",
        "justify",
        "design",
        "new",
        "functional",
        "programming",
        "language",
        "eg",
        "abramsky",
        "linear",
        "logic",
        "provides",
        "approach",
        "computational",
        "specification",
        "new",
        "type",
        "new",
        "declarative",
        "mean",
        "statically",
        "understanding",
        "resource",
        "may",
        "used",
        "computation",
        "provided",
        "appealing",
        "mean",
        "formalizing",
        "duality",
        "function",
        "environment",
        "supply",
        "argument",
        "another",
        "area",
        "linear",
        "logic",
        "powerful",
        "theoretical",
        "instrument",
        "optimal",
        "reduction",
        "problem",
        "building",
        "efficient",
        "optimal",
        "interpreter",
        "lambda",
        "calculus",
        "stayed",
        "open",
        "quite",
        "long",
        "time",
        "original",
        "definition",
        "jj",
        "l\u00e9vy",
        "solved",
        "first",
        "time",
        "lamping",
        "via",
        "sophisticated",
        "sharing",
        "graph",
        "implementation",
        "involving",
        "quite",
        "impressive",
        "amount",
        "rule",
        "using",
        "idea",
        "intuition",
        "linear",
        "logic",
        "many",
        "author",
        "reconstructed",
        "lamping",
        "solution",
        "simplifying",
        "leading",
        "rich",
        "theory",
        "connected",
        "geometry",
        "interaction",
        "reading",
        "good",
        "reference",
        "asperti",
        "guerrini",
        "refinement",
        "intuitionistic",
        "logic",
        "provided",
        "linear",
        "logic",
        "duality",
        "linear",
        "logic",
        "provided",
        "setting",
        "one",
        "could",
        "view",
        "function",
        "environment",
        "similar",
        "entity",
        "interact",
        "dually",
        "example",
        "function",
        "type",
        "limp",
        "b",
        "modeled",
        "process",
        "consumes",
        "value",
        "type",
        "a",
        "environment",
        "transforms",
        "value",
        "type",
        "b",
        "linear",
        "logic",
        "implication",
        "equivalent",
        "contrapositive",
        "form",
        "type",
        "b",
        "bot",
        "limp",
        "a",
        "bot",
        "lead",
        "interpreting",
        "function",
        "process",
        "transforms",
        "demand",
        "value",
        "type",
        "b",
        "demand",
        "value",
        "type",
        "a",
        "notice",
        "happen",
        "function",
        "intuitionistic",
        "type",
        "since",
        "example",
        "input",
        "argument",
        "may",
        "vacuous",
        "curien",
        "recent",
        "success",
        "using",
        "game",
        "semantics",
        "model",
        "functional",
        "computation",
        "similarly",
        "related",
        "dual",
        "treatment",
        "function",
        "environment",
        "abramsky",
        "jagadeesan",
        "hyland",
        "ong",
        "finally",
        "mention",
        "area",
        "encoding",
        "computation",
        "proof",
        "normalization",
        "linear",
        "logic",
        "used",
        "provide",
        "typebased",
        "description",
        "polytime",
        "recursive",
        "function",
        "example",
        "m",
        "hofmann",
        "introduced",
        "lambda",
        "calculus",
        "modal",
        "linear",
        "type",
        "extended",
        "function",
        "algebra",
        "bellantoni",
        "cook",
        "higher",
        "type",
        "type",
        "based",
        "linear",
        "logic",
        "also",
        "used",
        "within",
        "functional",
        "program",
        "see",
        "guzman",
        "hudak",
        "wadler"
    ]
}