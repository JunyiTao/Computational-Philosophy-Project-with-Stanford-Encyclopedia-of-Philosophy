{
    "main_text": "Algorithms || Classical Approaches\n3.1 Classical Approaches\n\nMarkov (1954) provides a first precise definition of algorithm as a\ncomputational process that is determined,\napplicable, and effective. A computational process\nis determined if the instructions involved are precise enough\nnot to allow for any \u201carbitrary choice\u201d in their\nexecution. The (human or artificial) computer must\u00a0never be\nunsure about what step to carry out next. Algorithms are\napplicable for Markov in that they hold for classes of inputs\n(natural numbers for basic arithmetic operations) rather than for\nsingle inputs (specific natural numbers). Markov (1954:1) defines\neffectiveness as \u201cthe tendency of the algorithm to\nobtain a certain result\u201d. In other words, an algorithm is\neffective in that it will eventually produce the answer to the\ncomputational problem.\n\nKleene (1967) specifies finiteness as a further important\nproperty: an algorithm is a procedure which can be described by means\nof a finite set of instructions and needs a finite number of steps to\nprovide an answer to the computational problem. As a counterexample,\nconsider a while loop defined by a finite number of steps,\nbut which runs forever since the condition in the loop is always\nsatisfied. Instructions should also be amenable to mechanical\nexecution, that is, no insight is required for the machine to follow\nthem. Following Markov\u2019s determinability and strengthening\neffectiveness, Kleene (1967) additionally specifies that instructions\nshould be able to recognize that the solution to the computational\nproblem has been achieved, and halt the computation.\n\nKnuth (1973) recalls and deepens the analyses of Markov (1954) and\nKleene (1967) by stating that:\n\n\nBesides merely being a finite set of rules that gives a sequence of\noperations for solving a specific type of problem, an algorithm has\nfive important features:\n\nFiniteness. An algorithm must always terminate after a\nfinite number of steps. [\u2026]\nDefiniteness. Each step of an algorithm must be precisely\ndefined; the actions to be carried out must be rigorously and\nunambiguously specified for each case. [\u2026]\nInput. An algorithm has zero or more inputs.\n[\u2026]\nOutput. An algorithm has zero or more outputs.\n[\u2026]\nEffectiveness. An algorithm is also generally expected to\nbe effective, in the sense that its operations must all be\nsufficiently basic that they can in principle be done exactly and in a\nfinite length of time by someone using pencil and paper. (Knuth 1973:\n4\u20136) [\u2026]\n\n\n\nAs in Kleene (1967), finiteness affects both the number of\ninstructions and the number of implemented computational steps. As in\nMarkov\u2019s determinacy, Knuth\u2019s definiteness principle\nrequires that each successive computational step be unambiguously\nspecified. Furthermore, Knuth (1973) more explicitly requires that\nalgorithms have (potentially empty sets of) inputs and outputs. By\nalgorithms with no inputs or outputs Knuth probably refers to\nalgorithms using internally stored data as inputs or algorithms not\nreturning data to an external user (Rapaport 2019, ch. 7, in Other\nInternet Resources). As for effectiveness, besides Markov\u2019s\ntendency \u201cto obtain a certain result\u201d, Knuth requires that\nthe result be obtained in a finite amount of time and that the\ninstructions be atomic, that is, simple enough to be understandable\nand executable by a human or artificial computer.\n",
    "section_title": "3.1 Classical Approaches",
    "entry_title": "The Philosophy of Computer Science",
    "hierarchy_title": "The Philosophy of Computer Science || Algorithms || Classical Approaches",
    "tokenized_text": [
        "algorithm",
        "classical",
        "approach",
        "classical",
        "approach",
        "markov",
        "provides",
        "first",
        "precise",
        "definition",
        "algorithm",
        "computational",
        "process",
        "determined",
        "applicable",
        "effective",
        "computational",
        "process",
        "determined",
        "instruction",
        "involved",
        "precise",
        "enough",
        "allow",
        "arbitrary",
        "choice",
        "execution",
        "human",
        "artificial",
        "computer",
        "must",
        "never",
        "unsure",
        "step",
        "carry",
        "next",
        "algorithm",
        "applicable",
        "markov",
        "hold",
        "class",
        "input",
        "natural",
        "number",
        "basic",
        "arithmetic",
        "operation",
        "rather",
        "single",
        "input",
        "specific",
        "natural",
        "number",
        "markov",
        "defines",
        "effectiveness",
        "tendency",
        "algorithm",
        "obtain",
        "certain",
        "result",
        "word",
        "algorithm",
        "effective",
        "eventually",
        "produce",
        "answer",
        "computational",
        "problem",
        "kleene",
        "specifies",
        "finiteness",
        "important",
        "property",
        "algorithm",
        "procedure",
        "described",
        "mean",
        "finite",
        "set",
        "instruction",
        "need",
        "finite",
        "number",
        "step",
        "provide",
        "answer",
        "computational",
        "problem",
        "counterexample",
        "consider",
        "loop",
        "defined",
        "finite",
        "number",
        "step",
        "run",
        "forever",
        "since",
        "condition",
        "loop",
        "always",
        "satisfied",
        "instruction",
        "also",
        "amenable",
        "mechanical",
        "execution",
        "insight",
        "required",
        "machine",
        "follow",
        "following",
        "markov",
        "determinability",
        "strengthening",
        "effectiveness",
        "kleene",
        "additionally",
        "specifies",
        "instruction",
        "able",
        "recognize",
        "solution",
        "computational",
        "problem",
        "achieved",
        "halt",
        "computation",
        "knuth",
        "recall",
        "deepens",
        "analysis",
        "markov",
        "kleene",
        "stating",
        "besides",
        "merely",
        "finite",
        "set",
        "rule",
        "give",
        "sequence",
        "operation",
        "solving",
        "specific",
        "type",
        "problem",
        "algorithm",
        "five",
        "important",
        "feature",
        "finiteness",
        "algorithm",
        "must",
        "always",
        "terminate",
        "finite",
        "number",
        "step",
        "definiteness",
        "step",
        "algorithm",
        "must",
        "precisely",
        "defined",
        "action",
        "carried",
        "must",
        "rigorously",
        "unambiguously",
        "specified",
        "case",
        "input",
        "algorithm",
        "zero",
        "input",
        "output",
        "algorithm",
        "zero",
        "output",
        "effectiveness",
        "algorithm",
        "also",
        "generally",
        "expected",
        "effective",
        "sense",
        "operation",
        "must",
        "sufficiently",
        "basic",
        "principle",
        "done",
        "exactly",
        "finite",
        "length",
        "time",
        "someone",
        "using",
        "pencil",
        "paper",
        "knuth",
        "kleene",
        "finiteness",
        "affect",
        "number",
        "instruction",
        "number",
        "implemented",
        "computational",
        "step",
        "markov",
        "determinacy",
        "knuth",
        "definiteness",
        "principle",
        "requires",
        "successive",
        "computational",
        "step",
        "unambiguously",
        "specified",
        "furthermore",
        "knuth",
        "explicitly",
        "requires",
        "algorithm",
        "potentially",
        "empty",
        "set",
        "input",
        "output",
        "algorithm",
        "input",
        "output",
        "knuth",
        "probably",
        "refers",
        "algorithm",
        "using",
        "internally",
        "stored",
        "data",
        "input",
        "algorithm",
        "returning",
        "data",
        "external",
        "user",
        "rapaport",
        "ch",
        "internet",
        "resource",
        "effectiveness",
        "besides",
        "markov",
        "tendency",
        "obtain",
        "certain",
        "result",
        "knuth",
        "requires",
        "result",
        "obtained",
        "finite",
        "amount",
        "time",
        "instruction",
        "atomic",
        "simple",
        "enough",
        "understandable",
        "executable",
        "human",
        "artificial",
        "computer"
    ]
}