{
    "main_text": "Computer science impact || Proof search\n5.2 Proof search\n\nThe proof search approach views the state of a computation as\na sequent (a structured collection of formulas) and the process of\ncomputing as the process of searching for a proof of a sequent: the\nchanges that take place in sequents capture the dynamics of\ncomputation. With this view of computation, we generally read\ninference rules bottom up, i.e., as a transformation of their\nconclusion into their premise(s). Logic programming can be explained\nusing proof search as its theoretical basis, and linear logic provides\nthis approach to computational specification with new combinators for\nbuilding logic programs, new means to capture rich dynamics, and new\ndeclarative approaches to specifying concurrent computations. (See\n Miller 2004\n for an overview of linear logic programming languages.)\n\nThe completeness of focusing proof system can be used to provide a\ndeclarative explanation of part of the operational semantics of logic\nprogramming within linear logic. Consider, for example, the subset\n\\(L\\) of formulas of linear logic that are built from only the\nconnectives \\(\\top\\), &, \\(\\limp , \\Rightarrow\\), and \\(\\forall\\).\n(Notice that if one adds \\(\\bot\\) to this list, it is possible to\nencode all connectives of linear logic.) It is possible to see that\ncut-free proof search in \\(L\\) can be defined into to phases. Given a\nsequent \\(\\Gamma\\); \\(\\Delta \\vdash G\\), where \\(\\Gamma\\) is a\nset of formulas (which can be contracted and weakened), \\(\\Delta\\) is\nmultiset of formulas (which cannot be contracted nor weakened), and\n\\(G\\) (the \u201cgoal\u201d formula) is a single formula (all from\n\\(L)\\), then proof search proceeds as follows.\n\nIf \\(G\\) is non-atomic, then only a right introduction rule can be\nused to conclude this sequent. Given this set of connectives, the\nright rules are invertible and this goal-reduction phase\ncorresponds exactly to the asynchronous phase of focused proofs.\nIf \\(G\\) is atomic, then proof search proceeds by\ndeciding on a single formula from a left-hand context.\nOnce a formula is chosen for the focus, all\nleft-introduction rules are applied to only that formula and any\npositive subformulas that arise. This backchaining phase\ncorresponds to the asynchronous phase of focused proof\nconstruction.\n\n\nFormally, these various phases can be described using the following\ninference rules. Here, a new sequent arrow is introduced: this arrow\nis labeled with the formula that is the result of a left-introduction\nrule. Notice that the rule for left-introduction of \\(\\limp\\) requires\nsplitting the \\(\\Delta\\) context into two parts \\(\\Delta_1,\\Delta_2\\)\n(when reading the rule bottom up). There are, of course, \\(2^n\\) such\nsplittings if that context has \\(n \\ge 0\\) distinct formulas. The\nsyntactic variable \\(A\\) in these inference rules ranges over atomic\nformulas.\n\nGoal Reduction Phase \n\\[\n\\frac{}  \n     {\\Gamma;\\Delta \\vdash \\top}\\ \\top R\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\vdash B \\qquad \\Gamma;\\Delta \\vdash C}\n     {\\Gamma;\\Delta \\vdash B \\amp C}\\ {\\amp}R\n\\]\n \n\\[\\frac{\\Gamma;\\Delta, B \\vdash C}\n       {\\Gamma;\\Delta \\vdash B \\limp C}\\ \\limp R\n  \\qquad\n\n\\frac{\\Gamma,B ;\\Delta \\vdash C}\n     {\\Gamma;\\Delta \\vdash B \\Rightarrow C}\\ {\\Rightarrow}R\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\vdash B[y/x]}\n     {\\Gamma;\\Delta \\vdash \\forall x. B}\\ \\forall R\n\\]\n\n\n\nBackchaining Phase \n\\[\n\\frac{\\Gamma;\\Delta \\lvdash{D_1} A}\n     {\\Gamma;\\Delta \\lvdash{D_1\\amp D_2}\\, A} \\ {\\amp}L\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D_2} A}\n     {\\Gamma;\\Delta \\lvdash{D_1\\amp D_2} A}\\ {\\amp}L\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D[t/x]} A}\n     {\\Gamma;\\Delta \\lvdash{\\forall_{\\tau}x.D} A}\\ \\forall L\n\\]\n \n\\[\\frac{\\Gamma;\\Delta_1 \\vdash G \\quad \\Gamma;\\Delta_2 \\lvdash{D} A}\n       {\\Gamma;\\Delta_1,\\Delta_2 \\lvdash{G\\limp D} A} \\ {\\limp}L\n  \\qquad\n\n\\frac{\\Gamma;\\cdot \\vdash G \\quad \\Gamma;\\Delta \\lvdash{D} A}\n     {\\Gamma;\\Delta \\lvdash{G\\Rightarrow D} A}\\ {\\Rightarrow}L\n\\]\n\n\n\nIdentity and Decide Rules \n\\[\n\\frac{\\Gamma,D;\\Delta \\lvdash{D} A}\n     {\\Gamma,D;\\Delta \\vdash A}\\ \\textit{decide}{!}\n  \\qquad\n\n\\frac{\\Gamma;\\Delta \\lvdash{D} A}\n     {\\Gamma;\\Delta,D \\vdash A}\\ \\textit{decide}\n  \\qquad\n\n\\frac{}\n     {\\Gamma;\\cdot \\lvdash{A} A}\\ \\textit{init}\n\\]\n\n\n\nLinear logic restricted to \\(L\\) can be viewed as a linear logic\nprogramming language. As a consequence, it can serve as a\nspecification language for computational systems, a role that is also\noccupied by, say, Petri nets, process calculi, \\(\\lambda\\)-calculus,\netc. Given that linear logic has a proof theory and various kinds of\nsemantics, broad avenues of reasoning about computations specified in\n\\(L\\) are provided by the meta-theory of linear logic.\n\nGiven that the sequent calculus for linear logic uses multisets of\nformulas, proof search can directly encode multiset\nrewriting. Since many computations can naturally be seen as\nmultiset rewriting, it has been possible to make numerous connections\nbetween linear logic and Petri nets\n (Gunter & Gehlot 1989),\n process calculi\n (Andreoli & Pareschi 1991,\n Kobayashi et al. 1999,\n Miller 1996),\n and security protocols\n (Cervesato et al. 1999,\n Miller 2003).\n",
    "section_title": "5.2 Proof search",
    "entry_title": "Linear Logic",
    "hierarchy_title": "Linear Logic || Computer science impact || Proof search",
    "tokenized_text": [
        "computer",
        "science",
        "impact",
        "proof",
        "search",
        "proof",
        "search",
        "proof",
        "search",
        "approach",
        "view",
        "state",
        "computation",
        "sequent",
        "structured",
        "collection",
        "formula",
        "process",
        "computing",
        "process",
        "searching",
        "proof",
        "sequent",
        "change",
        "take",
        "place",
        "sequents",
        "capture",
        "dynamic",
        "computation",
        "view",
        "computation",
        "generally",
        "read",
        "inference",
        "rule",
        "bottom",
        "ie",
        "transformation",
        "conclusion",
        "premise",
        "logic",
        "programming",
        "explained",
        "using",
        "proof",
        "search",
        "theoretical",
        "basis",
        "linear",
        "logic",
        "provides",
        "approach",
        "computational",
        "specification",
        "new",
        "combinators",
        "building",
        "logic",
        "program",
        "new",
        "mean",
        "capture",
        "rich",
        "dynamic",
        "new",
        "declarative",
        "approach",
        "specifying",
        "concurrent",
        "computation",
        "see",
        "miller",
        "overview",
        "linear",
        "logic",
        "programming",
        "language",
        "completeness",
        "focusing",
        "proof",
        "system",
        "used",
        "provide",
        "declarative",
        "explanation",
        "part",
        "operational",
        "semantics",
        "logic",
        "programming",
        "within",
        "linear",
        "logic",
        "consider",
        "example",
        "subset",
        "l",
        "formula",
        "linear",
        "logic",
        "built",
        "connective",
        "top",
        "limp",
        "rightarrow",
        "forall",
        "notice",
        "one",
        "add",
        "bot",
        "list",
        "possible",
        "encode",
        "connective",
        "linear",
        "logic",
        "possible",
        "see",
        "cutfree",
        "proof",
        "search",
        "l",
        "defined",
        "phase",
        "given",
        "sequent",
        "gamma",
        "delta",
        "vdash",
        "g",
        "gamma",
        "set",
        "formula",
        "contracted",
        "weakened",
        "delta",
        "multiset",
        "formula",
        "contracted",
        "weakened",
        "g",
        "goal",
        "formula",
        "single",
        "formula",
        "l",
        "proof",
        "search",
        "proceeds",
        "follows",
        "g",
        "nonatomic",
        "right",
        "introduction",
        "rule",
        "used",
        "conclude",
        "sequent",
        "given",
        "set",
        "connective",
        "right",
        "rule",
        "invertible",
        "goalreduction",
        "phase",
        "corresponds",
        "exactly",
        "asynchronous",
        "phase",
        "focused",
        "proof",
        "g",
        "atomic",
        "proof",
        "search",
        "proceeds",
        "deciding",
        "single",
        "formula",
        "lefthand",
        "context",
        "formula",
        "chosen",
        "focus",
        "leftintroduction",
        "rule",
        "applied",
        "formula",
        "positive",
        "subformulas",
        "arise",
        "backchaining",
        "phase",
        "corresponds",
        "asynchronous",
        "phase",
        "focused",
        "proof",
        "construction",
        "formally",
        "various",
        "phase",
        "described",
        "using",
        "following",
        "inference",
        "rule",
        "new",
        "sequent",
        "arrow",
        "introduced",
        "arrow",
        "labeled",
        "formula",
        "result",
        "leftintroduction",
        "rule",
        "notice",
        "rule",
        "leftintroduction",
        "limp",
        "requires",
        "splitting",
        "delta",
        "context",
        "two",
        "part",
        "delta_",
        "delta_",
        "reading",
        "rule",
        "bottom",
        "course",
        "n",
        "splittings",
        "context",
        "n",
        "ge",
        "distinct",
        "formula",
        "syntactic",
        "variable",
        "a",
        "inference",
        "rule",
        "range",
        "atomic",
        "formula",
        "goal",
        "reduction",
        "phase",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "top",
        "top",
        "r",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "b",
        "qquad",
        "gamma",
        "delta",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "amp",
        "c",
        "amp",
        "r",
        "frac",
        "gamma",
        "delta",
        "b",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "limp",
        "c",
        "limp",
        "r",
        "qquad",
        "frac",
        "gamma",
        "b",
        "delta",
        "vdash",
        "c",
        "gamma",
        "delta",
        "vdash",
        "b",
        "rightarrow",
        "c",
        "rightarrow",
        "r",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "vdash",
        "b",
        "yx",
        "gamma",
        "delta",
        "vdash",
        "forall",
        "x",
        "b",
        "forall",
        "r",
        "backchaining",
        "phase",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "d_",
        "gamma",
        "delta",
        "lvdash",
        "d_amp",
        "d_",
        "amp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "d_",
        "gamma",
        "delta",
        "lvdash",
        "d_amp",
        "d_",
        "amp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "tx",
        "gamma",
        "delta",
        "lvdash",
        "forall_",
        "tau",
        "xd",
        "forall",
        "l",
        "frac",
        "gamma",
        "delta_",
        "vdash",
        "g",
        "quad",
        "gamma",
        "delta_",
        "lvdash",
        "gamma",
        "delta_",
        "delta_",
        "lvdash",
        "glimp",
        "limp",
        "l",
        "qquad",
        "frac",
        "gamma",
        "cdot",
        "vdash",
        "g",
        "quad",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "lvdash",
        "grightarrow",
        "rightarrow",
        "l",
        "identity",
        "decide",
        "rule",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "vdash",
        "textit",
        "decide",
        "qquad",
        "frac",
        "gamma",
        "delta",
        "lvdash",
        "gamma",
        "delta",
        "vdash",
        "textit",
        "decide",
        "qquad",
        "frac",
        "gamma",
        "cdot",
        "lvdash",
        "textit",
        "init",
        "linear",
        "logic",
        "restricted",
        "l",
        "viewed",
        "linear",
        "logic",
        "programming",
        "language",
        "consequence",
        "serve",
        "specification",
        "language",
        "computational",
        "system",
        "role",
        "also",
        "occupied",
        "say",
        "petri",
        "net",
        "process",
        "calculus",
        "lambda",
        "calculus",
        "etc",
        "given",
        "linear",
        "logic",
        "proof",
        "theory",
        "various",
        "kind",
        "semantics",
        "broad",
        "avenue",
        "reasoning",
        "computation",
        "specified",
        "l",
        "provided",
        "metatheory",
        "linear",
        "logic",
        "given",
        "sequent",
        "calculus",
        "linear",
        "logic",
        "us",
        "multisets",
        "formula",
        "proof",
        "search",
        "directly",
        "encode",
        "multiset",
        "rewriting",
        "since",
        "many",
        "computation",
        "naturally",
        "seen",
        "multiset",
        "rewriting",
        "possible",
        "make",
        "numerous",
        "connection",
        "linear",
        "logic",
        "petri",
        "net",
        "gunter",
        "gehlot",
        "process",
        "calculus",
        "andreoli",
        "pareschi",
        "kobayashi",
        "et",
        "al",
        "miller",
        "security",
        "protocol",
        "cervesato",
        "et",
        "al",
        "miller"
    ]
}