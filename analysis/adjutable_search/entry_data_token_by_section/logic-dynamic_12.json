{
    "main_text": "Some variants || PDL with repeating and looping\n4.3 PDL with repeating and looping\n\nWe have already exposed the power of repeating in\n section 3.3\n by introducing RPDL. Here, we summarize more results about RPDL and\nits connection with other variations on the notion of repeating\nprograms.\n\nConcerning the complexity theory of RPDL, Streett [1982] had already\nestablished that RPDL had the finite model property; precisely that\nevery RPDL satisfiable formula A is satisfiable in a model of\nsize at most triply exponential in the length of A. An\nautomata-theoretic argument permitted to conclude that the problem\n(RPDL-SAT) can be solved in deterministic triple exponential time\n(3-EXPTIME). The gap between this upper bound for deciding (RPDL-SAT)\nand the simple exponential-time lower bound for deciding (PDL-SAT) was\nthus open. The problem found itself greatly connected to the growing\ninterest of computer scientists in establishing the complexity of\ntemporal logics, and more specifically of the (propositional) modal\n\\(\\mu\\)-calculus (MMC) due to Kozen [1983], because RPDL has a linear\nblow-up translation to MMC. In Vardi and Stockmeyer [1985], an upper\nbound in non-deterministic exponential time was shown. In Emerson and\nJutla [1988] and in its final form in Emerson and Jutla [1999], it was\nshown that (MMC-SAT) and (RPDL-SAT) are EXPTIME-complete. If we add\nthe converse operator of\n section 4.2\n one obtains CRPDL. The complexity of (CRPDL-SAT) remained open for a\nfew years but it can be shown to be EXPTIME-complete, too. This is\nachieved by combining the techniques of Emerson and Jutla [1988] and\nVardi [1985], as in Vardi [1998].\n\nIn\n section 3.3\n we have defined a predicate \\(\\infty\\), where \\(\\infty(\\alpha)\\)\nmeans that the program \\(\\alpha\\) can have a non-terminating\ncomputation. We call LPDL the logic obtained by augmenting PDL with\nthe predicate \\(\\infty\\). Clearly, RPDL is at least as expressive as\nLPDL; The inductive definition of \\(\\infty(\\alpha)\\) in the language\nof RPDL is the witness of it. RPDL is in fact strictly more expressive\nthan LPDL. This was shown in Harel and Sherman [1982]. As it can be\nsuspected, both RPDL and LPDL have more expressive power than PDL. It\nis established by proving that some formulas of RPDL and of LPDL have\nno equivalent expression in PDL. The proof involves the technique of\nfiltration which is designed to collapse an LTS to a finite\nmodel while leaving invariant the truth or falsity of certain\nformulas. For some set of PDL formulas \\(X\\), it consists in grouping\ninto equivalence classes the states of an LTS that satisfy exactly the\nsame formulas in \\(X\\). The set of equivalence classes of states thus\nobtained becomes the set of states of the filtrate model, and a\ntransition is built appropriately over them.\n\nWith a carefully chosen set \\(FL(A)\\) that depends on a PDL formula\n\\(A\\) (the so-called Fischer-Ladner closure of the set of sub-formulas\nof \\(A\\)), a filtration of an LTS \\(M\\) yields a finite filtrate model\n\\(M'\\), such that \\(A\\) is satisfiable at a world \\(u\\) in \\(M\\) if\nand only if it is satisfiable in the equivalence class containing\n\\(u\\) in the filtrate. (See Fischer and Ladner [1979].)\n\nWe can now consider the filtration of the LTS \\(M=(W,R,V)\\) such\nthat\n\n\\(W = \\{(i,j) : j \\text{ and } i \\text{ integers}, 1 \\leq j \\leq\ni\\} \\cup \\{ u \\}\\)\n\\((i,j)R(\\pi )(i,j-1)\\) when \\(1 \\leq j \\leq i\\)\n\\(uR(\\pi )(i,i)\\) for every \\(i\\)\n\\(V(p) = \\emptyset\\) for every \\(p \\in \\Phi_0\\)\n\n\nIn one sentence, what goes on in \\(M\\) is that from the world \\(u\\),\nthere is an infinite number of finite \\(\\pi\\)-paths of growing length.\nWe have both \\(M, u\\) sat \\(\\lnot\\Delta\\pi\\) and \\(M, u\\) sat\n\\(\\lnot\\infty(\\pi^*)\\). Yet, for every PDL formula \\(A\\), we will have\nboth \\(\\Delta\\pi\\) and \\(\\infty(\\pi^*)\\) that are satisfied at the\nequivalence class of \\(u\\) in the model obtained by filtration of\n\\(M\\) with \\(FL(A)\\). Indeed, the filtration must collapse some states\nof \\(M\\) and create some loops. Thus, there exists no PDL formula that\ncan express \\(\\Delta\\pi\\) and there exists no PDL formula that can\nexpress \\(\\infty(\\pi^*)\\).\n\nThere are other ways of making possible the assertion that a program\ncan execute forever. For instance, Danecki [1984a] proposed a\npredicate \\(\\mathsf{sloop}\\) to qualify programs that can enter in\nstrong loops, that is:\n\n\\(V(\\mathsf{sloop}(\\alpha)) = \\{x: xR(\\alpha)x\\}\\). \n\nLet us call SLPDL the logic obtained by augmenting PDL with formulas\n\\(\\mathsf{sloop}(\\alpha)\\). RPDL and SLPDL are essentially\nincomparable: the predicate \\(\\Delta\\) is not definable in SLPDL, and\nthe predicate \\(\\mathsf{sloop}\\) is not definable in RPDL. SLPDL does\nnot possess the finite model property. For example, the formula\n\n\\([\\pi^*](\\langle\\pi\\rangle 1 \\land \\lnot\\mathsf{sloop}(\\pi^+))\\) \n\nis satisfiable in infinite LTSs only. Nonetheless, Danecki [1984a]\nestablished the decidability of (SLPDL-SAT) formulas in deterministic\nexponential time.\n",
    "section_title": "4.3 PDL with repeating and looping",
    "entry_title": "Propositional Dynamic Logic",
    "hierarchy_title": "Propositional Dynamic Logic || Some variants || PDL with repeating and looping",
    "tokenized_text": [
        "variant",
        "pdl",
        "repeating",
        "looping",
        "pdl",
        "repeating",
        "looping",
        "already",
        "exposed",
        "power",
        "repeating",
        "section",
        "introducing",
        "rpdl",
        "summarize",
        "result",
        "rpdl",
        "connection",
        "variation",
        "notion",
        "repeating",
        "program",
        "concerning",
        "complexity",
        "theory",
        "rpdl",
        "streett",
        "already",
        "established",
        "rpdl",
        "finite",
        "model",
        "property",
        "precisely",
        "every",
        "rpdl",
        "satisfiable",
        "formula",
        "satisfiable",
        "model",
        "size",
        "triply",
        "exponential",
        "length",
        "a",
        "automatatheoretic",
        "argument",
        "permitted",
        "conclude",
        "problem",
        "rpdlsat",
        "solved",
        "deterministic",
        "triple",
        "exponential",
        "time",
        "exptime",
        "gap",
        "upper",
        "bound",
        "deciding",
        "rpdlsat",
        "simple",
        "exponentialtime",
        "lower",
        "bound",
        "deciding",
        "pdlsat",
        "thus",
        "open",
        "problem",
        "found",
        "greatly",
        "connected",
        "growing",
        "interest",
        "computer",
        "scientist",
        "establishing",
        "complexity",
        "temporal",
        "logic",
        "specifically",
        "propositional",
        "modal",
        "mu",
        "calculus",
        "mmc",
        "due",
        "kozen",
        "rpdl",
        "linear",
        "blowup",
        "translation",
        "mmc",
        "vardi",
        "stockmeyer",
        "upper",
        "bound",
        "nondeterministic",
        "exponential",
        "time",
        "shown",
        "emerson",
        "jutla",
        "final",
        "form",
        "emerson",
        "jutla",
        "shown",
        "mmcsat",
        "rpdlsat",
        "exptimecomplete",
        "add",
        "converse",
        "operator",
        "section",
        "one",
        "obtains",
        "crpdl",
        "complexity",
        "crpdlsat",
        "remained",
        "open",
        "year",
        "shown",
        "exptimecomplete",
        "achieved",
        "combining",
        "technique",
        "emerson",
        "jutla",
        "vardi",
        "vardi",
        "section",
        "defined",
        "predicate",
        "infty",
        "infty",
        "alpha",
        "mean",
        "program",
        "alpha",
        "nonterminating",
        "computation",
        "call",
        "lpdl",
        "logic",
        "obtained",
        "augmenting",
        "pdl",
        "predicate",
        "infty",
        "clearly",
        "rpdl",
        "least",
        "expressive",
        "lpdl",
        "inductive",
        "definition",
        "infty",
        "alpha",
        "language",
        "rpdl",
        "witness",
        "rpdl",
        "fact",
        "strictly",
        "expressive",
        "lpdl",
        "shown",
        "harel",
        "sherman",
        "suspected",
        "rpdl",
        "lpdl",
        "expressive",
        "power",
        "pdl",
        "established",
        "proving",
        "formula",
        "rpdl",
        "lpdl",
        "equivalent",
        "expression",
        "pdl",
        "proof",
        "involves",
        "technique",
        "filtration",
        "designed",
        "collapse",
        "lts",
        "finite",
        "model",
        "leaving",
        "invariant",
        "truth",
        "falsity",
        "certain",
        "formula",
        "set",
        "pdl",
        "formula",
        "x",
        "consists",
        "grouping",
        "equivalence",
        "class",
        "state",
        "lts",
        "satisfy",
        "exactly",
        "formula",
        "x",
        "set",
        "equivalence",
        "class",
        "state",
        "thus",
        "obtained",
        "becomes",
        "set",
        "state",
        "filtrate",
        "model",
        "transition",
        "built",
        "appropriately",
        "carefully",
        "chosen",
        "set",
        "fl",
        "depends",
        "pdl",
        "formula",
        "a",
        "socalled",
        "fischerladner",
        "closure",
        "set",
        "subformulas",
        "a",
        "filtration",
        "lts",
        "m",
        "yield",
        "finite",
        "filtrate",
        "model",
        "m",
        "a",
        "satisfiable",
        "world",
        "u",
        "m",
        "satisfiable",
        "equivalence",
        "class",
        "containing",
        "u",
        "filtrate",
        "see",
        "fischer",
        "ladner",
        "consider",
        "filtration",
        "lts",
        "m",
        "w",
        "r",
        "v",
        "w",
        "j",
        "j",
        "text",
        "text",
        "integer",
        "leq",
        "j",
        "leq",
        "i",
        "cup",
        "u",
        "j",
        "r",
        "pi",
        "j",
        "leq",
        "j",
        "leq",
        "i",
        "ur",
        "pi",
        "every",
        "i",
        "v",
        "p",
        "emptyset",
        "every",
        "p",
        "in",
        "phi_",
        "one",
        "sentence",
        "go",
        "m",
        "world",
        "u",
        "infinite",
        "number",
        "finite",
        "pi",
        "paths",
        "growing",
        "length",
        "u",
        "sat",
        "lnotdeltapi",
        "u",
        "sat",
        "lnotinfty",
        "pi",
        "yet",
        "every",
        "pdl",
        "formula",
        "a",
        "deltapi",
        "infty",
        "pi",
        "satisfied",
        "equivalence",
        "class",
        "u",
        "model",
        "obtained",
        "filtration",
        "m",
        "fl",
        "indeed",
        "filtration",
        "must",
        "collapse",
        "state",
        "m",
        "create",
        "loop",
        "thus",
        "exists",
        "pdl",
        "formula",
        "express",
        "deltapi",
        "exists",
        "pdl",
        "formula",
        "express",
        "infty",
        "pi",
        "way",
        "making",
        "possible",
        "assertion",
        "program",
        "execute",
        "forever",
        "instance",
        "danecki",
        "a",
        "proposed",
        "predicate",
        "mathsf",
        "sloop",
        "qualify",
        "program",
        "enter",
        "strong",
        "loop",
        "v",
        "mathsf",
        "sloop",
        "alpha",
        "x",
        "xr",
        "alpha",
        "x",
        "let",
        "u",
        "call",
        "slpdl",
        "logic",
        "obtained",
        "augmenting",
        "pdl",
        "formula",
        "mathsf",
        "sloop",
        "alpha",
        "rpdl",
        "slpdl",
        "essentially",
        "incomparable",
        "predicate",
        "delta",
        "definable",
        "slpdl",
        "predicate",
        "mathsf",
        "sloop",
        "definable",
        "rpdl",
        "slpdl",
        "posse",
        "finite",
        "model",
        "property",
        "example",
        "formula",
        "pi",
        "langlepirangle",
        "land",
        "lnotmathsf",
        "sloop",
        "pi",
        "satisfiable",
        "infinite",
        "ltss",
        "nonetheless",
        "danecki",
        "a",
        "established",
        "decidability",
        "slpdlsat",
        "formula",
        "deterministic",
        "exponential",
        "time"
    ]
}