{
    "main_text": "Impact of Turing Machines on Computer Science || Turing Machines and the Modern Computer\n5.3 Theories of Programming\n\nThe idea that any general-purpose machine can, in principle, be\nmodeled as a universal Turing machine also became an important\nprinciple in the context of automatic programming in the 1950s\n(Daylight 2015). In the machine design context it was the minimizing\nof the machine instructions that was the most important consequence of\nthat viewpoint. In the programming context then it was about the idea\nthat one can built a machine that is able to\n\u2018mimic\u2019\u2019 the behavior of any other machine and so,\nultimately, the interchangeability between machine hardware and\nlanguage implementations. This is introduced in several forms in the\n1950s by people like John W. Carr III and Saul Gorn\u2014who were\nalso actively involved in the shaping of the Association for\nComputing Machinery (ACM)\u2014as the unifying theoretical idea\nfor automatic programming which indeed is about the (automatic)\n\u201ctranslation\u201d of higher-order to lower-level, and,\nultimately, machine code. Thus, also in the context of programming,\nthe universal Turing machine starts to take on its foundational role\nin the 1950s (Daylight 2015).\n\nWhereas the Turing machine is and was a fundamental theoretical model\ndelimiting what is possible and not on the general level, it did not\nhave a real impact on the syntax and semantics of programming\nlanguages. In that context it were rather \u03bb-calculus and Post\nproduction systems that had an effect (though also here one should be\ncareful in overstating the influence of a formal model on a\nprogramming practice). In fact, Turing machines were often regarded as\nmachine models rather than as a model for programming:\n\n\nTuring machines are not conceptually different from the automatic\ncomputers in general use, but they are very poor in their control\nstructure. [\u2026] Of course, most of the theory of computability\ndeals with questions which are not concerned with the particular ways\ncomputations are represented. It is sufficient that computable\nfunctions be represented somehow by symbolic expressions, e.g.,\nnumbers, and that functions computable in terms of given functions be\nsomehow represented by expressions computable in terms of the\nexpressions representing the original functions. However, a practical\ntheory of computation must be applicable to particular algorithms.\n(McCarthy 1963: 37)\n\n\nThus one sees that the role of the Turing machine for computer science\nshould be situated rather on the theoretical level: the universal\nmachine is today by many still considered as the model for the modern\ncomputer while its ability to mimic machines through its manipulation\nof programs-as-data is one of the basic principles of modern\ncomputing. Moreover, its robustness and naturalness as a model of\ncomputability have made it the main model to challenge if one is\nattacking versions of the so-called (physical) Church-Turing\nthesis.\n",
    "section_title": "5.3 Theories of Programming",
    "entry_title": "Turing Machines",
    "hierarchy_title": "Turing Machines || Impact of Turing Machines on Computer Science || Turing Machines and the Modern Computer",
    "tokenized_text": [
        "impact",
        "turing",
        "machine",
        "computer",
        "science",
        "turing",
        "machine",
        "modern",
        "computer",
        "theory",
        "programming",
        "idea",
        "generalpurpose",
        "machine",
        "principle",
        "modeled",
        "universal",
        "turing",
        "machine",
        "also",
        "became",
        "important",
        "principle",
        "context",
        "automatic",
        "programming",
        "s",
        "daylight",
        "machine",
        "design",
        "context",
        "minimizing",
        "machine",
        "instruction",
        "important",
        "consequence",
        "viewpoint",
        "programming",
        "context",
        "idea",
        "one",
        "built",
        "machine",
        "able",
        "mimic",
        "behavior",
        "machine",
        "ultimately",
        "interchangeability",
        "machine",
        "hardware",
        "language",
        "implementation",
        "introduced",
        "several",
        "form",
        "s",
        "people",
        "like",
        "john",
        "w",
        "carr",
        "iii",
        "saul",
        "gornwho",
        "also",
        "actively",
        "involved",
        "shaping",
        "association",
        "computing",
        "machinery",
        "acm",
        "as",
        "unifying",
        "theoretical",
        "idea",
        "automatic",
        "programming",
        "indeed",
        "automatic",
        "translation",
        "higherorder",
        "lowerlevel",
        "ultimately",
        "machine",
        "code",
        "thus",
        "also",
        "context",
        "programming",
        "universal",
        "turing",
        "machine",
        "start",
        "take",
        "foundational",
        "role",
        "s",
        "daylight",
        "whereas",
        "turing",
        "machine",
        "fundamental",
        "theoretical",
        "model",
        "delimiting",
        "possible",
        "general",
        "level",
        "real",
        "impact",
        "syntax",
        "semantics",
        "programming",
        "language",
        "context",
        "rather",
        "\u03bbcalculus",
        "post",
        "production",
        "system",
        "effect",
        "though",
        "also",
        "one",
        "careful",
        "overstating",
        "influence",
        "formal",
        "model",
        "programming",
        "practice",
        "fact",
        "turing",
        "machine",
        "often",
        "regarded",
        "machine",
        "model",
        "rather",
        "model",
        "programming",
        "turing",
        "machine",
        "conceptually",
        "different",
        "automatic",
        "computer",
        "general",
        "use",
        "poor",
        "control",
        "structure",
        "course",
        "theory",
        "computability",
        "deal",
        "question",
        "concerned",
        "particular",
        "way",
        "computation",
        "represented",
        "sufficient",
        "computable",
        "function",
        "represented",
        "somehow",
        "symbolic",
        "expression",
        "eg",
        "number",
        "function",
        "computable",
        "term",
        "given",
        "function",
        "somehow",
        "represented",
        "expression",
        "computable",
        "term",
        "expression",
        "representing",
        "original",
        "function",
        "however",
        "practical",
        "theory",
        "computation",
        "must",
        "applicable",
        "particular",
        "algorithm",
        "mccarthy",
        "thus",
        "one",
        "see",
        "role",
        "turing",
        "machine",
        "computer",
        "science",
        "situated",
        "rather",
        "theoretical",
        "level",
        "universal",
        "machine",
        "today",
        "many",
        "still",
        "considered",
        "model",
        "modern",
        "computer",
        "ability",
        "mimic",
        "machine",
        "manipulation",
        "programsasdata",
        "one",
        "basic",
        "principle",
        "modern",
        "computing",
        "moreover",
        "robustness",
        "naturalness",
        "model",
        "computability",
        "made",
        "main",
        "model",
        "challenge",
        "one",
        "attacking",
        "version",
        "socalled",
        "physical",
        "churchturing",
        "thesis"
    ]
}