{
    "main_text": "Sequential higher-order computation: the full abstraction problem for PCF || Operational semantics\n2.2 Operational semantics\n\nA PCF program is a closed term of ground type. We specify how\nprograms are to be executed by defining an evaluation relation \\(e\n\\opDownarrow v\\) between closed terms \\(e\\) and values \\(v\\),\nwhere the values are the constants and abstractions of the form\n\\({\\lambda x:\\sigma{\\, . \\,}e}\\). In particular, values of ground type\nbool are \\(\\texttt{tt},\\texttt{ff}\\),\nand values of the ground type num are\n\\({0}\\) and all terms of the form \n\n\\[\\mathtt{n} = \\underbrace{\\texttt{succ}(\\ldots \\texttt{succ}}_{n}({0}) \\ldots ) .\\]\n\n Evaluation is defined\nby cases according to the structure of terms, by means of inference\nrules for judgements of the form \\(e \\opDownarrow v\\). These rules\nstate how the result of the evaluation of a term depends on the result\nof the evaluation of other terms, the only axioms having the form \\(v\n\\opDownarrow v\\) for every value \\(v\\). For example there is a rule\n\n\\[\\frac{e \\opDownarrow v}{{\\texttt{succ }e} \\opDownarrow  {\\texttt{succ }v}}\\]\n\n that states that, if the result of the evaluation of\n\\(e\\) is \\(v\\), then the result of the evaluation of \\({\\texttt{succ\n}e}\\) is \\({\\texttt{succ } v}\\). Similarly we can describe the\nevaluation of the other constants. The evaluation of a term of the\nform \\(e_1\\ e_2\\) proceeds as follows: first \\(e_1\\) is evaluated; if\nthe evaluation terminates with value \\(v'\\), then the evaluation of\n\\(e_1\\ e_2\\) proceeds with the evaluation of \\(v'\\ e_2\\); if this\nterminates with value \\(v\\), this is the value of \\(e_1\\ e_2\\),\nformally \n\n\\[\\frac{e_1 \\opDownarrow v' \\qquad v'\\ e_2 \\opDownarrow v}{e_1\\ e_2 \\opDownarrow v}\\]\n\n For a value of the form \\({\\lambda x:\\sigma{\\, .\n\\,}e_1}\\), its application to a term \\(e_2\\) has the value (if any)\nobtained by evaluating the term \\(e_1[e_2/x]\\) resulting by\nsubstituting \\(e_2\\) to all free occurrences of \\(x\\) in \\(e_1\\):\n\n\\[\\frac{e_1[e_2/x] \\opDownarrow v}{({\\lambda x:\\sigma{\\, . \\,}e_1}) e_2 \\opDownarrow v}.\\]\n\n These implement a call-by-name evaluation\nstrategy: in an application, the term in function position must be\nevaluated completely before the term in argument position, which is\nthen passed as actual parameter. The fixed point combinator is\nessential to the encoding of recursive definitions. Its evaluation is\ndescribed by the rule \n\n\\[\\frac{e({\\mathtt{Y}(e)}) \\opDownarrow v}{{\\mathtt{Y}(e)} \\opDownarrow v}\\]\n\n which is the only rule whose\npremiss involves the evaluation of a larger term than the one to be\nevaluated: this is why the definition of the evaluation relation\ncannot be reduced to structural induction.\n\nWe shall be especially interested in situations when the evaluation of\na term \\(e\\) does not have a value; in these case we say that \\(e\\)\ndiverges, and write \\(e \\opUparrow\\). It is in the presence\nof divergent terms that the causal structure of the evaluation process\nis exposed. The initial example is in fact a term that diverges in a\nvery strong sense:\n\n\nDefinition 2.2 (Undefined). For any ground type\n\\(\\gamma\\), define \\(\\Omega:\\gamma\\) as \n\n\\[{\\mathtt{Y}({\\lambda x:\\gamma{\\, . \\,}x})}\\]\n\n \n\n\nBy inspecting the evaluation rules we see that the only possible\nevaluation process gives rise to an infinite regress, therefore\n\\(\\Omega \\opUparrow\\).\n\nWe can define the usual boolean operations by means of the conditional\noperator, as in the following examples: \n\n\\[\\begin{align}\n\\tag{2} \\texttt{and} &= {\\lambda x:\\texttt{bool}, y:\\texttt{bool}{\\, . \\,}{\\texttt{if }x\\texttt{ then }y\\texttt{ else }\\texttt{ff}}}.\n                                    \\label{etbivalente} \\\\\n\\tag{3} \\texttt{or} &= {\\lambda x:\\texttt{bool}, y:\\texttt{bool}{\\, . \\,}{\\texttt{if }x\\texttt{ then }\\texttt{tt}\\texttt{ else }y}}\n                                \\label{velbivalente}\\end{align}\\]\n\n with the usual\ntruth tables. However, we have now to take into account the\npossibility of divergence of the evaluation process, for example in a\nterm like \\(\\texttt{or}(\\Omega,\\texttt{tt})\\), therefore we extend the\nusual truth tables by adding a new boolean value, representing absence\nof information, \\(\\bot\\) (read as \u201cundefined\u201d) to\n\\(\\texttt{tt}\\) and \\(\\texttt{ff}\\), as the value of the term\n\\(\\Omega\\). Here, the first argument to be evaluated is the one on the\nleft, and if the evaluation of this diverges then the whole evaluation\nprocess diverges. Consider now an operator por\nwhose interpretation is given by the\ntable \n\n\\[\\tag{4}\\label{por}\n \\begin{array}{r|lll} \n\\texttt{por}& \\textit{tt}& \\textit{ff}&\\bot \\\\\\hline\n\\textit{tt}& \\textit{tt}& \\textit{tt}&\\textit{tt}\\\\\n \\textit{ff}& \\textit{tt}& \\textit{ff}&\\bot\\\\\n \\bot & \\textit{tt}& \\bot &\\bot \n\\end{array}\\]\n\n In this case \\(\\texttt{por}(\\texttt{tt},\\Omega) =\n\\texttt{por}(\\Omega,\\texttt{tt}) = \\texttt{tt}\\): this is the\nparallel-or which plays a central role in the full\nabstraction problem for PCF. It will turn out that is is not definable\nby any PCF term, precisely because of its parallel nature. In order to\ncarry out a semantical analysis of PCF, we need a theory of data types\nwith partial elements and of functions over them that support\nan abstract form of recursive definition through fixed point\nequations: this is what is achieved in Scott\u2019s theory of\ndomains, the original mathematical foundation for denotational\nsemantics of programming languages as conceived by Strachey (1966,\n1967).\n",
    "section_title": "2.2 Operational semantics",
    "entry_title": "Games, Full Abstraction and Full Completeness",
    "hierarchy_title": "Games, Full Abstraction and Full Completeness || Sequential higher-order computation: the full abstraction problem for PCF || Operational semantics",
    "tokenized_text": [
        "sequential",
        "higherorder",
        "computation",
        "full",
        "abstraction",
        "problem",
        "pcf",
        "operational",
        "semantics",
        "operational",
        "semantics",
        "pcf",
        "program",
        "closed",
        "term",
        "ground",
        "type",
        "specify",
        "program",
        "executed",
        "defining",
        "evaluation",
        "relation",
        "e",
        "opdownarrow",
        "v",
        "closed",
        "term",
        "e",
        "value",
        "v",
        "value",
        "constant",
        "abstraction",
        "form",
        "lambda",
        "x",
        "sigma",
        "e",
        "particular",
        "value",
        "ground",
        "type",
        "bool",
        "texttt",
        "tt",
        "texttt",
        "ff",
        "value",
        "ground",
        "type",
        "num",
        "term",
        "form",
        "mathtt",
        "n",
        "underbrace",
        "texttt",
        "succ",
        "ldots",
        "texttt",
        "succ",
        "_",
        "n",
        "ldots",
        "evaluation",
        "defined",
        "case",
        "according",
        "structure",
        "term",
        "mean",
        "inference",
        "rule",
        "judgement",
        "form",
        "e",
        "opdownarrow",
        "v",
        "rule",
        "state",
        "result",
        "evaluation",
        "term",
        "depends",
        "result",
        "evaluation",
        "term",
        "axiom",
        "form",
        "v",
        "opdownarrow",
        "v",
        "every",
        "value",
        "v",
        "example",
        "rule",
        "frac",
        "e",
        "opdownarrow",
        "v",
        "texttt",
        "succ",
        "e",
        "opdownarrow",
        "texttt",
        "succ",
        "v",
        "state",
        "result",
        "evaluation",
        "e",
        "v",
        "result",
        "evaluation",
        "texttt",
        "succ",
        "e",
        "texttt",
        "succ",
        "v",
        "similarly",
        "describe",
        "evaluation",
        "constant",
        "evaluation",
        "term",
        "form",
        "e_",
        "e_",
        "proceeds",
        "follows",
        "first",
        "e_",
        "evaluated",
        "evaluation",
        "terminates",
        "value",
        "v",
        "evaluation",
        "e_",
        "e_",
        "proceeds",
        "evaluation",
        "v",
        "e_",
        "terminates",
        "value",
        "v",
        "value",
        "e_",
        "e_",
        "formally",
        "frac",
        "e_",
        "opdownarrow",
        "v",
        "qquad",
        "v",
        "e_",
        "opdownarrow",
        "v",
        "e_",
        "e_",
        "opdownarrow",
        "v",
        "value",
        "form",
        "lambda",
        "x",
        "sigma",
        "e_",
        "application",
        "term",
        "e_",
        "value",
        "obtained",
        "evaluating",
        "term",
        "e_",
        "e_x",
        "resulting",
        "substituting",
        "e_",
        "free",
        "occurrence",
        "x",
        "e_",
        "frac",
        "e_",
        "e_x",
        "opdownarrow",
        "v",
        "lambda",
        "x",
        "sigma",
        "e_",
        "e_",
        "opdownarrow",
        "v",
        "implement",
        "callbyname",
        "evaluation",
        "strategy",
        "application",
        "term",
        "function",
        "position",
        "must",
        "evaluated",
        "completely",
        "term",
        "argument",
        "position",
        "passed",
        "actual",
        "parameter",
        "fixed",
        "point",
        "combinator",
        "essential",
        "encoding",
        "recursive",
        "definition",
        "evaluation",
        "described",
        "rule",
        "frac",
        "e",
        "mathtt",
        "e",
        "opdownarrow",
        "v",
        "mathtt",
        "e",
        "opdownarrow",
        "v",
        "rule",
        "whose",
        "premiss",
        "involves",
        "evaluation",
        "larger",
        "term",
        "one",
        "evaluated",
        "definition",
        "evaluation",
        "relation",
        "reduced",
        "structural",
        "induction",
        "shall",
        "especially",
        "interested",
        "situation",
        "evaluation",
        "term",
        "e",
        "value",
        "case",
        "say",
        "e",
        "diverges",
        "write",
        "e",
        "opuparrow",
        "presence",
        "divergent",
        "term",
        "causal",
        "structure",
        "evaluation",
        "process",
        "exposed",
        "initial",
        "example",
        "fact",
        "term",
        "diverges",
        "strong",
        "sense",
        "definition",
        "undefined",
        "ground",
        "type",
        "gamma",
        "define",
        "omega",
        "gamma",
        "mathtt",
        "lambda",
        "x",
        "gamma",
        "x",
        "inspecting",
        "evaluation",
        "rule",
        "see",
        "possible",
        "evaluation",
        "process",
        "give",
        "rise",
        "infinite",
        "regress",
        "therefore",
        "omega",
        "opuparrow",
        "define",
        "usual",
        "boolean",
        "operation",
        "mean",
        "conditional",
        "operator",
        "following",
        "example",
        "begin",
        "align",
        "tag",
        "texttt",
        "lambda",
        "x",
        "texttt",
        "bool",
        "texttt",
        "bool",
        "texttt",
        "xtexttt",
        "ytexttt",
        "else",
        "texttt",
        "ff",
        "label",
        "etbivalente",
        "tag",
        "texttt",
        "lambda",
        "x",
        "texttt",
        "bool",
        "texttt",
        "bool",
        "texttt",
        "xtexttt",
        "texttt",
        "tt",
        "texttt",
        "else",
        "label",
        "velbivalente",
        "end",
        "align",
        "usual",
        "truth",
        "table",
        "however",
        "take",
        "account",
        "possibility",
        "divergence",
        "evaluation",
        "process",
        "example",
        "term",
        "like",
        "texttt",
        "omega",
        "texttt",
        "tt",
        "therefore",
        "extend",
        "usual",
        "truth",
        "table",
        "adding",
        "new",
        "boolean",
        "value",
        "representing",
        "absence",
        "information",
        "bot",
        "read",
        "undefined",
        "texttt",
        "tt",
        "texttt",
        "ff",
        "value",
        "term",
        "omega",
        "first",
        "argument",
        "evaluated",
        "one",
        "left",
        "evaluation",
        "diverges",
        "whole",
        "evaluation",
        "process",
        "diverges",
        "consider",
        "operator",
        "por",
        "whose",
        "interpretation",
        "given",
        "table",
        "tag",
        "label",
        "por",
        "begin",
        "array",
        "rlll",
        "texttt",
        "por",
        "textit",
        "tt",
        "textit",
        "ff",
        "bot",
        "hline",
        "textit",
        "tt",
        "textit",
        "tt",
        "textit",
        "tt",
        "textit",
        "tt",
        "textit",
        "ff",
        "textit",
        "tt",
        "textit",
        "ff",
        "bot",
        "bot",
        "textit",
        "tt",
        "bot",
        "bot",
        "end",
        "array",
        "case",
        "texttt",
        "por",
        "texttt",
        "tt",
        "omega",
        "texttt",
        "por",
        "omega",
        "texttt",
        "tt",
        "texttt",
        "tt",
        "parallelor",
        "play",
        "central",
        "role",
        "full",
        "abstraction",
        "problem",
        "pcf",
        "turn",
        "definable",
        "pcf",
        "term",
        "precisely",
        "parallel",
        "nature",
        "order",
        "carry",
        "semantical",
        "analysis",
        "pcf",
        "need",
        "theory",
        "data",
        "type",
        "partial",
        "element",
        "function",
        "support",
        "abstract",
        "form",
        "recursive",
        "definition",
        "fixed",
        "point",
        "equation",
        "achieved",
        "scott",
        "theory",
        "domain",
        "original",
        "mathematical",
        "foundation",
        "denotational",
        "semantics",
        "programming",
        "language",
        "conceived",
        "strachey"
    ]
}