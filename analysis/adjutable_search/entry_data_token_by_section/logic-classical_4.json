{
    "main_text": "Semantics\n4. Semantics\n\nLet \\(K\\) be a set of non-logical terminology. An\ninterpretation for the language \\(\\LKe\\) is a structure \\(M =\n\\langle d,I\\rangle\\), where \\(d\\) is a non-empty set, called the\ndomain-of-discourse, or simply the domain, of the\ninterpretation, and \\(I\\) is an interpretation function.\nInformally, the domain is what we interpret the language \\(\\LKe\\) to\nbe about. It is what the variables range over. The interpretation\nfunction assigns appropriate extensions to the non-logical terms. In\nparticular,\n\nIf \\(c\\) is a constant in \\(K\\), then \\(I(c)\\) is a member of the\ndomain \\(d\\). \n\nThus we assume that every constant denotes something. Systems where\nthis is not assumed are called free logics (see the entry on\n free logic).\n Continuing,\n\n\nIf \\(P^0\\) is a zero-place predicate letter in \\(K\\), then \\(I(P)\\) is\na truth value, either truth or falsehood.\n\nIf \\(Q^1\\) is a one-place predicate letter in \\(K\\), then \\(I(Q)\\) is\na subset of \\(d\\). Intuitively, \\(I(Q)\\) is the set of members of the\ndomain that the predicate \\(Q\\) holds of. For example, \\(I(Q)\\) might\nbe the set of red members of the domain.\n\nIf \\(R^2\\) is a two-place predicate letter in \\(K\\), then \\(I(R)\\) is\na set of ordered pairs of members of \\(d\\). Intuitively, \\(I(R)\\) is\nthe set of pairs of members of the domain that the relation \\(R\\)\nholds between. For example, \\(I(R)\\) might be the set of pairs\n\\(\\langle a,b\\rangle\\) such that \\(a\\) and \\(b\\) are the members of\nthe domain for which \\(a\\) loves \\(b\\).\n\nIn general, if S\\(^n\\) is an \\(n\\)-place predicate letter in\n\\(K\\), then \\(I(S)\\) is a set of ordered \\(n\\)-tuples of members of\n\\(d\\).\n\n\nDefine \\(s\\) to be a variable-assignment, or simply an\nassignment, on an interpretation \\(M\\), if \\(s\\) is a\nfunction from the variables to the domain \\(d\\) of \\(M\\). The role of\nvariable-assignments is to assign denotations to the free\nvariables of open formulas. (In a sense, the quantifiers determine the\n\u201cmeaning\u201d of the bound variables.) \n\nLet \\(t\\) be a term of \\(\\LKe\\). We define the denotation of\n\\(t\\) in \\(M\\) under \\(s\\), in terms of the interpretation function\nand variable-assignment:\n\nIf \\(t\\) is a constant, then \\(D_{M,s}(t)\\) is \\(I(t)\\), and if \\(t\\)\nis a variable, then \\(D_{M,s}(t)\\) is \\(s(t)\\). \n\nThat is, the interpretation \\(M\\) assigns denotations to the\nconstants, while the variable-assignment assigns denotations to the\n(free) variables. If the language contained function symbols, the\ndenotation function would be defined by recursion.\n\nWe now define a relation of satisfaction between\ninterpretations, variable-assignments, and formulas of \\(\\LKe\\). If\n\\(\\phi\\) is a formula of \\(\\LKe, M\\) is an interpretation for\n\\(\\LKe\\), and \\(s\\) is a variable-assignment on \\(M\\), then we write\n\\(M,s\\vDash \\phi\\) for \\(M\\) satisfies \\(\\phi\\) under the\nassignment \\(s\\). The idea is that \\(M,s\\vDash \\phi\\) is an\nanalogue of \u201c\\(\\phi\\) comes out true when interpreted as in\n\\(M\\) via \\(s\\)\u201d.\n\nWe proceed by recursion on the complexity of the formulas of\n\\(\\LKe\\).\n\nIf \\(t_1\\) and \\(t_2\\) are terms, then \\(M,s\\vDash t_1 =t_2\\) if and\nonly if \\(D_{M,s}(t_1)\\) is the same as \\(D_{M,s}(t_2)\\). \n\nThis is about as straightforward as it gets. An identity \\(t_1 =t_2\\)\ncomes out true if and only if the terms \\(t_1\\) and \\(t_2\\) denote the\nsame thing.\n\nIf \\(P^0\\) is a zero-place predicate letter in \\(K\\), then \\(M,s\\vDash\nP\\) if and only if \\(I(P)\\) is truth. \n\nIf S\\(^n\\) is an \\(n\\)-place predicate letter in \\(K\\) and\n\\(t_1, \\ldots,t_n\\) are terms, then \\(M,s\\vDash St_1 \\ldots t_n\\) if\nand only if the \\(n\\)-tuple \\(\\langle D_{M,s}(t_1),\n\\ldots,D_{M,s}(t_n)\\rangle\\) is in \\(I(S)\\).\n\nThis takes care of the atomic formulas. We now proceed to the compound\nformulas of the language, more or less following the meanings of the\nEnglish counterparts of the logical terminology.\n\n\n\\(M,s\\vDash \\neg \\theta\\) if and only if it is not the case that\n\\(M,s\\vDash \\theta\\).\n\n\\(M,s\\vDash(\\theta \\amp \\psi)\\) if and only if both \\(M,s\\vDash\n\\theta\\) and \\(M,s\\vDash \\psi\\).\n\n\\(M,s\\vDash(\\theta \\vee \\psi)\\) if and only if either \\(M,s\\vDash\n\\theta\\) or \\(M,s\\vDash \\psi\\).\n\n\\(M,s\\vDash(\\theta \\rightarrow \\psi)\\) if and only if either it is not\nthe case that \\(M,s\\vDash \\theta\\), or \\(M,s\\vDash \\psi\\).\n\n\\(M,s\\vDash \\forall v\\theta\\) if and only if \\(M,s'\\vDash \\theta\\),\nfor every assignment \\(s'\\) that agrees with \\(s\\) except possibly at\nthe variable \\(v\\).\n\n\nThe idea here is that \\(\\forall v\\theta\\) comes out true if and only\nif \\(\\theta\\) comes out true no matter what is assigned to the\nvariable \\(v\\). The final clause is similar.\n\n\\(M,s\\vDash \\exists v\\theta\\) if and only if \\(M,s'\\vDash \\theta\\),\nfor some assignment \\(s'\\) that agrees with \\(s\\) except possibly at\nthe variable \\(v\\). \n\nSo \\(\\exists v\\theta\\) comes out true if there is an assignment to\n\\(v\\) that makes \\(\\theta\\) true.\n\nTheorem 6, unique readability, assures us that this definition is\ncoherent. At each stage in breaking down a formula, there is exactly\none clause to be applied, and so we never get contradictory verdicts\nconcerning satisfaction.\n\nAs indicated, the role of variable-assignments is to give denotations\nto the free variables. We now show that variable-assignments play no\nother role.\n\n\nTheorem 14. For any formula \\(\\theta\\), if \\(s_1\\)\nand \\(s_2\\) agree on the free variables in \\(\\theta\\), then \\(M,s_1\n\\vDash \\theta\\) if and only if \\(M,s_2 \\vDash \\theta\\).\n\nProof: We proceed by induction on the complexity of\nthe formula \\(\\theta\\). The theorem clearly holds if \\(\\theta\\) is\natomic, since in those cases only the values of the\nvariable-assignments at the variables in \\(\\theta\\) figure in the\ndefinition. Assume, then, that the theorem holds for all formulas less\ncomplex than \\(\\theta\\). And suppose that \\(s_1\\) and \\(s_2\\) agree on\nthe free variables of \\(\\theta\\). Assume, first, that \\(\\theta\\) is a\nnegation, \\(\\neg \\psi\\). Then, by the induction hypothesis, \\(M,s_1\n\\vDash \\psi\\) if and only if \\(M,s_2 \\vDash \\psi\\). So, by the clause\nfor negation, \\(M,s_1 \\vDash \\neg \\psi\\) if and only if \\(M,s_2 \\vDash\n\\neg \\psi\\). The cases where the main connective in \\(\\theta\\) is\nbinary are also straightforward. Suppose that \\(\\theta\\) is \\(\\exists\nv\\psi\\), and that \\(M,s_1 \\vDash \\exists v\\psi\\). Then there is an\nassignment \\(s_1'\\) that agrees with \\(s_1\\) except possibly at \\(v\\)\nsuch that \\(M,s_1'\\vDash \\psi\\). Let \\(s_2'\\) be the assignment that\nagrees with \\(s_2\\) on the free variables not in \\(\\psi\\) and agrees\nwith \\(s_1'\\) on the others. Then, by the induction hypothesis,\n\\(M,s_2'\\vDash \\psi\\). Notice that \\(s_2'\\) agrees with \\(s_2\\) on\nevery variable except possibly \\(v\\). So \\(M,s_2 \\vDash \\exists\nv\\psi\\). The converse is the same, and the case where \\(\\theta\\)\nbegins with a universal quantifier is similar.\n\n\nBy Theorem 14, if \\(\\theta\\) is a sentence, and \\(s_1, s_2\\), are any\ntwo variable-assignments, then \\(M,s_1 \\vDash \\theta\\) if and only if\n\\(M,s_2 \\vDash \\theta\\). So we can just write \\(M\\vDash \\theta\\) if\n\\(M,s\\vDash \\theta\\) for some, or all, variable-assignments \\(s\\). So\nwe define \n\n\\(M\\vDash \\theta\\) where \\(\\theta\\) is a sentence just in case\n\\(M,s\\vDash\\theta\\) for all variable assignments \\(s\\). \n\nIn this case, we call \\(M\\) a model of \\(\\theta\\).\n\nSuppose that \\(K'\\subseteq K\\) are two sets of non-logical terms. If\n\\(M = \\langle d,I\\rangle\\) is an interpretation of \\(\\LKe\\), then we\ndefine the restriction of \\(M\\) to \\(\\mathcal{L}1K'{=}\\) to\nbe the interpretation \\(M'=\\langle d,I'\\rangle\\) such that \\(I'\\) is\nthe restriction of \\(I\\) to \\(K'\\). That is, \\(M\\) and \\(M'\\) have the\nsame domain and agree on the non-logical terminology in \\(K'\\). A\nstraightforward induction establishes the following:\n\n\nTheorem 15. If \\(M'\\) is the restriction of \\(M\\) to\n\\(\\mathcal{L}1K'{=}\\), then for every sentence \\(\\theta\\) of\n\\(\\mathcal{L}1K'\\), \\(M\\vDash\\theta\\) if and only if \\(M'\\vDash\n\\theta\\).\n\nTheorem 16. If two interpretations \\(M_1\\) and\n\\(M_2\\) have the same domain and agree on all of the non-logical\nterminology of a sentence \\(\\theta\\), then \\(M_1\\vDash\\theta\\) if and\nonly if \\(M_2\\vDash \\theta\\).\n\n\nIn short, the satisfaction of a sentence \\(\\theta\\) only depends on\nthe domain of discourse and the interpretation of the non-logical\nterminology in \\(\\theta\\).\n\nWe say that an argument \\(\\langle \\Gamma,\\theta \\rangle\\) is\nsemantically valid, or just valid, written \\(\\Gamma\n\\vDash \\theta\\), if for every interpretation \\(M\\) of the language, if\n\\(M\\vDash\\psi\\), for every member \\(\\psi\\) of \\(\\Gamma\\), then\n\\(M\\vDash\\theta\\). If \\(\\Gamma \\vDash \\theta\\), we also say that\n\\(\\theta\\) is a logical consequence, or semantic\nconsequence, or model-theoretic consequence of\n\\(\\Gamma\\). The definition corresponds to the informal idea that an\nargument is valid if it is not possible for its premises to all be\ntrue and its conclusion false. Our definition of logical consequence\nalso sanctions the common thesis that a valid argument is\ntruth-preserving \u2013 to the extent that satisfaction represents\ntruth. Officially, an argument in \\(\\LKe\\) is valid if its conclusion\ncomes out true under every interpretation of the language in which the\npremises are true. Validity is the model-theoretic counterpart to\ndeducibility.\n\nA sentence \\(\\theta\\) is logically true, or valid,\nif \\(M\\vDash \\theta\\), for every interpretation \\(M\\). A sentence is\nlogically true if and only if it is a consequence of the empty set. If\n\\(\\theta\\) is logically true, then for any set \\(\\Gamma\\) of\nsentences, \\(\\Gamma \\vDash \\theta\\). Logical truth is the\nmodel-theoretic counterpart of theoremhood.\n\nA sentence \\(\\theta\\) is satisfiable if there is an\ninterpretation \\(M\\) such that \\(M\\vDash \\theta\\). That is, \\(\\theta\\)\nis satisfiable if there is an interpretation that satisfies it. A set\n\\(\\Gamma\\) of sentences is satisfiable if there is an interpretation\n\\(M\\) such that \\(M\\vDash\\theta\\), for every sentence \\(\\theta\\) in\n\\(\\Gamma\\). If \\(\\Gamma\\) is a set of sentences and if \\(M\\vDash\n\\theta\\) for each sentence \\(\\theta\\) in \\(\\Gamma\\), then we say that\n\\(M\\) is a model of \\(\\Gamma\\). So a set of sentences is\nsatisfiable if it has a model. Satisfiability is the model-theoretic\ncounterpart to consistency.\n\nNotice that \\(\\Gamma \\vDash \\theta\\) if and only if the set\n\\(\\Gamma,\\neg \\theta\\) is not satisfiable. It follows that if a set\n\\(\\Gamma\\) is not satisfiable, then if \\(\\theta\\) is any sentence,\n\\(\\Gamma \\vDash \\theta\\). This is a model-theoretic counterpart to\nex falso quodlibet (see Theorem 10). We have the following,\nas an analogue to Theorem 12:\n\n\nTheorem 17. Let \\(\\Gamma\\) be a set of sentences. The\nfollowing are equivalent: (a) \\(\\Gamma\\) is satisfiable; (b) there is\nno sentence \\(\\theta\\) such that both \\(\\Gamma \\vDash \\theta\\) and\n\\(\\Gamma \\vDash \\neg \\theta\\); (c) there is some sentence \\(\\psi\\)\nsuch that it is not the case that \\(\\Gamma \\vDash \\psi\\).\n\nProof: (a)\\(\\Rightarrow\\)(b): Suppose that \\(\\Gamma\\)\nis satisfiable and let \\(\\theta\\) be any sentence. There is an\ninterpretation \\(M\\) such that \\(M\\vDash \\psi\\) for every member\n\\(\\psi\\) of \\(\\Gamma\\). By the clause for negations, we cannot have\nboth \\(M\\vDash \\theta\\) and \\(M\\vDash \\neg \\theta\\). So either\n\\(\\langle \\Gamma,\\theta \\rangle\\) is not valid or else \\(\\langle\n\\Gamma,\\neg \\theta \\rangle\\) is not valid. (b)\\(\\Rightarrow\\)(c): This\nis immediate. (c)\\(\\Rightarrow\\)(a): Suppose that it is not the case\nthat \\(\\Gamma \\vDash \\psi\\). Then there is an interpretation \\(M\\)\nsuch that \\(M\\vDash \\theta\\), for every sentence \\(\\theta\\) in\n\\(\\Gamma\\) and it is not the case that \\(M\\vDash \\psi\\). A fortiori,\n\\(M\\) satisfies every member of \\(\\Gamma\\), and so \\(\\Gamma\\) is\nsatisfiable.\n\n",
    "section_title": "4. Semantics",
    "entry_title": "Classical Logic",
    "hierarchy_title": "Classical Logic || Semantics",
    "tokenized_text": [
        "semantics",
        "semantics",
        "let",
        "k",
        "set",
        "nonlogical",
        "terminology",
        "interpretation",
        "language",
        "lke",
        "structure",
        "langle",
        "irangle",
        "d",
        "nonempty",
        "set",
        "called",
        "domainofdiscourse",
        "simply",
        "domain",
        "interpretation",
        "i",
        "interpretation",
        "function",
        "informally",
        "domain",
        "interpret",
        "language",
        "lke",
        "variable",
        "range",
        "interpretation",
        "function",
        "assigns",
        "appropriate",
        "extension",
        "nonlogical",
        "term",
        "particular",
        "c",
        "constant",
        "k",
        "c",
        "member",
        "domain",
        "d",
        "thus",
        "assume",
        "every",
        "constant",
        "denotes",
        "something",
        "system",
        "assumed",
        "called",
        "free",
        "logic",
        "see",
        "entry",
        "free",
        "logic",
        "continuing",
        "p",
        "zeroplace",
        "predicate",
        "letter",
        "k",
        "p",
        "truth",
        "value",
        "either",
        "truth",
        "falsehood",
        "q",
        "oneplace",
        "predicate",
        "letter",
        "k",
        "q",
        "subset",
        "d",
        "intuitively",
        "q",
        "set",
        "member",
        "domain",
        "predicate",
        "q",
        "hold",
        "example",
        "q",
        "might",
        "set",
        "red",
        "member",
        "domain",
        "r",
        "twoplace",
        "predicate",
        "letter",
        "k",
        "r",
        "set",
        "ordered",
        "pair",
        "member",
        "d",
        "intuitively",
        "r",
        "set",
        "pair",
        "member",
        "domain",
        "relation",
        "r",
        "hold",
        "example",
        "r",
        "might",
        "set",
        "pair",
        "langle",
        "brangle",
        "a",
        "b",
        "member",
        "domain",
        "a",
        "love",
        "b",
        "general",
        "s",
        "n",
        "n",
        "place",
        "predicate",
        "letter",
        "k",
        "set",
        "ordered",
        "n",
        "tuples",
        "member",
        "d",
        "define",
        "s",
        "variableassignment",
        "simply",
        "assignment",
        "interpretation",
        "m",
        "s",
        "function",
        "variable",
        "domain",
        "d",
        "m",
        "role",
        "variableassignments",
        "assign",
        "denotation",
        "free",
        "variable",
        "open",
        "formula",
        "sense",
        "quantifier",
        "determine",
        "meaning",
        "bound",
        "variable",
        "let",
        "t",
        "term",
        "lke",
        "define",
        "denotation",
        "t",
        "m",
        "s",
        "term",
        "interpretation",
        "function",
        "variableassignment",
        "t",
        "constant",
        "d_",
        "t",
        "variable",
        "d_",
        "interpretation",
        "m",
        "assigns",
        "denotation",
        "constant",
        "variableassignment",
        "assigns",
        "denotation",
        "free",
        "variable",
        "language",
        "contained",
        "function",
        "symbol",
        "denotation",
        "function",
        "would",
        "defined",
        "recursion",
        "define",
        "relation",
        "satisfaction",
        "interpretation",
        "variableassignments",
        "formula",
        "lke",
        "phi",
        "formula",
        "lke",
        "m",
        "interpretation",
        "lke",
        "s",
        "variableassignment",
        "m",
        "write",
        "svdash",
        "phi",
        "m",
        "satisfies",
        "phi",
        "assignment",
        "s",
        "idea",
        "svdash",
        "phi",
        "analogue",
        "phi",
        "come",
        "true",
        "interpreted",
        "m",
        "via",
        "s",
        "proceed",
        "recursion",
        "complexity",
        "formula",
        "lke",
        "t_",
        "t_",
        "term",
        "svdash",
        "t_",
        "t_",
        "d_",
        "t_",
        "d_",
        "t_",
        "straightforward",
        "get",
        "identity",
        "t_",
        "t_",
        "come",
        "true",
        "term",
        "t_",
        "t_",
        "denote",
        "thing",
        "p",
        "zeroplace",
        "predicate",
        "letter",
        "k",
        "svdash",
        "p",
        "p",
        "truth",
        "s",
        "n",
        "n",
        "place",
        "predicate",
        "letter",
        "k",
        "t_",
        "ldots",
        "t_n",
        "term",
        "svdash",
        "st_",
        "ldots",
        "t_n",
        "n",
        "tuple",
        "langle",
        "d_",
        "t_",
        "ldots",
        "d_",
        "t_n",
        "rangle",
        "take",
        "care",
        "atomic",
        "formula",
        "proceed",
        "compound",
        "formula",
        "language",
        "le",
        "following",
        "meaning",
        "english",
        "counterpart",
        "logical",
        "terminology",
        "svdash",
        "neg",
        "theta",
        "case",
        "svdash",
        "theta",
        "svdash",
        "theta",
        "amp",
        "psi",
        "svdash",
        "theta",
        "svdash",
        "psi",
        "svdash",
        "theta",
        "vee",
        "psi",
        "either",
        "svdash",
        "theta",
        "svdash",
        "psi",
        "svdash",
        "theta",
        "rightarrow",
        "psi",
        "either",
        "case",
        "svdash",
        "theta",
        "svdash",
        "psi",
        "svdash",
        "forall",
        "vtheta",
        "svdash",
        "theta",
        "every",
        "assignment",
        "s",
        "agrees",
        "s",
        "except",
        "possibly",
        "variable",
        "v",
        "idea",
        "forall",
        "vtheta",
        "come",
        "true",
        "theta",
        "come",
        "true",
        "matter",
        "assigned",
        "variable",
        "v",
        "final",
        "clause",
        "similar",
        "svdash",
        "exists",
        "vtheta",
        "svdash",
        "theta",
        "assignment",
        "s",
        "agrees",
        "s",
        "except",
        "possibly",
        "variable",
        "v",
        "exists",
        "vtheta",
        "come",
        "true",
        "assignment",
        "v",
        "make",
        "theta",
        "true",
        "theorem",
        "unique",
        "readability",
        "assures",
        "u",
        "definition",
        "coherent",
        "stage",
        "breaking",
        "formula",
        "exactly",
        "one",
        "clause",
        "applied",
        "never",
        "get",
        "contradictory",
        "verdict",
        "concerning",
        "satisfaction",
        "indicated",
        "role",
        "variableassignments",
        "give",
        "denotation",
        "free",
        "variable",
        "show",
        "variableassignments",
        "play",
        "role",
        "theorem",
        "formula",
        "theta",
        "s_",
        "s_",
        "agree",
        "free",
        "variable",
        "theta",
        "s_",
        "vdash",
        "theta",
        "s_",
        "vdash",
        "theta",
        "proof",
        "proceed",
        "induction",
        "complexity",
        "formula",
        "theta",
        "theorem",
        "clearly",
        "hold",
        "theta",
        "atomic",
        "since",
        "case",
        "value",
        "variableassignments",
        "variable",
        "theta",
        "figure",
        "definition",
        "assume",
        "theorem",
        "hold",
        "formula",
        "le",
        "complex",
        "theta",
        "suppose",
        "s_",
        "s_",
        "agree",
        "free",
        "variable",
        "theta",
        "assume",
        "first",
        "theta",
        "negation",
        "neg",
        "psi",
        "induction",
        "hypothesis",
        "s_",
        "vdash",
        "psi",
        "s_",
        "vdash",
        "psi",
        "clause",
        "negation",
        "s_",
        "vdash",
        "neg",
        "psi",
        "s_",
        "vdash",
        "neg",
        "psi",
        "case",
        "main",
        "connective",
        "theta",
        "binary",
        "also",
        "straightforward",
        "suppose",
        "theta",
        "exists",
        "vpsi",
        "s_",
        "vdash",
        "exists",
        "vpsi",
        "assignment",
        "s_",
        "agrees",
        "s_",
        "except",
        "possibly",
        "v",
        "s_vdash",
        "psi",
        "let",
        "s_",
        "assignment",
        "agrees",
        "s_",
        "free",
        "variable",
        "psi",
        "agrees",
        "s_",
        "others",
        "induction",
        "hypothesis",
        "s_vdash",
        "psi",
        "notice",
        "s_",
        "agrees",
        "s_",
        "every",
        "variable",
        "except",
        "possibly",
        "v",
        "s_",
        "vdash",
        "exists",
        "vpsi",
        "converse",
        "case",
        "theta",
        "begin",
        "universal",
        "quantifier",
        "similar",
        "theorem",
        "theta",
        "sentence",
        "s_",
        "s_",
        "two",
        "variableassignments",
        "s_",
        "vdash",
        "theta",
        "s_",
        "vdash",
        "theta",
        "write",
        "mvdash",
        "theta",
        "svdash",
        "theta",
        "variableassignments",
        "s",
        "define",
        "mvdash",
        "theta",
        "theta",
        "sentence",
        "case",
        "svdashtheta",
        "variable",
        "assignment",
        "s",
        "case",
        "call",
        "m",
        "model",
        "theta",
        "suppose",
        "ksubseteq",
        "k",
        "two",
        "set",
        "nonlogical",
        "term",
        "langle",
        "irangle",
        "interpretation",
        "lke",
        "define",
        "restriction",
        "m",
        "mathcal",
        "l",
        "k",
        "interpretation",
        "mlangle",
        "irangle",
        "i",
        "restriction",
        "i",
        "k",
        "m",
        "m",
        "domain",
        "agree",
        "nonlogical",
        "terminology",
        "k",
        "straightforward",
        "induction",
        "establishes",
        "following",
        "theorem",
        "m",
        "restriction",
        "m",
        "mathcal",
        "l",
        "k",
        "every",
        "sentence",
        "theta",
        "mathcal",
        "l",
        "k",
        "mvdashtheta",
        "mvdash",
        "theta",
        "theorem",
        "two",
        "interpretation",
        "m_",
        "m_",
        "domain",
        "agree",
        "nonlogical",
        "terminology",
        "sentence",
        "theta",
        "m_vdashtheta",
        "m_vdash",
        "theta",
        "short",
        "satisfaction",
        "sentence",
        "theta",
        "depends",
        "domain",
        "discourse",
        "interpretation",
        "nonlogical",
        "terminology",
        "theta",
        "say",
        "argument",
        "langle",
        "gamma",
        "theta",
        "rangle",
        "semantically",
        "valid",
        "valid",
        "written",
        "gamma",
        "vdash",
        "theta",
        "every",
        "interpretation",
        "m",
        "language",
        "mvdashpsi",
        "every",
        "member",
        "psi",
        "gamma",
        "mvdashtheta",
        "gamma",
        "vdash",
        "theta",
        "also",
        "say",
        "theta",
        "logical",
        "consequence",
        "semantic",
        "consequence",
        "modeltheoretic",
        "consequence",
        "gamma",
        "definition",
        "corresponds",
        "informal",
        "idea",
        "argument",
        "valid",
        "possible",
        "premise",
        "true",
        "conclusion",
        "false",
        "definition",
        "logical",
        "consequence",
        "also",
        "sanction",
        "common",
        "thesis",
        "valid",
        "argument",
        "truthpreserving",
        "extent",
        "satisfaction",
        "represents",
        "truth",
        "officially",
        "argument",
        "lke",
        "valid",
        "conclusion",
        "come",
        "true",
        "every",
        "interpretation",
        "language",
        "premise",
        "true",
        "validity",
        "modeltheoretic",
        "counterpart",
        "deducibility",
        "sentence",
        "theta",
        "logically",
        "true",
        "valid",
        "mvdash",
        "theta",
        "every",
        "interpretation",
        "m",
        "sentence",
        "logically",
        "true",
        "consequence",
        "empty",
        "set",
        "theta",
        "logically",
        "true",
        "set",
        "gamma",
        "sentence",
        "gamma",
        "vdash",
        "theta",
        "logical",
        "truth",
        "modeltheoretic",
        "counterpart",
        "theoremhood",
        "sentence",
        "theta",
        "satisfiable",
        "interpretation",
        "m",
        "mvdash",
        "theta",
        "theta",
        "satisfiable",
        "interpretation",
        "satisfies",
        "set",
        "gamma",
        "sentence",
        "satisfiable",
        "interpretation",
        "m",
        "mvdashtheta",
        "every",
        "sentence",
        "theta",
        "gamma",
        "gamma",
        "set",
        "sentence",
        "mvdash",
        "theta",
        "sentence",
        "theta",
        "gamma",
        "say",
        "m",
        "model",
        "gamma",
        "set",
        "sentence",
        "satisfiable",
        "model",
        "satisfiability",
        "modeltheoretic",
        "counterpart",
        "consistency",
        "notice",
        "gamma",
        "vdash",
        "theta",
        "set",
        "gamma",
        "neg",
        "theta",
        "satisfiable",
        "follows",
        "set",
        "gamma",
        "satisfiable",
        "theta",
        "sentence",
        "gamma",
        "vdash",
        "theta",
        "modeltheoretic",
        "counterpart",
        "ex",
        "falso",
        "quodlibet",
        "see",
        "theorem",
        "following",
        "analogue",
        "theorem",
        "theorem",
        "let",
        "gamma",
        "set",
        "sentence",
        "following",
        "equivalent",
        "gamma",
        "satisfiable",
        "b",
        "sentence",
        "theta",
        "gamma",
        "vdash",
        "theta",
        "gamma",
        "vdash",
        "neg",
        "theta",
        "c",
        "sentence",
        "psi",
        "case",
        "gamma",
        "vdash",
        "psi",
        "proof",
        "rightarrow",
        "b",
        "suppose",
        "gamma",
        "satisfiable",
        "let",
        "theta",
        "sentence",
        "interpretation",
        "m",
        "mvdash",
        "psi",
        "every",
        "member",
        "psi",
        "gamma",
        "clause",
        "negation",
        "mvdash",
        "theta",
        "mvdash",
        "neg",
        "theta",
        "either",
        "langle",
        "gamma",
        "theta",
        "rangle",
        "valid",
        "else",
        "langle",
        "gamma",
        "neg",
        "theta",
        "rangle",
        "valid",
        "b",
        "rightarrow",
        "c",
        "immediate",
        "c",
        "rightarrow",
        "suppose",
        "case",
        "gamma",
        "vdash",
        "psi",
        "interpretation",
        "m",
        "mvdash",
        "theta",
        "every",
        "sentence",
        "theta",
        "gamma",
        "case",
        "mvdash",
        "psi",
        "fortiori",
        "m",
        "satisfies",
        "every",
        "member",
        "gamma",
        "gamma",
        "satisfiable"
    ]
}