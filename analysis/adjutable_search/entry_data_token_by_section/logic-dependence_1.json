{
    "main_text": "Team semantics\n2. Team semantics\n\nTeam semantics, first developed by Wilfrid Hodges in the context of\nindependence friendly logic (Hodges 1997), is a generalization of\nTarski\u2019s semantics for first order logic to the case of multiple\nassignments of elements to variables. Sets of such assignments, called\nteams for historical reasons, constitute the fundamental\nsemantic notion of team semantics, and formulas are satisfied or not\nsatisfied with respect to them rather than with respect to single\nassignments. The connection between team semantics and Tarski\nsemantics is shown by the following result, which holds in dependence\nlogic as well as in all its first order variants:\n\n\nConservativity:\n\nA first order formula is satisfied by a team \\(X\\) (in the sense of\nteam semantics) if and only if all assignments \\(s \\in X\\) satisfy it\n(in the sense of Tarski semantics). \n\n\nMore in general, teams can be understood as belief sets,\nrepresenting the set of all states of the world (=assignments) that\nsome agent believes possible. Then a team \\(X\\) will satisfy some\nformula \\(\\phi\\) if and only if \\(\\phi\\) holds when \\(X\\) is the set\nof all possible states; and in this case, we will write \\(X \\models\n\\phi\\) (or \\(M, X \\models \\phi\\) if the choice of the model \\(M\\) is\nnot clear). In this section, we will examine the rules of team\nsemantics and their interpretation in terms of this principle; then,\nin the next section, we will discuss how it also arises from the\nimperfect-information game-theoretic semantics for dependence\nlogic.\n\nThe condition for the new dependence atoms \\(\\eqord(x_1 \\ldots x_n,\ny)\\), which correspond to the statement that the value of \\(y\\) is a\nfunction of the values of \\(x_1 \\ldots x_n\\), is easily\nunderstood:\n\n\nTS-dep:\n\n\\(X \\models ~\\eqord(x_1 \\ldots x_n, y)\\) if and only if any two\nassignments \\(s_1, s_2 \\in X\\) which agree on the values of \\(x_1\n\\ldots x_n\\) also agree on the value of \\(y\\). \n\n\nFor example, suppose that \\(X\\) is a set of assignments over the three\nvariables \\(x_1\\), \\(x_2\\) and \\(y\\), where \\(x_1\\) represents the\nnationality of a candidate to a position, \\(x_2\\) represents their\nscore (according to a suitable evaluation method) and \\(y\\) represents\nwhether they were accepted or rejected. Then the atom \\(\\eqord(x_2,\ny)\\) corresponds to the statement that the offer is determined by the\nscore alone: if two candidates have the same score they will receive\nexactly the same offer, regardless of any other factor. A special case\nof dependence atom is given by the constancy atoms\n\\(\\eqord(y)\\), which\u2014as per the above semantics\u2014are\nsatisfied by a team if and only if all of its assignments agree over\nthe value of \\(y\\).\n\n\n\n\\[\\begin{array}{l | c c c}\n            \\textbf{assignment}& \\mathbf{x_1} & \\mathbf{x_2} & \\mathbf{y}\\\\\n            \\hline\n            s_0 & 0 & 0 & 0 \\\\\n            s_1 & 0 & 1 & 1 \\\\\n            s_2 & 1 & 0 & 1 \\\\\n            s_3 & 1 & 1 & 2\n    \\end{array}\\]\n\n\n\nTable 1: A team \\(X\\) in which \\(y = x_1\n+ x_2\\). Here \\(y\\) is a function of \\(x_1\\) and \\(x_2\\), and hence\n\\(=\\!\\!(x_1 x_2, y)\\) holds; however, \\(y\\) is not a function of\n\\(x_1\\) alone, so \\(=\\!\\!(x_1, y)\\) does not hold.\n\n\nUnder the same interpretation, the rules for first-order literals and\nconjunctions (for simplicity, we will assume that our expressions are\nin negation normal form; and, as is customary, we will assume that the\nnegations of dependence atoms are never satisfied) are easy to\nderive:\n\n\nTS-lit:\n\nFor all first-order literals \\(\\alpha\\), \\(X \\models \\alpha\\) if and\nonly if for all assignments \\(s \\in X\\), \\(s \\models \\alpha\\) in the\nusual Tarski semantics sense; \n\nTS-\\(\\land\\):\n\n\\(X \\models \\phi \\land \\psi\\) if and only if \\(X \\models \\phi\\) and\n\\(X \\models \\psi\\).\n\n\nIt is worth pointing out that, as we can already see by these rules,\nthe law of the excluded middle does not hold in dependence\nlogic (just as it does not hold in independence friendly logic): for\nexample, if a team \\(X\\) contains both assignments \\(s\\) with \\(s(x) =\ns(y)\\) and assignments \\(s'\\) with \\(s'(x) \\not = s'(y)\\) then \\(X\n\\not \\models x=y\\) and \\(X \\not \\models x\\not = y\\). In this section,\nin any case, we will present the language of dependence logic without\nan explicit negation operator; then, later, we will discuss the\nconsequences of adding it to its language.\n\nWhat about universal quantification? In which circumstances should a\nuniversally quantified expression \\(\\forall v \\psi\\) hold in a team?\nAgain, we must recall the intuition according to which a team\nrepresents a set of possible states of things. If we wish to evaluate\n\\(\\forall v \\psi\\), with respect to which possible states of things\nshould we evaluate \\(\\psi\\)? The natural answer is that we should\nconsider all states of things that differ from ones in \\(X\\) only with\nrespect to the value of \\(v\\). This justifies the following rule:\n\n\nTS-\\(\\forall\\):\n\n\\(X \\models \\forall v \\psi\\) if and only if \\(X[M/v] \\models \\phi\\),\nwhere \\(X[M/v]\\) is the set \\(\\{s' : \\exists s \\in X \\mbox{ s.t. } s'\n\\sim_v x\\}\\) \n\n\nwhere \\(s' \\sim_v s\\) means that the two assignments \\(s\\) and \\(s'\\)\ndiffer from each other at most with respect to the value of the\nvariable \\(v\\).\n\n\n\n\\[     X=\n    \\begin{array}{l | c} \n        \\textbf{assignment} & x\\\\\n        \\hline\n        s_0 & 0\\\\\n        s_1 & 1\n\\end{array}\n\\Rightarrow\n        X[M/y]=\n    \\begin{array}{l | c | c} \n        \\textbf{assignment} & x & y\\\\\n        \\hline\n        s'_0 & 0 & 0\\\\\n        s'_1 & 0 & 1\\\\\n        s'_2 & 1 & 0\\\\\n        s'_3 & 1 & 1\n\\end{array}\\]\n\n\n\nTable 2: \\(X\\) and \\(X[M/y]\\) in a model\nwith two elements \\(0\\) and \\(1\\).\n\n\nLet us now consider disjunction. When should \\(\\phi \\lor \\psi\\) hold?\nTo answer this, let us recall\u2014once again\u2014that teams can be\nunderstood as sets of possible states of things, and that therefore\nthe union of two teams \\(Y\\) and \\(Z\\) represents all states of things\nwhich may occur if \\(Y\\) or \\(Z\\) is the case. Therefore, if the two\nformulas \\(\\phi\\) and \\(\\psi\\) are satisfied by the set of teams\n\\(\\{Y_1 \\ldots Y_n, \\ldots\\}\\) and \\(\\{Z_1 \\ldots Z_n, \\ldots\\}\\)\nrespectively, their disjunction \\(\\phi \\lor \\psi\\) should be satisfied\nby the set of teams \\(\\{Y_i \\cup Z_j : i,j \\in 1, \\ldots\\}\\), or,\nequivalently,\n\n\nTS-\\(\\lor\\):\n\n\\(X \\models \\phi \\lor \\psi\\) if and only if \\(X=Y \\cup Z\\) for two\nteams \\(Y\\) and \\(Z\\) such that \\(Y \\models \\phi\\) and \\(Z \\models\n\\psi\\). \n\n\nIt is worth pointing out here that we do not require, in\ngeneral, that \\(Y\\) and \\(Z\\) are disjoint. Because of the\ndownwards closure property, which we will discuss soon, this\nadditional condition would make no difference for the semantics of\ndependence logic proper; but in the case of certain extensions and\nvariants of dependence logic, that additional requirement would\nconflict with the principle of locality according to which\nthe satisfaction conditions of an expression depend only on the values\nof the variables which occur free in it (Galliani 2012).\n\nIt is also important to note that, in dependence logic, disjunction is\nnot idempotent: for example, \\(\\eqord(x,y) \\lor \\eqord(x,y)\\)\nis not equivalent to \\(\\eqord(x,y)\\), and it is satisfied by a team\n\\(X\\) if and only if for every three assignments in \\(X\\)\nwhich agree on \\(x\\) at least two agree on \\(y\\). This may\nappear somewhat counter-intuitive; but it is a straightforward\nconsequence of the fact that, under our interpretation, \\(\\eqord(x,y)\n\\lor \\eqord(x,y)\\) is to be read as \u201cevery possible state of\nthings comes from one of two sets of states of things, and in both of\nthem \\(y\\) is a function of \\(x\\)\u201d. Since the union of functions\nis not in general a function, it comes to little surprise that\ndisjunction in dependence logic is not idempotent.\n\nFinally, we consider the case of existential quantification. When is\nthe expression \\(\\exists v \\psi\\) satisfied by a team? In order to\nanswer this, we may begin by considering the interpretation of the\nrestriction operator which, given any team \\(X\\), results in\nthe team \\(X_{\\backslash v}\\) obtained by removing the variable \\(v\\)\n(if present) from all assignments \\(s \\in X\\) (and then, since \\(X\\)\nis a set, by collapsing identical assignments). This could be\nunderstood as a forgetting operation, through which we delete\nall information about the value of \\(v\\)\u2014for example, because\nwhat we believed about this value was unreliable, or because this\nvalue has been altered. Now suppose that \\(X_{\\backslash v} =\nY_{\\backslash v}\\): then, in our interpretation, this means that the\nsets of possible states of things represented by \\(X\\) and \\(Y\\)\ndisagree at most with respect to the value of \\(v\\). Thus, if \\(Y\\)\nsatisfies the condition \\(\\phi\\), we may say that \\(X\\) would satisfy\n\\(\\phi\\) if not for the value of \\(y\\), or, equivalently,\nthat \\(X\\) satisfies \\(\\exists v \\psi\\). This justifies the following\nrule:\n\n\nTS-\\(\\exists\\):\n\n\\(X \\models \\exists v \\psi\\) if and only if there exists some \\(Y\\),\nover the variables of \\(X\\) and \\(v\\), such that \\(X_{\\backslash v} =\nY_{\\backslash v}\\) and \\(Y \\models \\psi\\). \n\n\nIt is straightforward to verify that this is the case if and only if\n\\(Y\\) is of the form \\(X[F/y] = \\{s[a/y] : s \\in X, a \\in F(s)\\}\\) for\nsome function \\(F\\) from assignments in \\(X\\) to nonempty sets of\nelements of our model.\n\nIt is worth pointing out here that it is not in general required by\nthe above definition that \\(X\\) and \\(Y\\) contain the same number of\nassignments: a single assignment in \\(X\\) may well correspond to\nmultiple assignments in \\(Y\\), and\u2014if \\(v\\) is already a\nvariable occurring in the assignments of \\(X\\)\u2014a single\nassignment in \\(Y\\) may also correspond to multiple assignments in\n\\(X\\).\n\n\n\n\\[ \n        X=\n    \\begin{array}{l | c} \n        \\textbf{assignment} & x\\\\\n        \\hline\n        s_0 & 0\\\\\n        s_1 & 1\n\\end{array}\n\\Rightarrow\n        X[F/y]=\n    \\begin{array}{l | c | c} \n        \\textbf{assignment} & x & y\\\\\n        \\hline\n        s'_0 & 0 & 0\\\\\n        s'_1 & 0 & 1\\\\\n        s'_2 & 1 & 0\n\\end{array}\\]\n\n\n\nTable 3: \\(X\\) and \\(X[F/y]\\) for\n\\(F(s_0) = \\{0,1\\}\\), \\(F(s_1) = \\{0\\}\\)\n\n\nWe will postpone an in-depth discussion of the properties of\ndependence logic to after the specification of its game-theoretic\nsemantics. However, we conclude this section with the following three\nimportant consequences of the above-given rules:\n\n\nLocality:\n\nIf the restrictions of \\(X\\) and \\(Y\\) to the variables occurring free\nin \\(\\phi\\) are the same then \\(X \\models \\phi\\) if and only if \\(Y\n\\models \\phi\\). \n\nDownwards closure:\n\nIf \\(X \\models \\phi\\) and \\(Y \\subseteq X\\) then \\(Y \\models \\phi\\).\n\n\nEmpty set property:\n\nIf \\(\\emptyset\\) is the team containing no assignments then\n\\(\\emptyset \\models \\phi\\) for all dependence logic formulas \\(\\phi\\).\n\n\n\nThe locality principle, together with the conservativity principle\nmentioned at the beginning of this section, constitutes an important\n\u201csanity condition\u201d that any variant and extension of\ndependence logic should satisfy. The same cannot be said about\ndownwards closure and the empty set property, which\u2014as we will\nsee\u2014are violated by variants of dependence logic.\n\nFinally, we need to define the truth of a dependence logic\nsentence with respect to a model. Since a sentence has no free\nvariables, by the locality principle we have at once that either all\nnonempty teams satisfy it or no nonempty team satisfies it. This is\nanalogous to the case of Tarski\u2019s semantics, in which a sentence\nis either satisfied by all variable assignments or by none of them.\nThus, we can define truth in the usual way:\n\n\nTruth in team semantics:\n\nA sentence \\(\\phi\\) is true in a model \\(M\\) if and only if \\(M,\n\\{\\emptyset\\} \\models \\phi\\), where \\(\\{\\emptyset\\}\\) is the team\ncontaining only the empty assignment. In this case, we write that \\(M\n\\models \\phi\\). \n\n",
    "section_title": "2. Team semantics",
    "entry_title": "Dependence Logic",
    "hierarchy_title": "Dependence Logic || Team semantics",
    "tokenized_text": [
        "team",
        "semantics",
        "team",
        "semantics",
        "team",
        "semantics",
        "first",
        "developed",
        "wilfrid",
        "hodges",
        "context",
        "independence",
        "friendly",
        "logic",
        "hodges",
        "generalization",
        "tarski",
        "semantics",
        "first",
        "order",
        "logic",
        "case",
        "multiple",
        "assignment",
        "element",
        "variable",
        "set",
        "assignment",
        "called",
        "team",
        "historical",
        "reason",
        "constitute",
        "fundamental",
        "semantic",
        "notion",
        "team",
        "semantics",
        "formula",
        "satisfied",
        "satisfied",
        "respect",
        "rather",
        "respect",
        "single",
        "assignment",
        "connection",
        "team",
        "semantics",
        "tarski",
        "semantics",
        "shown",
        "following",
        "result",
        "hold",
        "dependence",
        "logic",
        "well",
        "first",
        "order",
        "variant",
        "conservativity",
        "first",
        "order",
        "formula",
        "satisfied",
        "team",
        "x",
        "sense",
        "team",
        "semantics",
        "assignment",
        "in",
        "x",
        "satisfy",
        "sense",
        "tarski",
        "semantics",
        "general",
        "team",
        "understood",
        "belief",
        "set",
        "representing",
        "set",
        "state",
        "world",
        "assignments",
        "agent",
        "belief",
        "possible",
        "team",
        "x",
        "satisfy",
        "formula",
        "phi",
        "phi",
        "hold",
        "x",
        "set",
        "possible",
        "state",
        "case",
        "write",
        "x",
        "models",
        "phi",
        "x",
        "models",
        "phi",
        "choice",
        "model",
        "m",
        "clear",
        "section",
        "examine",
        "rule",
        "team",
        "semantics",
        "interpretation",
        "term",
        "principle",
        "next",
        "section",
        "discus",
        "also",
        "arises",
        "imperfectinformation",
        "gametheoretic",
        "semantics",
        "dependence",
        "logic",
        "condition",
        "new",
        "dependence",
        "atom",
        "eqord",
        "x_",
        "ldots",
        "x_n",
        "correspond",
        "statement",
        "value",
        "y",
        "function",
        "value",
        "x_",
        "ldots",
        "x_n",
        "easily",
        "understood",
        "tsdep",
        "x",
        "models",
        "eqord",
        "x_",
        "ldots",
        "x_n",
        "two",
        "assignment",
        "s_",
        "s_",
        "in",
        "x",
        "agree",
        "value",
        "x_",
        "ldots",
        "x_n",
        "also",
        "agree",
        "value",
        "y",
        "example",
        "suppose",
        "x",
        "set",
        "assignment",
        "three",
        "variable",
        "x_",
        "x_",
        "y",
        "x_",
        "represents",
        "nationality",
        "candidate",
        "position",
        "x_",
        "represents",
        "score",
        "according",
        "suitable",
        "evaluation",
        "method",
        "y",
        "represents",
        "whether",
        "accepted",
        "rejected",
        "atom",
        "eqord",
        "x_",
        "corresponds",
        "statement",
        "offer",
        "determined",
        "score",
        "alone",
        "two",
        "candidate",
        "score",
        "receive",
        "exactly",
        "offer",
        "regardless",
        "factor",
        "special",
        "case",
        "dependence",
        "atom",
        "given",
        "constancy",
        "atom",
        "eqord",
        "whichas",
        "per",
        "semanticsare",
        "satisfied",
        "team",
        "assignment",
        "agree",
        "value",
        "y",
        "begin",
        "array",
        "l",
        "c",
        "c",
        "c",
        "textbf",
        "assignment",
        "mathbf",
        "x_",
        "mathbf",
        "x_",
        "mathbf",
        "hline",
        "s_",
        "s_",
        "s_",
        "s_",
        "end",
        "array",
        "table",
        "team",
        "x",
        "x_",
        "x_",
        "y",
        "function",
        "x_",
        "x_",
        "hence",
        "x_",
        "x_",
        "hold",
        "however",
        "y",
        "function",
        "x_",
        "alone",
        "x_",
        "hold",
        "interpretation",
        "rule",
        "firstorder",
        "literal",
        "conjunction",
        "simplicity",
        "assume",
        "expression",
        "negation",
        "normal",
        "form",
        "customary",
        "assume",
        "negation",
        "dependence",
        "atom",
        "never",
        "satisfied",
        "easy",
        "derive",
        "tslit",
        "firstorder",
        "literal",
        "alpha",
        "x",
        "models",
        "alpha",
        "assignment",
        "in",
        "x",
        "models",
        "alpha",
        "usual",
        "tarski",
        "semantics",
        "sense",
        "ts",
        "land",
        "x",
        "models",
        "phi",
        "land",
        "psi",
        "x",
        "models",
        "phi",
        "x",
        "models",
        "psi",
        "worth",
        "pointing",
        "already",
        "see",
        "rule",
        "law",
        "excluded",
        "middle",
        "hold",
        "dependence",
        "logic",
        "hold",
        "independence",
        "friendly",
        "logic",
        "example",
        "team",
        "x",
        "contains",
        "assignment",
        "s",
        "x",
        "assignment",
        "s",
        "x",
        "not",
        "x",
        "not",
        "models",
        "xy",
        "x",
        "not",
        "models",
        "xnot",
        "y",
        "section",
        "case",
        "present",
        "language",
        "dependence",
        "logic",
        "without",
        "explicit",
        "negation",
        "operator",
        "later",
        "discus",
        "consequence",
        "adding",
        "language",
        "universal",
        "quantification",
        "circumstance",
        "universally",
        "quantified",
        "expression",
        "forall",
        "v",
        "psi",
        "hold",
        "team",
        "must",
        "recall",
        "intuition",
        "according",
        "team",
        "represents",
        "set",
        "possible",
        "state",
        "thing",
        "wish",
        "evaluate",
        "forall",
        "v",
        "psi",
        "respect",
        "possible",
        "state",
        "thing",
        "evaluate",
        "psi",
        "natural",
        "answer",
        "consider",
        "state",
        "thing",
        "differ",
        "one",
        "x",
        "respect",
        "value",
        "v",
        "justifies",
        "following",
        "rule",
        "ts",
        "forall",
        "x",
        "models",
        "forall",
        "v",
        "psi",
        "x",
        "mv",
        "models",
        "phi",
        "x",
        "mv",
        "set",
        "exists",
        "in",
        "x",
        "mbox",
        "st",
        "sim_v",
        "x",
        "sim_v",
        "s",
        "mean",
        "two",
        "assignment",
        "s",
        "s",
        "differ",
        "respect",
        "value",
        "variable",
        "v",
        "x",
        "begin",
        "array",
        "l",
        "c",
        "textbf",
        "assignment",
        "x",
        "hline",
        "s_",
        "s_",
        "end",
        "array",
        "rightarrow",
        "x",
        "my",
        "begin",
        "array",
        "l",
        "c",
        "c",
        "textbf",
        "assignment",
        "x",
        "y",
        "hline",
        "s_",
        "s_",
        "s_",
        "s_",
        "end",
        "array",
        "table",
        "x",
        "x",
        "my",
        "model",
        "two",
        "element",
        "let",
        "u",
        "consider",
        "disjunction",
        "phi",
        "lor",
        "psi",
        "hold",
        "answer",
        "let",
        "u",
        "recallonce",
        "againthat",
        "team",
        "understood",
        "set",
        "possible",
        "state",
        "thing",
        "therefore",
        "union",
        "two",
        "team",
        "y",
        "z",
        "represents",
        "state",
        "thing",
        "may",
        "occur",
        "y",
        "z",
        "case",
        "therefore",
        "two",
        "formula",
        "phi",
        "psi",
        "satisfied",
        "set",
        "team",
        "y_",
        "ldots",
        "y_n",
        "ldots",
        "z_",
        "ldots",
        "z_n",
        "ldots",
        "respectively",
        "disjunction",
        "phi",
        "lor",
        "psi",
        "satisfied",
        "set",
        "team",
        "y_i",
        "cup",
        "z_j",
        "j",
        "in",
        "ldots",
        "equivalently",
        "ts",
        "lor",
        "x",
        "models",
        "phi",
        "lor",
        "psi",
        "xy",
        "cup",
        "z",
        "two",
        "team",
        "y",
        "z",
        "models",
        "phi",
        "z",
        "models",
        "psi",
        "worth",
        "pointing",
        "require",
        "general",
        "y",
        "z",
        "disjoint",
        "downwards",
        "closure",
        "property",
        "discus",
        "soon",
        "additional",
        "condition",
        "would",
        "make",
        "difference",
        "semantics",
        "dependence",
        "logic",
        "proper",
        "case",
        "certain",
        "extension",
        "variant",
        "dependence",
        "logic",
        "additional",
        "requirement",
        "would",
        "conflict",
        "principle",
        "locality",
        "according",
        "satisfaction",
        "condition",
        "expression",
        "depend",
        "value",
        "variable",
        "occur",
        "free",
        "galliani",
        "also",
        "important",
        "note",
        "dependence",
        "logic",
        "disjunction",
        "idempotent",
        "example",
        "eqord",
        "x",
        "lor",
        "eqord",
        "x",
        "equivalent",
        "eqord",
        "x",
        "satisfied",
        "team",
        "x",
        "every",
        "three",
        "assignment",
        "x",
        "agree",
        "x",
        "least",
        "two",
        "agree",
        "y",
        "may",
        "appear",
        "somewhat",
        "counterintuitive",
        "straightforward",
        "consequence",
        "fact",
        "interpretation",
        "eqord",
        "x",
        "lor",
        "eqord",
        "x",
        "read",
        "every",
        "possible",
        "state",
        "thing",
        "come",
        "one",
        "two",
        "set",
        "state",
        "thing",
        "y",
        "function",
        "x",
        "since",
        "union",
        "function",
        "general",
        "function",
        "come",
        "little",
        "surprise",
        "disjunction",
        "dependence",
        "logic",
        "idempotent",
        "finally",
        "consider",
        "case",
        "existential",
        "quantification",
        "expression",
        "exists",
        "v",
        "psi",
        "satisfied",
        "team",
        "order",
        "answer",
        "may",
        "begin",
        "considering",
        "interpretation",
        "restriction",
        "operator",
        "given",
        "team",
        "x",
        "result",
        "team",
        "x_",
        "backslash",
        "v",
        "obtained",
        "removing",
        "variable",
        "v",
        "present",
        "assignment",
        "in",
        "x",
        "since",
        "x",
        "set",
        "collapsing",
        "identical",
        "assignment",
        "could",
        "understood",
        "forgetting",
        "operation",
        "delete",
        "information",
        "value",
        "v",
        "for",
        "example",
        "believed",
        "value",
        "unreliable",
        "value",
        "altered",
        "suppose",
        "x_",
        "backslash",
        "v",
        "y_",
        "backslash",
        "v",
        "interpretation",
        "mean",
        "set",
        "possible",
        "state",
        "thing",
        "represented",
        "x",
        "y",
        "disagree",
        "respect",
        "value",
        "v",
        "thus",
        "y",
        "satisfies",
        "condition",
        "phi",
        "may",
        "say",
        "x",
        "would",
        "satisfy",
        "phi",
        "value",
        "y",
        "equivalently",
        "x",
        "satisfies",
        "exists",
        "v",
        "psi",
        "justifies",
        "following",
        "rule",
        "ts",
        "exists",
        "x",
        "models",
        "exists",
        "v",
        "psi",
        "exists",
        "y",
        "variable",
        "x",
        "v",
        "x_",
        "backslash",
        "v",
        "y_",
        "backslash",
        "v",
        "models",
        "psi",
        "straightforward",
        "verify",
        "case",
        "y",
        "form",
        "x",
        "fy",
        "ay",
        "in",
        "x",
        "in",
        "f",
        "function",
        "f",
        "assignment",
        "x",
        "nonempty",
        "set",
        "element",
        "model",
        "worth",
        "pointing",
        "general",
        "required",
        "definition",
        "x",
        "y",
        "contain",
        "number",
        "assignment",
        "single",
        "assignment",
        "x",
        "may",
        "well",
        "correspond",
        "multiple",
        "assignment",
        "y",
        "andif",
        "v",
        "already",
        "variable",
        "occurring",
        "assignment",
        "x",
        "a",
        "single",
        "assignment",
        "y",
        "may",
        "also",
        "correspond",
        "multiple",
        "assignment",
        "x",
        "x",
        "begin",
        "array",
        "l",
        "c",
        "textbf",
        "assignment",
        "x",
        "hline",
        "s_",
        "s_",
        "end",
        "array",
        "rightarrow",
        "x",
        "fy",
        "begin",
        "array",
        "l",
        "c",
        "c",
        "textbf",
        "assignment",
        "x",
        "y",
        "hline",
        "s_",
        "s_",
        "s_",
        "end",
        "array",
        "table",
        "x",
        "x",
        "fy",
        "f",
        "s_",
        "f",
        "s_",
        "postpone",
        "indepth",
        "discussion",
        "property",
        "dependence",
        "logic",
        "specification",
        "gametheoretic",
        "semantics",
        "however",
        "conclude",
        "section",
        "following",
        "three",
        "important",
        "consequence",
        "abovegiven",
        "rule",
        "locality",
        "restriction",
        "x",
        "y",
        "variable",
        "occurring",
        "free",
        "phi",
        "x",
        "models",
        "phi",
        "models",
        "phi",
        "downwards",
        "closure",
        "x",
        "models",
        "phi",
        "subseteq",
        "x",
        "models",
        "phi",
        "empty",
        "set",
        "property",
        "emptyset",
        "team",
        "containing",
        "assignment",
        "emptyset",
        "models",
        "phi",
        "dependence",
        "logic",
        "formula",
        "phi",
        "locality",
        "principle",
        "together",
        "conservativity",
        "principle",
        "mentioned",
        "beginning",
        "section",
        "constitutes",
        "important",
        "sanity",
        "condition",
        "variant",
        "extension",
        "dependence",
        "logic",
        "satisfy",
        "said",
        "downwards",
        "closure",
        "empty",
        "set",
        "property",
        "whichas",
        "seeare",
        "violated",
        "variant",
        "dependence",
        "logic",
        "finally",
        "need",
        "define",
        "truth",
        "dependence",
        "logic",
        "sentence",
        "respect",
        "model",
        "since",
        "sentence",
        "free",
        "variable",
        "locality",
        "principle",
        "either",
        "nonempty",
        "team",
        "satisfy",
        "nonempty",
        "team",
        "satisfies",
        "analogous",
        "case",
        "tarski",
        "semantics",
        "sentence",
        "either",
        "satisfied",
        "variable",
        "assignment",
        "none",
        "thus",
        "define",
        "truth",
        "usual",
        "way",
        "truth",
        "team",
        "semantics",
        "sentence",
        "phi",
        "true",
        "model",
        "m",
        "emptyset",
        "models",
        "phi",
        "emptyset",
        "team",
        "containing",
        "empty",
        "assignment",
        "case",
        "write",
        "models",
        "phi"
    ]
}